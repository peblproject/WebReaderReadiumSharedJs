define("readium_plugin_PEBL/body", [], function() {
    var define = null;

    /*
 *  Copyright 2011 Alexandru Craciun, Eyal Kaspi
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**** Functionality in Java, but not in JS ********
 * methods added to JS prototypes
 */

var stjs={};

stjs.NOT_IMPLEMENTED = function(){
	throw "This method is not implemented in Javascript.";
};

stjs.JavalikeEquals = function(value){
	if (value == null)
		return false;
	if (value.valueOf)
		return this.valueOf() === value.valueOf();
	return this === value;
};

stjs.JavalikeGetClass = function(){
	return this.constructor;
};

/* String */
if (!String.prototype.equals) {
	String.prototype.equals=stjs.JavalikeEquals;
}
if (!String.prototype.getBytes) {
	String.prototype.getBytes=stjs.NOT_IMPLEMENTED;
}
if (!String.prototype.getChars) {
	String.prototype.getChars=stjs.NOT_IMPLEMENTED;
}
if (!String.prototype.contentEquals){
	String.prototype.contentEquals=stjs.NOT_IMPLEMENTED;
}
if (!String.prototype.startsWith) {
	String.prototype.startsWith=function(start, from){
		var f = from != null ? from : 0;
		return this.substring(f, f + start.length) == start;
	}
}
if (!String.prototype.endsWith) {
	String.prototype.endsWith=function(end){
		if (end == null)
			return false;
		if (this.length < end.length)
			return false;
		return this.substring(this.length - end.length, this.length) == end;
	}
}
if (!String.prototype.trim) {
	stjs.trimLeftRegExp = /^\s+/;
	stjs.trimRightRegExp = /\s+$/;
	String.prototype.trim = function() {
		return this.replace(stjs.trimLeftRegExp, "").replace(stjs.trimRightRegExp, "");
	}
}
if (!String.prototype.matches){
	String.prototype.matches=function(regexp){
		return this.match("^" + regexp + "$") != null;
	}
}
if (!String.prototype.compareTo){
	String.prototype.compareTo=function(other){
		if (other == null)
			return 1;
		if (this < other)
			return -1;
		if (this == other)
			return 0;
		return 1;
	}
}

if (!String.prototype.compareToIgnoreCase){
	String.prototype.compareToIgnoreCase=function(other){
		if (other == null)
			return 1;
		return this.toLowerCase().compareTo(other.toLowerCase());
	}
}

if (!String.prototype.equalsIgnoreCase){
	String.prototype.equalsIgnoreCase=function(other){
		if (other == null)
			return false;
		return this.toLowerCase() === other.toLowerCase();
	}
}

if (!String.prototype.codePointAt){
	String.prototype.codePointAt=String.prototype.charCodeAt;
}

if (!String.prototype.codePointBefore){
	String.prototype.codePointBefore=stjs.NOT_IMPLEMENTED;
}
if (!String.prototype.codePointCount){
	String.prototype.codePointCount=stjs.NOT_IMPLEMENTED;
}

if (!String.prototype.replaceAll){
	String.prototype.replaceAll=function(regexp, replace){
		return this.replace(new RegExp(regexp, "g"), replace);
	}
}

if (!String.prototype.replaceFirst){
	String.prototype.replaceFirst=function(regexp, replace){
		return this.replace(new RegExp(regexp), replace);
	}
}

if (!String.prototype.regionMatches){
	String.prototype.regionMatches=function(ignoreCase, toffset, other, ooffset, len){
		if (arguments.length == 4){
			len=arguments[3];
			ooffset=arguments[2];
			other=arguments[1];
			toffset=arguments[0];
			ignoreCase=false;
		}
		if (toffset < 0 || ooffset < 0 || other == null || toffset + len > this.length || ooffset + len > other.length)
			return false;
		var s1 = this.substring(toffset, toffset + len);
		var s2 = other.substring(ooffset, ooffset + len);
		return ignoreCase ? s1.equalsIgnoreCase(s2) : s1 === s2;
	}
}

if(!String.prototype.contains){
	String.prototype.contains=function(it){
		return this.indexOf(it)>=0;
	};
}

if(!String.prototype.getClass){
	String.prototype.getClass=stjs.JavalikeGetClass;
}


//force valueof to match the Java's behavior
String.valueOf=function(value){
	return new String(value);
};

/* Number */
var Byte=Number;
var Double=Number;
var Float=Number;
var Integer=Number;
var Long=Number;
var Short=Number;

/* type conversion - approximative as Javascript only has integers and doubles */
if (!Number.prototype.intValue) {
	Number.prototype.intValue=function(){
		return parseInt(this);
	}
}
if (!Number.prototype.shortValue) {
	Number.prototype.shortValue=function(){
		return parseInt(this);
	}
}
if (!Number.prototype.longValue) {
	Number.prototype.longValue=function(){
		return parseInt(this);
	}
}
if (!Number.prototype.byteValue) {
	Number.prototype.byteValue=function(){
		return parseInt(this);
	}
}

if (!Number.prototype.floatValue) {
	Number.prototype.floatValue=function(){
		return parseFloat(this);
	}
}

if (!Number.prototype.doubleValue) {
	Number.prototype.doubleValue=function(){
		return parseFloat(this);
	}
}

if (!Number.parseInt) {
	Number.parseInt = parseInt;
}
if (!Number.parseShort) {
	Number.parseShort = parseInt;
}
if (!Number.parseLong) {
	Number.parseLong = parseInt;
}
if (!Number.parseByte) {
	Number.parseByte = parseInt;
}

if (!Number.parseDouble) {
	Number.parseDouble = parseFloat;
}

if (!Number.parseFloat) {
	Number.parseFloat = parseFloat;
}

if (!Number.isNaN) {
	Number.isNaN = isNaN;
}

if (!Number.prototype.isNaN) {
	Number.prototype.isNaN = function() {
		return isNaN(this);
	}
}
if (!Number.prototype.equals) {
	Number.prototype.equals=stjs.JavalikeEquals;
}
if(!Number.prototype.getClass){
	Number.prototype.getClass=stjs.JavalikeGetClass;
}

//force valueof to match approximately the Java's behavior (for Integer.valueOf it returns in fact a double)
Number.valueOf=function(value){
	return new Number(value).valueOf();
}

/* Boolean */
if (!Boolean.prototype.equals) {
	Boolean.prototype.equals=stjs.JavalikeEquals;
}
if(!Boolean.prototype.getClass){
	Boolean.prototype.getClass=stjs.JavalikeGetClass;
}

//force valueof to match the Java's behavior
Boolean.valueOf=function(value){
	return new Boolean(value).valueOf();
}



/************* STJS helper functions ***************/
stjs.global=this;
stjs.skipCopy = {"prototype":true, "constructor": true, "$typeDescription":true, "$inherit" : true};

stjs.ns=function(path){
	var p = path.split(".");
	var obj = stjs.global;
	for(var i = 0; i < p.length; ++i){
		var part = p[i];
		obj = obj[part] = obj[part] || {};
	}
	return obj;
};

stjs.copyProps=function(from, to){
	for(var key in from){
		if (!stjs.skipCopy[key])
			to[key]	= from[key];
	}
	return to;
};

stjs.copyInexistentProps=function(from, to){
	for(var key in from){
		if (!stjs.skipCopy[key] && !to[key])
			to[key]	= from[key];
	}
	return to;
};

stjs.extend=function(_constructor, _super, _implements, _initializer, _typeDescription, _annotations){
	if(typeof(_typeDescription) !== "object"){
		// stjs 1.3+ always passes an non-null object to _typeDescription => The code calling stjs.extend
		// was generated with version 1.2 or earlier, so let's call the 1.2 version of stjs.extend
		return stjs.extend12.apply(this, arguments);
	}

	_constructor.$inherit=[];

	if(_super != null){
		// I is used as a no-op constructor that has the same prototype as _super
		// we do this because we cannot predict the result of calling new _super()
		// without parameters (it might throw an exception).
		// Basically, the following 3 lines are a safe equivalent for
		// _constructor.prototype = new _super();
		var I = function(){};
		I.prototype	= _super.prototype;
		_constructor.prototype	= new I();

		// copy static properties for super
		// assign every method from proto instance
		stjs.copyProps(_super, _constructor);
		stjs.copyProps(_super.$typeDescription, _typeDescription);
		stjs.copyProps(_super.$annotations, _annotations);

		//add the super class to inherit array
		_constructor.$inherit.push(_super);
	}

	// copy static properties and default methods from interfaces
	for(var a = 0; a < _implements.length; ++a){
		if (!_implements[a]) continue;
		stjs.copyProps(_implements[a], _constructor);
		stjs.copyInexistentProps(_implements[a].prototype, _constructor.prototype);
		_constructor.$inherit.push(_implements[a]);
	}

	// remember the correct constructor
	_constructor.prototype.constructor	= _constructor;

	// run the initializer to assign all static and instance variables/functions
	if(_initializer != null){
		_initializer(_constructor, _constructor.prototype);
	}

	_constructor.$typeDescription = _typeDescription;
	_constructor.$annotations = _annotations;

	// add the default equals method if it is not present yet, and we don't have a superclass
	if(_super == null){
		if(!_constructor.prototype.equals) {
			_constructor.prototype.equals = stjs.JavalikeEquals;
		}
		if(!_constructor.prototype.getClass) {
			_constructor.prototype.getClass = stjs.JavalikeGetClass;
		}
	}

	// build package and assign
	return	_constructor;
};

/**
 * 1.2 and earlier version of stjs.extend. Included for backwards compatibility
 */
stjs.extend12=function( _constructor,  _super, _implements){
	var I = function(){};
	I.prototype	= _super.prototype;
	_constructor.prototype	= new I();

	//copy static properties for super and interfaces
	// assign every method from proto instance
	for(var a = 1; a < arguments.length; ++a){
		stjs.copyProps(arguments[a], _constructor);
	}
	// remember the correct constructor
	_constructor.prototype.constructor	= _constructor;

	// add the default equals method if we don't have a superclass. Code generated with version 1.2 will
	// override this method is equals() is present in the original java code.
	// this was not part of the original 1.2 version of extends, however forward compatibility
	// with 1.3 requires it
	if(_super == null){
		_constructor.prototype.equals = stjs.JavalikeEquals;
		_constructor.prototype.getClass = stjs.JavalikeGetClass;
	}

	// build package and assign
	return	_constructor;
};

/**
 * return type's annotations
 */
stjs.getAnnotations = function(clz) {
	return clz.$annotations;
};

stjs.getTypeAnnotation = function(clz, annType) {
	var ann = clz.$annotations._;
	return ann ? ann[annType]: null;
};

stjs.getMemberAnnotation = function(clz, memberName, annType) {
	var ann = clz.$annotations.memberName;
	return ann ? ann[annType]: null;
};

stjs.getParameterAnnotation = function(clz, methodName, idx, annType) {
	var ann = clz.$annotations[methodName + "$" + idx];
	return ann ? ann[annType]: null;
};

/**
 * checks if the child is an instanceof parent. it checks recursively if "parent" is the child itself or it's found somewhere in the $inherit array
 */
stjs.isInstanceOf=function(child, parent){
	if (child == null)
		return false;
	if (child === parent)
		return true;
	if (!child.$inherit)
		return false;
	for(var i = 0; i < child.$inherit.length; ++i){
		if (stjs.isInstanceOf(child.$inherit[i], parent)) {
			return true;
		}
	}
	return false;
}

stjs.enumEntry=function(idx, name){
	this._name = name;
	this._ordinal = idx;
};

stjs.enumEntry.prototype.name=function(){
	return this._name;
};
stjs.enumEntry.prototype.ordinal=function(){
	return this._ordinal;
};
stjs.enumEntry.prototype.toString=function(){
	return this._name;
};
stjs.enumEntry.prototype.equals=stjs.JavalikeEquals;

stjs.enumeration=function(){
	var i;
	var e = {};
	e._values = [];
	for(i = 0; i < arguments.length; ++i){
		e[arguments[i]] = new stjs.enumEntry(i, arguments[i]);
		e._values[i] = e[arguments[i]];
	}
	e.values = function(){return this._values;};
	e.valueOf=function(label){
		return this[label];
	}
	return e;
};


/**
 * if true the execution of generated main methods is disabled.
 * this is useful when executing unit tests, to no have the main methods executing before the tests
 */
stjs.mainCallDisabled = false;

stjs.exception=function(err){
	return err;
};

stjs.isEnum=function(obj){
	return obj != null && obj.constructor == stjs.enumEntry;
};

if (typeof Math.trunc === "function") {
	stjs.trunc = Math.trunc;
} else {
	stjs.trunc=function(n) {
		if (n == null)
			return null;
		return n >= 0 ? Math.floor(n) : Math.ceil(n);
	}
}

stjs.converters = {
	Date : function(s, type) {
		var a = /^(\d{4})-(\d{2})-(\d{2}) (\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)$/
				.exec(s);
		if (a) {
			return new Date(+a[1], +a[2] - 1, +a[3], +a[4], +a[5], +a[6]);
		}
		return null;
	},

	Enum : function(s, type){
		return eval(type.arguments[0])[s];
	}
};


stjs.serializers = {
	Date : function(d, type) {
		function pad(n){
			return n < 10 ? "0" + n : "" + n;
		}
		if (d) {
			return "" + d.getFullYear() + "-" + pad(d.getMonth()+1) + "-" + pad(d.getDate()) + " " + pad(d.getHours()) + ":" + pad(d.getMinutes()) + ":" + pad(d.getSeconds());
		}
		return null;
	},

	Enum : function(e, type){
		return e != null ? e.toString() : null;
	}
};

/**
 * Used to be able to send method references and lambdas that capture 'this' as callbacks.
 * This method has a bunch of different usage patterns:
 *
 * bind(instance, "methodName"):
 *     Used when translating a capturing method reference (eg: instance::methodName), or when translating
 *
 * bind(this, function):
 *     Used when translating a lambda that uses 'this' explicitly or implicitly (eg: () -> this.doSomething(3))
 *
 * bind(this, function, specialTHISparamPosition)
 *     Used when translating a lambda that uses the special all-caps 'THIS' parameter
 *
 * bind("methodName")
 *     Used when translating a non-static method reference (eg: TypeName::methodName, where methodName is non-static)
 */
stjs.bind=function(obj, method, thisParamPos) {
	var useFirstParamAsContext = false;
	if(method == null) {
		// the bind("methodName") is the only usage where the method argument can be null
		method = obj;
		obj = null;
		useFirstParamAsContext = true;
	}
	var addThisToParameters = thisParamPos != null;

	var f = function(){
		var args = arguments;
		if (addThisToParameters) {
			Array.prototype.splice.call(args, thisParamPos, 0, this);
		}
		if(useFirstParamAsContext){
			obj = Array.prototype.shift.call(args);
		}

		if (typeof method === "string") {
			return obj[method].apply(obj, args);

		} else {
			return method.apply(obj, args);
		}
	};
	return f;
};


/** *********** global ************** */
function exception(err){
	return err;
}

function isEnum(obj){
	return obj != null && obj.constructor == stjs.enumEntry;
}

/******* parsing *************/

/**
 * parse a json string using the type definition to build a typed object hierarchy
 */
stjs.parseJSON = (function () {
	  var number
	      = '(?:-?\\b(?:0|[1-9][0-9]*)(?:\\.[0-9]+)?(?:[eE][+-]?[0-9]+)?\\b)';
	  var oneChar = '(?:[^\\0-\\x08\\x0a-\\x1f\"\\\\]'
	      + '|\\\\(?:[\"/\\\\bfnrt]|u[0-9A-Fa-f]{4}))';
	  var string = '(?:\"' + oneChar + '*\")';

	  // Will match a value in a well-formed JSON file.
	  // If the input is not well-formed, may match strangely, but not in an unsafe
	  // way.
	  // Since this only matches value tokens, it does not match whitespace, colons,
	  // or commas.
	  var jsonToken = new RegExp(
	      '(?:false|true|null|[\\{\\}\\[\\]]'
	      + '|' + number
	      + '|' + string
	      + ')', 'g');

	  // Matches escape sequences in a string literal
	  var escapeSequence = new RegExp('\\\\(?:([^u])|u(.{4}))', 'g');

	  // Decodes escape sequences in object literals
	  var escapes = {
	    '"': '"',
	    '/': '/',
	    '\\': '\\',
	    'b': '\b',
	    'f': '\f',
	    'n': '\n',
	    'r': '\r',
	    't': '\t'
	  };
	  function unescapeOne(_, ch, hex) {
	    return ch ? escapes[ch] : String.fromCharCode(parseInt(hex, 16));
	  }

	  var constructors = {};

	  function constr(name, param){
		  var c = constructors[name];
		  if (!c)
			  constructors[name] = c = eval(name);
		  return new c(param);
	  }

	  function convert(type, json){
		  if (!type)
			  return json;
		  var cv = stjs.converters[type.name || type];
		  if (cv)
			  return cv(json, type);
		  //hopefully the type has a string constructor
		 return constr(type, json);
	  }

	  function builder(type){
		  if (!type)
			  return {};
			if (typeof type == "function")
				return new type();
			if (type.name) {
				if (type.name == "Map")
					return {};
				if (type.name == "Array")
					return [];
				return constr(type.name);
			}
			return constr(type);
	  }

	  // A non-falsy value that coerces to the empty string when used as a key.
	  var EMPTY_STRING = new String('');
	  var SLASH = '\\';

	  // Constructor to use based on an open token.
	  var firstTokenCtors = { '{': Object, '[': Array };

	  var hop = Object.hasOwnProperty;

	  function nextMatch(str){
		  var m = jsonToken.exec(str);
		  return m != null ? m[0] : null;
	  }
	  return function (json, type) {
	    // Split into tokens
	    // Construct the object to return
	    var result;
	    var tok = nextMatch(json);
	    var topLevelPrimitive = false;
	    if ('{' === tok) {
	      result = builder(type, null);
	    } else if ('[' === tok) {
	      result = [];
	    } else {
	      // The RFC only allows arrays or objects at the top level, but the JSON.parse
	      // defined by the EcmaScript 5 draft does allow strings, booleans, numbers, and null
	      // at the top level.
	      result = [];
	      topLevelPrimitive = true;
	    }

	    // If undefined, the key in an object key/value record to use for the next
	    // value parsed.
	    var key;
	    // Loop over remaining tokens maintaining a stack of uncompleted objects and
	    // arrays.
	    var stack = [result];
	    var stack2 = [type];
	    for (tok = nextMatch(json); tok != null; tok = nextMatch(json)) {

	      var cont;
	      switch (tok.charCodeAt(0)) {
	        default:  // sign or digit
	          cont = stack[0];
	          cont[key || cont.length] = +(tok);
	          key = void 0;
	          break;
	        case 0x22:  // '"'
	          tok = tok.substring(1, tok.length - 1);
	          if (tok.indexOf(SLASH) !== -1) {
	            tok = tok.replace(escapeSequence, unescapeOne);
	          }
	          cont = stack[0];
	          if (!key) {
	            if (cont instanceof Array) {
	              key = cont.length;
	            } else {
	              key = tok || EMPTY_STRING;  // Use as key for next value seen.
	              stack2[0] = cont.constructor.$typeDescription ? cont.constructor.$typeDescription[key] : stack2[1].arguments[1];
	              break;
	            }
	          }
	          cont[key] = convert(stack2[0],tok);
	          key = void 0;
	          break;
	        case 0x5b:  // '['
	          cont = stack[0];
	          stack.unshift(cont[key || cont.length] = []);
	          stack2.unshift(stack2[0].arguments[0]);
	          //put the element type desc
	          key = void 0;
	          break;
	        case 0x5d:  // ']'
	          stack.shift();
	          stack2.shift();
	          break;
	        case 0x66:  // 'f'
	          cont = stack[0];
	          cont[key || cont.length] = false;
	          key = void 0;
	          break;
	        case 0x6e:  // 'n'
	          cont = stack[0];
	          cont[key || cont.length] = null;
	          key = void 0;
	          break;
	        case 0x74:  // 't'
	          cont = stack[0];
	          cont[key || cont.length] = true;
	          key = void 0;
	          break;
	        case 0x7b:  // '{'
	          cont = stack[0];
	          stack.unshift(cont[key || cont.length] = builder(stack2[0]));
	          stack2.unshift(null);
	          key = void 0;
	          break;
	        case 0x7d:  // '}'
	          stack.shift();
	          stack2.shift();
	          break;
	      }
	    }
	    // Fail if we've got an uncompleted object.
	    if (topLevelPrimitive) {
	      if (stack.length !== 1) { throw new Error(); }
	      result = result[0];
	    } else {
	      if (stack.length) { throw new Error(); }
	    }

	    return result;
	  };
})();




stjs.isArray=function( obj ) {
    return stjs.toString.call(obj) === "[object Array]";
};

/**
 * cls can by the type of the return.
 * If it's an array it can be either the type of an element or the type definition of the field.
 * TODO - for other collections and classes is not done yet
 */
stjs.typefy=function(obj, cls){
	if (stjs.isArray(obj)){
		var result = [];
		for(var idx = 0; idx < obj.length; idx++){
			result.push(stjs.typefy(obj[idx], elementType(cls)));
		}
		return result;
	}
	 var constructors = {};
	 function constr(name, param){
		  var c = constructors[name];
		  if (!c)
			  constructors[name] = c = eval(name);
		  return new c(param);
	  }

	 function elementType(type){
		 if (typeof type == "function")
			 return type;
		 if (type.arguments) {
			 return eval(type.arguments[0]);
		 }
		 if (typeof type == "string")
			 return eval(type);
		 return Object;
	  }


	function convert(type, json){
		  if (!type)
			  return json;
		  var cv = stjs.converters[type.name || type];
		  if (cv)
			  return cv(json, type);
		  //hopefully the type has a string constructor
		 return constr(type, json);
	  }

	 function builder(type){
		  if (!type)
			  return {};
			if (typeof type == "function")
				return new type();
			if (type.name) {
				if (type.name == "Map")
					return {};
				if (type.name == "Array")
					return [];
				return constr(type.name);
			}
			return constr(type);
	  }

	  if (obj == null)
		  return null;

	  var ret = new cls();
	  for(var key in obj){
		  var prop = obj[key];
		  if (prop == null)
			  continue;
		  var td = cls.$typeDescription[key];
		  if (!td) {
			  ret[key] = prop;
			  continue;
		  }
		  if (typeof prop == "string")
			ret[key] = convert(td, prop);
		  else if (typeof prop == "object") {
				if (typeof td == "string") {
					td = eval(td);
		  		}
				ret[key] = stjs.typefy(prop, td);
			}
	  }
	  return ret;
};
stjs.hydrate=stjs.typefy

stjs.stringify=function(obj, cls){
	 if (obj == null)
		  return null;

	 var ret = {};
	  for(var key in obj){
		  var td = cls.$typeDescription[key];
		  var prop = obj[key];
		  var ser = td != null ? stjs.serializers[td.name || td] : null;

		  if (typeof prop == "function")
			  continue;

		  if (!td || !ser) {
			  ret[key] = prop;
			  continue;
		  }
		  if (typeof prop != "string")
			  if (ser)
				  ret[key] = ser(prop, td);
			  else
				  ret[key] = stjs.typefy(prop, td);
	  }
	  return ret;
};
/************* STJS asserts ***************/
stjs.assertHandler = function(position, code, msg) {
	throw msg + " at " + position;
};

stjs.STJSAssert = {};

stjs.STJSAssert.setAssertHandler = function(a) {
	stjs.assertHandler = a;
}

stjs.STJSAssert.assertArgEquals = function(position, code, expectedValue, testValue) {
	if (expectedValue != testValue && stjs.assertHandler)
		stjs.assertHandler(position, code, "Wrong argument. Expected: " + expectedValue + ", got:" + testValue);
}

stjs.STJSAssert.assertArgNotNull = function(position, code, testValue) {
	if (testValue == null && stjs.assertHandler)
		stjs.assertHandler(position, code, "Wrong argument. Null value");
}

stjs.STJSAssert.assertArgTrue = function(position, code, condition) {
	if (!condition && stjs.assertHandler)
		stjs.assertHandler(position, code, "Wrong argument. Condition is false");
}

stjs.STJSAssert.assertStateEquals = function(position, code, expectedValue, testValue) {
	if (expectedValue != testValue && stjs.assertHandler)
		stjs.assertHandler(position, code, "Wrong state. Expected: " + expectedValue + ", got:" + testValue);
}

stjs.STJSAssert.assertStateNotNull = function(position, code, testValue) {
	if (testValue == null && stjs.assertHandler)
		stjs.assertHandler(position, code, "Wrong state. Null value");
}

stjs.STJSAssert.assertStateTrue = function(position, code, condition) {
	if (!condition && stjs.assertHandler)
		stjs.assertHandler(position, code, "Wrong state. Condition is false");
}
/** exception **/
var Throwable = function(message, cause){
	Error.call(this);
	if(typeof Error.captureStackTrace === 'function'){
		// nice way to capture the stack trace for chrome
		Error.captureStackTrace(this, arguments.callee);
	} else {
		// alternate way to capture the stack trace for other browsers
		try{
			throw new Error();
		}catch(e){
			this.stack = e.stack;
		}
	}
	if (typeof message === "string"){
		this.detailMessage  = message;
		this.message = message;
		this.cause = cause;
	} else {
		this.cause = message;
	}
};
stjs.extend(Throwable, Error, [], function(constructor, prototype){
	prototype.detailMessage = null;
	prototype.cause = null;
	prototype.getMessage = function() {
        return this.detailMessage;
    };

	prototype.getLocalizedMessage = function() {
        return this.getMessage();
    };

	prototype.getCause = function() {
        return (this.cause==this ? null : this.cause);
    };

	prototype.toString = function() {
	        var s = "Exception";//TODO should get the exception's type name here
	        var message = this.getLocalizedMessage();
	        return (message != null) ? (s + ": " + message) : s;
	 };

	 prototype.getStackTrace = function() {
		 return this.stack;
	 };

	 prototype.printStackTrace = function(){
		 console.error(this.getStackTrace());
	 };
}, {});

var Exception = function(message, cause){
	Throwable.call(this, message, cause);
};
stjs.extend(Exception, Throwable, [], function(constructor, prototype){
}, {});

var RuntimeException = function(message, cause){
	Exception.call(this, message, cause);
};
stjs.extend(RuntimeException, Exception, [], function(constructor, prototype){
}, {});

var Iterator = function() {};
Iterator = stjs.extend(Iterator, null, [], function(constructor, prototype) {
    prototype.hasNext = function() {};
    prototype.next = function() {};
    prototype.remove = function() {};
}, {}, {});

var Iterable = function() {};
Iterable = stjs.extend(Iterable, null, [], function(constructor, prototype) {
    prototype.iterator = function() {};
}, {}, {});

/** stjs field manipulation */
stjs.setField=function(obj, field, value, returnOldValue){
	if (stjs.setFieldHandler)
		return stjs.setFieldHandler(obj, field, value, returnOldValue);
	var toReturn = returnOldValue ? obj[field] : value;
	obj[field] = value;
	return toReturn;
};

stjs.getField=function(obj, field){
	if (stjs.getFieldHandler)
		return stjs.getFieldHandler(obj, field);
	return obj[field];
};

/*! xAPIWrapper v 1.10.1 | Built on 2016-12-02 09:18:50-0500 */
function toBase64(a){return CryptoJS&&CryptoJS.enc.Base64?CryptoJS.enc.Base64.stringify(CryptoJS.enc.Latin1.parse(a)):Base64.encode(a)}function toSHA1(a){return CryptoJS&&CryptoJS.SHA1?CryptoJS.SHA1(a).toString():Crypto.util.bytesToHex(Crypto.SHA1(a,{asBytes:!0}))}function isDate(a){if("[object Date]"===Object.prototype.toString.call(a))var b=a;else var b=new Date(a);return"[object Date]"===Object.prototype.toString.call(b)?isNaN(b.valueOf())?(ADL.XAPIWrapper.log("Invalid date String passed"),null):b:(ADL.XAPIWrapper.log("Invalid date object"),null)}var CryptoJS=CryptoJS||function(a,b){var c={},d=c.lib={},e=d.Base=function(){function a(){}return{extend:function(b){a.prototype=this;var c=new a;return b&&c.mixIn(b),c.hasOwnProperty("init")||(c.init=function(){c.$super.init.apply(this,arguments)}),c.init.prototype=c,c.$super=this,c},create:function(){var a=this.extend();return a.init.apply(a,arguments),a},init:function(){},mixIn:function(a){for(var b in a)a.hasOwnProperty(b)&&(this[b]=a[b]);a.hasOwnProperty("toString")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}}}(),f=d.WordArray=e.extend({init:function(a,c){a=this.words=a||[],this.sigBytes=c!=b?c:4*a.length},toString:function(a){return(a||h).stringify(this)},concat:function(a){var b=this.words,c=a.words,d=this.sigBytes,e=a.sigBytes;if(this.clamp(),d%4)for(var f=0;e>f;f++){var g=c[f>>>2]>>>24-f%4*8&255;b[d+f>>>2]|=g<<24-(d+f)%4*8}else if(c.length>65535)for(var f=0;e>f;f+=4)b[d+f>>>2]=c[f>>>2];else b.push.apply(b,c);return this.sigBytes+=e,this},clamp:function(){var b=this.words,c=this.sigBytes;b[c>>>2]&=4294967295<<32-c%4*8,b.length=a.ceil(c/4)},clone:function(){var a=e.clone.call(this);return a.words=this.words.slice(0),a},random:function(b){for(var c=[],d=0;b>d;d+=4)c.push(4294967296*a.random()|0);return new f.init(c,b)}}),g=c.enc={},h=g.Hex={stringify:function(a){for(var b=a.words,c=a.sigBytes,d=[],e=0;c>e;e++){var f=b[e>>>2]>>>24-e%4*8&255;d.push((f>>>4).toString(16)),d.push((15&f).toString(16))}return d.join("")},parse:function(a){for(var b=a.length,c=[],d=0;b>d;d+=2)c[d>>>3]|=parseInt(a.substr(d,2),16)<<24-d%8*4;return new f.init(c,b/2)}},i=g.Latin1={stringify:function(a){for(var b=a.words,c=a.sigBytes,d=[],e=0;c>e;e++){var f=b[e>>>2]>>>24-e%4*8&255;d.push(String.fromCharCode(f))}return d.join("")},parse:function(a){for(var b=a.length,c=[],d=0;b>d;d++)c[d>>>2]|=(255&a.charCodeAt(d))<<24-d%4*8;return new f.init(c,b)}},j=g.Utf8={stringify:function(a){try{return decodeURIComponent(escape(i.stringify(a)))}catch(b){throw new Error("Malformed UTF-8 data")}},parse:function(a){return i.parse(unescape(encodeURIComponent(a)))}},k=(g.Base64={stringify:function(a){var b=a.words,c=a.sigBytes,d=this._map;a.clamp();for(var e=[],f=0;c>f;f+=3)for(var g=b[f>>>2]>>>24-f%4*8&255,h=b[f+1>>>2]>>>24-(f+1)%4*8&255,i=b[f+2>>>2]>>>24-(f+2)%4*8&255,j=g<<16|h<<8|i,k=0;4>k&&c>f+.75*k;k++)e.push(d.charAt(j>>>6*(3-k)&63));var l=d.charAt(64);if(l)for(;e.length%4;)e.push(l);return e.join("")},parse:function(a){var b=a.length,c=this._map,d=c.charAt(64);if(d){var e=a.indexOf(d);-1!=e&&(b=e)}for(var g=[],h=0,i=0;b>i;i++)if(i%4){var j=c.indexOf(a.charAt(i-1))<<i%4*2,k=c.indexOf(a.charAt(i))>>>6-i%4*2;g[h>>>2]|=(j|k)<<24-h%4*8,h++}return f.create(g,h)},_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="},d.BufferedBlockAlgorithm=e.extend({reset:function(){this._data=new f.init,this._nDataBytes=0},_append:function(a){"string"==typeof a&&(a=j.parse(a)),this._data.concat(a),this._nDataBytes+=a.sigBytes},_process:function(b){var c=this._data,d=c.words,e=c.sigBytes,g=this.blockSize,h=4*g,i=e/h;i=b?a.ceil(i):a.max((0|i)-this._minBufferSize,0);var j=i*g,k=a.min(4*j,e);if(j){for(var l=0;j>l;l+=g)this._doProcessBlock(d,l);var m=d.splice(0,j);c.sigBytes-=k}return new f.init(m,k)},clone:function(){var a=e.clone.call(this);return a._data=this._data.clone(),a},_minBufferSize:0})),l=d.Hasher=k.extend({cfg:e.extend(),init:function(a){this.cfg=this.cfg.extend(a),this.reset()},reset:function(){k.reset.call(this),this._doReset()},update:function(a){return this._append(a),this._process(),this},finalize:function(a){a&&this._append(a);var b=this._doFinalize();return b},blockSize:16,_createHelper:function(a){return function(b,c){return new a.init(c).finalize(b)}},_createHmacHelper:function(a){return function(b,c){return new m.HMAC.init(a,c).finalize(b)}}}),m=c.algo={},n=[],o=m.SHA1=l.extend({_doReset:function(){this._hash=new f.init([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(a,b){for(var c=this._hash.words,d=c[0],e=c[1],f=c[2],g=c[3],h=c[4],i=0;80>i;i++){if(16>i)n[i]=0|a[b+i];else{var j=n[i-3]^n[i-8]^n[i-14]^n[i-16];n[i]=j<<1|j>>>31}var k=(d<<5|d>>>27)+h+n[i];k+=20>i?(e&f|~e&g)+1518500249:40>i?(e^f^g)+1859775393:60>i?(e&f|e&g|f&g)-1894007588:(e^f^g)-899497514,h=g,g=f,f=e<<30|e>>>2,e=d,d=k}c[0]=c[0]+d|0,c[1]=c[1]+e|0,c[2]=c[2]+f|0,c[3]=c[3]+g|0,c[4]=c[4]+h|0},_doFinalize:function(){var b=this._data,c=b.words,d=8*this._nDataBytes,e=8*b.sigBytes;return c[e>>>5]|=128<<24-e%32,c[(e+64>>>9<<4)+14]=a.floor(d/4294967296),c[(e+64>>>9<<4)+15]=d,b.sigBytes=4*c.length,this._process(),this._hash},clone:function(){var a=l.clone.call(this);return a._hash=this._hash.clone(),a}});return c.SHA1=l._createHelper(o),c.HmacSHA1=l._createHmacHelper(o),c}(Math);!function(a){a.verbs={abandoned:{id:"https://w3id.org/xapi/adl/verbs/abandoned",display:{"en-US":"abandoned"}},answered:{id:"http://adlnet.gov/expapi/verbs/answered",display:{"de-DE":"beantwortete","en-US":"answered","fr-FR":"a répondu","es-ES":"contestó"}},asked:{id:"http://adlnet.gov/expapi/verbs/asked",display:{"de-DE":"fragte","en-US":"asked","fr-FR":"a demandé","es-ES":"preguntó"}},attempted:{id:"http://adlnet.gov/expapi/verbs/attempted",display:{"de-DE":"versuchte","en-US":"attempted","fr-FR":"a essayé","es-ES":"intentó"}},attended:{id:"http://adlnet.gov/expapi/verbs/attended",display:{"de-DE":"nahm teil an","en-US":"attended","fr-FR":"a suivi","es-ES":"asistió"}},commented:{id:"http://adlnet.gov/expapi/verbs/commented",display:{"de-DE":"kommentierte","en-US":"commented","fr-FR":"a commenté","es-ES":"comentó"}},completed:{id:"http://adlnet.gov/expapi/verbs/completed",display:{"de-DE":"beendete","en-US":"completed","fr-FR":"a terminé","es-ES":"completó"}},exited:{id:"http://adlnet.gov/expapi/verbs/exited",display:{"de-DE":"verließ","en-US":"exited","fr-FR":"a quitté","es-ES":"salió"}},experienced:{id:"http://adlnet.gov/expapi/verbs/experienced",display:{"de-DE":"erlebte","en-US":"experienced","fr-FR":"a éprouvé","es-ES":"experimentó"}},failed:{id:"http://adlnet.gov/expapi/verbs/failed",display:{"de-DE":"verfehlte","en-US":"failed","fr-FR":"a échoué","es-ES":"fracasó"}},imported:{id:"http://adlnet.gov/expapi/verbs/imported",display:{"de-DE":"importierte","en-US":"imported","fr-FR":"a importé","es-ES":"importó"}},initialized:{id:"http://adlnet.gov/expapi/verbs/initialized",display:{"de-DE":"initialisierte","en-US":"initialized","fr-FR":"a initialisé","es-ES":"inicializó"}},interacted:{id:"http://adlnet.gov/expapi/verbs/interacted",display:{"de-DE":"interagierte","en-US":"interacted","fr-FR":"a interagi","es-ES":"interactuó"}},launched:{id:"http://adlnet.gov/expapi/verbs/launched",display:{"de-DE":"startete","en-US":"launched","fr-FR":"a lancé","es-ES":"lanzó"}},mastered:{id:"http://adlnet.gov/expapi/verbs/mastered",display:{"de-DE":"meisterte","en-US":"mastered","fr-FR":"a maîtrisé","es-ES":"dominó"}},passed:{id:"http://adlnet.gov/expapi/verbs/passed",display:{"de-DE":"bestand","en-US":"passed","fr-FR":"a réussi","es-ES":"aprobó"}},preferred:{id:"http://adlnet.gov/expapi/verbs/preferred",display:{"de-DE":"bevorzugte","en-US":"preferred","fr-FR":"a préféré","es-ES":"prefirió"}},progressed:{id:"http://adlnet.gov/expapi/verbs/progressed",display:{"de-DE":"machte Fortschritt mit","en-US":"progressed","fr-FR":"a progressé","es-ES":"progresó"}},registered:{id:"http://adlnet.gov/expapi/verbs/registered",display:{"de-DE":"registrierte","en-US":"registered","fr-FR":"a enregistré","es-ES":"registró"}},responded:{id:"http://adlnet.gov/expapi/verbs/responded",display:{"de-DE":"reagierte","en-US":"responded","fr-FR":"a répondu","es-ES":"respondió"}},resumed:{id:"http://adlnet.gov/expapi/verbs/resumed",display:{"de-DE":"setzte fort","en-US":"resumed","fr-FR":"a repris","es-ES":"continuó"}},satisfied:{id:"https://w3id.org/xapi/adl/verbs/satisfied",display:{"en-US":"satisfied"}},scored:{id:"http://adlnet.gov/expapi/verbs/scored",display:{"de-DE":"erreichte","en-US":"scored","fr-FR":"a marqué","es-ES":"anotó"}},shared:{id:"http://adlnet.gov/expapi/verbs/shared",display:{"de-DE":"teilte","en-US":"shared","fr-FR":"a partagé","es-ES":"compartió"}},suspended:{id:"http://adlnet.gov/expapi/verbs/suspended",display:{"de-DE":"pausierte","en-US":"suspended","fr-FR":"a suspendu","es-ES":"aplazó"}},terminated:{id:"http://adlnet.gov/expapi/verbs/terminated",display:{"de-DE":"beendete","en-US":"terminated","fr-FR":"a terminé","es-ES":"terminó"}},voided:{id:"http://adlnet.gov/expapi/verbs/voided",display:{"de-DE":"entwertete","en-US":"voided","fr-FR":"a annulé","es-ES":"anuló"}},waived:{id:"https://w3id.org/xapi/adl/verbs/waived",display:{"en-US":"waived"}}}}(window.ADL=window.ADL||{}),Date.prototype.toISOString||!function(){function a(a){var b=String(a);return 1===b.length&&(b="0"+b),b}Date.prototype.toISOString=function(){return this.getUTCFullYear()+"-"+a(this.getUTCMonth()+1)+"-"+a(this.getUTCDate())+"T"+a(this.getUTCHours())+":"+a(this.getUTCMinutes())+":"+a(this.getUTCSeconds())+"."+String((this.getUTCMilliseconds()/1e3).toFixed(3)).slice(2,5)+"Z"}}(),function(a){function b(){try{return void 0!=this.lrs.endpoint&&""!=this.lrs.endpoint}catch(a){return!1}}function c(a){if(!c.debug)return!1;try{return console.log(a),!0}catch(b){return!1}}function d(a,b){for(var e in b){prop=b[e],c(e+" : "+prop);try{b[e].constructor==Object?a[e]=d(a[e],b[e]):(void 0==a&&(a=new Object),a[e]=b[e])}catch(f){void 0==a&&(a=new Object),a[e]=b[e]}}return a}function e(a){var b,c,e=["endpoint","auth","actor","registration","activity_id","grouping","activity_platform"],g=new Object;if(b=f(),void 0!==b&&0!==Object.keys(b).length){for(var h=0;h<e.length;h++)c=e[h],b[c]&&(g[c]=b[c],delete b[c]);0!==Object.keys(b).length&&(g.extended=b),g=d(a,g)}else g=a;return g}function f(){var a,b,c,d,e;for(a=window.location.search.substr(1),b=a.split("&"),e={},d=0;d<b.length;d++)c=b[d].split("="),2===c.length&&c[0]&&(e[c[0]]=decodeURIComponent(c[1]));return e}function g(){var b=new XMLHttpRequest,c=window.location+"?forcenocache="+a.ruuid();b.open("GET",c,!1),b.send(null)}function h(a,b,c,d){var e=b,f=new Array,g=e.indexOf("?");if(g>0&&(f.push(e.substr(g+1)),e=e.substr(0,g)),e=e+"?method="+a,null!==c)for(var h in c)f.push(h+"="+encodeURIComponent(c[h]));return null!==d&&f.push("content="+encodeURIComponent(d)),{method:"POST",url:e,headers:{},data:f.join("&")}}c.debug=!1;var i=function(){var a={};a.endpoint="http://localhost:8000/xapi/";try{a.auth="Basic "+toBase64("tom:1234")}catch(b){c("Exception in Config trying to encode auth: "+b)}return a}();XAPIWrapper=function(c,f){function g(b){var c=document.createElement("a");return c.href=b,c.protocol&&c.host?c.protocol+"//"+c.host:void a.XAPIWrapper.log("Couldn't create base url from endpoint: "+this.lrs.endpoint)}function h(a,b,c){a.auth="Basic "+toBase64(b+":"+c)}this.lrs=e(c||{}),this.lrs.user&&this.lrs.password&&h(this.lrs,this.lrs.user,this.lrs.password),this.base=g(this.lrs.endpoint),this.withCredentials=!1,this.withCredentials=c&&c.withCredentials,f&&b.call(this)&&window.ADL.XHR_request(this.lrs,this.lrs.endpoint+"about","GET",null,null,function(b){if(200==b.status)try{var c=JSON.parse(b.response),d=!1;for(var e in c.version)if(c.version[e]==a.XAPIWrapper.xapiVersion){d=!0;break}d||a.XAPIWrapper.log("The lrs version ["+c.version+"] does not match this wrapper's XAPI version ["+a.XAPIWrapper.xapiVersion+"]")}catch(f){a.XAPIWrapper.log("The response was not an about object")}else a.XAPIWrapper.log("The request to get information about the LRS failed: "+b)},null,!1,null,this.withCredentials),this.searchParams=function(){var a={format:"exact"};return a},this.hash=function(b){if(!b)return null;try{return toSHA1(b)}catch(c){return a.XAPIWrapper.log("Error trying to hash -- "+c),null}},this.changeConfig=function(b){try{a.XAPIWrapper.log("updating lrs object with new configuration"),this.lrs=d(this.lrs,b),b.token ? this.lrs.auth = "Basic " + b.token : b.user&&b.password&&this.updateAuth(this.lrs,b.user,b.password),this.base=g(this.lrs.endpoint),this.withCredentials=b.withCredentials}catch(c){a.XAPIWrapper.log("error while changing configuration -- "+c)}},this.updateAuth=h},XAPIWrapper.prototype.xapiVersion="1.0.1",XAPIWrapper.prototype.prepareStatement=function(a){void 0===a.actor?a.actor=JSON.parse(this.lrs.actor):"string"==typeof a.actor&&(a.actor=JSON.parse(a.actor)),(this.lrs.grouping||this.lrs.registration||this.lrs.activity_platform)&&(a.context||(a.context={})),this.lrs.grouping&&(a.context.contextActivities||(a.context.contextActivities={}),a.context.contextActivities.grouping=[{id:this.lrs.grouping}]),this.lrs.registration&&(a.context.registration=this.lrs.registration),this.lrs.activity_platform&&(a.context.platform=this.lrs.activity_platform)},XAPIWrapper.prototype.testConfig=b,XAPIWrapper.prototype.log=c,XAPIWrapper.prototype.sendStatement=function(b,c){if(this.testConfig()){this.prepareStatement(b);var d;b.id?d=b.id:(d=a.ruuid(),b.id=d);var e=a.XHR_request(this.lrs,this.lrs.endpoint+"statements","POST",JSON.stringify(b),this.lrs.auth,c,{id:d},null,!1,this.withCredentials);if(!c)return{xhr:e,id:d}}},XAPIWrapper.prototype.sendStatements=function(b,c){if(this.testConfig()){for(var d in b)this.prepareStatement(b[d]);var e=a.XHR_request(this.lrs,this.lrs.endpoint+"statements","POST",JSON.stringify(b),this.lrs.auth,c,null,!1,null,this.withCredentials);if(!c)return e}},XAPIWrapper.prototype.getStatements=function(b,c,d){if(this.testConfig()){var e=this.lrs.endpoint+"statements";if(c)e=this.base+c;else{var f=new Array;for(s in b)if("until"==s||"since"==s){var g=new Date(b[s]);f.push(s+"="+encodeURIComponent(g.toISOString()))}else f.push(s+"="+encodeURIComponent(b[s]));f.length>0&&(e=e+"?"+f.join("&"))}var h=a.XHR_request(this.lrs,e,"GET",null,this.lrs.auth,d,null,!1,null,this.withCredentials);if(void 0===h||404==h.status)return null;try{return JSON.parse(h.response)}catch(i){return h.response}}},XAPIWrapper.prototype.getActivities=function(b,c){if(this.testConfig()){var d=this.lrs.endpoint+"activities?activityId=<activityid>";d=d.replace("<activityid>",encodeURIComponent(b));var e=a.XHR_request(this.lrs,d,"GET",null,this.lrs.auth,c,null,!0,null,this.withCredentials);if(void 0===e||404==e.status)return null;try{return JSON.parse(e.response)}catch(f){return e.response}}},XAPIWrapper.prototype.sendState=function(b,d,e,f,g,h,i,j){if(this.testConfig()){var k=this.lrs.endpoint+"activities/state?activityId=<activity ID>&agent=<agent>&stateId=<stateid>";k=k.replace("<activity ID>",encodeURIComponent(b)),k=k.replace("<agent>",encodeURIComponent(JSON.stringify(d))),k=k.replace("<stateid>",encodeURIComponent(e)),f&&(k+="&registration="+encodeURIComponent(f));var l=null;h&&i?c("Can't have both If-Match and If-None-Match"):h?l={"If-Match":'"'+h+'"'}:i&&(l={"If-None-Match":'"'+i+'"'});var m="PUT";if(!g)return this.log("No activity state was included."),!1;g instanceof Array?(g=JSON.stringify(g),l=l||{},l["Content-Type"]="application/json"):g instanceof Object?(g=JSON.stringify(g),l=l||{},l["Content-Type"]="application/json",m="POST"):(l=l||{},l["Content-Type"]="application/octet-stream"),a.XHR_request(this.lrs,k,m,g,this.lrs.auth,j,null,null,l,this.withCredentials)}},XAPIWrapper.prototype.getState=function(b,c,d,e,f,g){if(this.testConfig()){var h=this.lrs.endpoint+"activities/state?activityId=<activity ID>&agent=<agent>";h=h.replace("<activity ID>",encodeURIComponent(b)),h=h.replace("<agent>",encodeURIComponent(JSON.stringify(c))),d&&(h+="&stateId="+encodeURIComponent(d)),e&&(h+="&registration="+encodeURIComponent(e)),f&&(f=isDate(f),null!=f&&(h+="&since="+encodeURIComponent(f.toISOString())));var i=a.XHR_request(this.lrs,h,"GET",null,this.lrs.auth,g,null,!0,this.withCredentials);if(void 0===i||404==i.status)return null;try{return JSON.parse(i.response)}catch(j){return i.response}}},XAPIWrapper.prototype.deleteState=function(b,d,e,f,g,h,i){if(this.testConfig()){var j=this.lrs.endpoint+"activities/state?activityId=<activity ID>&agent=<agent>&stateId=<stateid>";j=j.replace("<activity ID>",encodeURIComponent(b)),j=j.replace("<agent>",encodeURIComponent(JSON.stringify(d))),j=j.replace("<stateid>",encodeURIComponent(e)),f&&(j+="&registration="+encodeURIComponent(f));var k=null;g&&h?c("Can't have both If-Match and If-None-Match"):g?k={"If-Match":'"'+g+'"'}:h&&(k={"If-None-Match":'"'+h+'"'});var l=a.XHR_request(this.lrs,j,"DELETE",null,this.lrs.auth,i,null,k,this.withCredentials);if(void 0===l||404==l.status)return null;try{return JSON.parse(l.response)}catch(m){return l}}},XAPIWrapper.prototype.sendActivityProfile=function(b,d,e,f,g,h){if(this.testConfig()){var i=this.lrs.endpoint+"activities/profile?activityId=<activity ID>&profileId=<profileid>";i=i.replace("<activity ID>",encodeURIComponent(b)),i=i.replace("<profileid>",encodeURIComponent(d));var j=null;f&&g?c("Can't have both If-Match and If-None-Match"):f?j={"If-Match":'"'+f+'"'}:g&&(j={"If-None-Match":'"'+g+'"'});var k="PUT";if(!e)return this.log("No activity profile was included."),!1;e instanceof Array?(e=JSON.stringify(e),j=j||{},j["Content-Type"]="application/json"):e instanceof Object?(e=JSON.stringify(e),j=j||{},j["Content-Type"]="application/json",k="POST"):(j=j||{},j["Content-Type"]="application/octet-stream"),a.XHR_request(this.lrs,i,k,e,this.lrs.auth,h,null,!1,j,this.withCredentials)}},XAPIWrapper.prototype.getActivityProfile=function(b,c,d,e){if(this.testConfig()){var f=this.lrs.endpoint+"activities/profile?activityId=<activity ID>";f=f.replace("<activity ID>",encodeURIComponent(b)),c&&(f+="&profileId="+encodeURIComponent(c)),d&&(d=isDate(d),null!=d&&(f+="&since="+encodeURIComponent(d.toISOString())));var g=a.XHR_request(this.lrs,f,"GET",null,this.lrs.auth,e,null,!0,null,this.withCredentials);if(void 0===g||404==g.status)return null;try{return JSON.parse(g.response)}catch(h){return g.response}}},XAPIWrapper.prototype.deleteActivityProfile=function(b,d,e,f,g){if(this.testConfig()){var h=this.lrs.endpoint+"activities/profile?activityId=<activity ID>&profileId=<profileid>";h=h.replace("<activity ID>",encodeURIComponent(b)),h=h.replace("<profileid>",encodeURIComponent(d));var i=null;e&&f?c("Can't have both If-Match and If-None-Match"):e?i={"If-Match":'"'+e+'"'}:f&&(i={"If-None-Match":'"'+f+'"'});var j=a.XHR_request(this.lrs,h,"DELETE",null,this.lrs.auth,g,null,!1,i,this.withCredentials);if(void 0===j||404==j.status)return null;try{return JSON.parse(j.response)}catch(k){return j}}},XAPIWrapper.prototype.getAgents=function(b,c){if(this.testConfig()){var d=this.lrs.endpoint+"agents?agent=<agent>";d=d.replace("<agent>",encodeURIComponent(JSON.stringify(b)));var e=a.XHR_request(this.lrs,d,"GET",null,this.lrs.auth,c,null,!0,null,this.withCredentials);if(void 0===e||404==e.status)return null;try{return JSON.parse(e.response)}catch(f){return e.response}}},XAPIWrapper.prototype.sendAgentProfile=function(b,d,e,f,g,h){if(this.testConfig()){var i=this.lrs.endpoint+"agents/profile?agent=<agent>&profileId=<profileid>";i=i.replace("<agent>",encodeURIComponent(JSON.stringify(b))),i=i.replace("<profileid>",encodeURIComponent(d));var j=null;f&&g?c("Can't have both If-Match and If-None-Match"):f?j={"If-Match":'"'+f+'"'}:g&&(j={"If-None-Match":'"'+g+'"'});var k="PUT";if(!e)return this.log("No agent profile was included."),!1;e instanceof Array?(e=JSON.stringify(e),j=j||{},j["Content-Type"]="application/json"):e instanceof Object?(e=JSON.stringify(e),j=j||{},j["Content-Type"]="application/json",k="POST"):(j=j||{},j["Content-Type"]="application/octet-stream"),a.XHR_request(this.lrs,i,k,e,this.lrs.auth,h,null,!1,j,this.withCredentials)}},XAPIWrapper.prototype.getAgentProfile=function(b,c,d,e){if(this.testConfig()){var f=this.lrs.endpoint+"agents/profile?agent=<agent>";f=f.replace("<agent>",encodeURIComponent(JSON.stringify(b))),f=f.replace("<profileid>",encodeURIComponent(c)),c&&(f+="&profileId="+encodeURIComponent(c)),d&&(d=isDate(d),null!=d&&(f+="&since="+encodeURIComponent(d.toISOString())));var g=a.XHR_request(this.lrs,f,"GET",null,this.lrs.auth,e,null,!0,null,this.withCredentials);if(void 0===g||404==g.status)return null;try{return JSON.parse(g.response)}catch(h){return g.response}}},XAPIWrapper.prototype.deleteAgentProfile=function(b,d,e,f,g){if(this.testConfig()){var h=this.lrs.endpoint+"agents/profile?agent=<agent>&profileId=<profileid>";h=h.replace("<agent>",encodeURIComponent(JSON.stringify(b))),h=h.replace("<profileid>",encodeURIComponent(d));var i=null;e&&f?c("Can't have both If-Match and If-None-Match"):e?i={"If-Match":'"'+e+'"'}:f&&(i={"If-None-Match":'"'+f+'"'});var j=a.XHR_request(this.lrs,h,"DELETE",null,this.lrs.auth,g,null,!1,i,this.withCredentials);if(void 0===j||404==j.status)return null;try{return JSON.parse(j.response)}catch(k){return j}}},a.ruuid=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(a){var b=16*Math.random()|0,c="x"==a?b:3&b|8;return c.toString(16)})},a.dateFromISOString=function(a){var b="([0-9]{4})(-([0-9]{2})(-([0-9]{2})([T| ]([0-9]{2}):([0-9]{2})(:([0-9]{2})(.([0-9]+))?)?(Z|(([-+])([0-9]{2}):([0-9]{2})))?)?)?)?",c=a.match(new RegExp(b)),d=0,e=new Date(c[1],0,1);c[3]&&e.setMonth(c[3]-1),c[5]&&e.setDate(c[5]),c[7]&&e.setHours(c[7]),c[8]&&e.setMinutes(c[8]),c[10]&&e.setSeconds(c[10]),c[12]&&e.setMilliseconds(1e3*Number("0."+c[12])),c[14]&&(d=60*Number(c[16])+Number(c[17]),d*="-"==c[15]?1:-1),d-=e.getTimezoneOffset(),time=Number(e)+60*d*1e3;var f=new Date;return f.setTime(Number(time)),f},a.XHR_request=function(b,c,d,e,f,i,j,k,l,m){"use strict";function n(){if(t)return r;t=!0;var b=k&&404===o.status;if(!(void 0===o.status||o.status>=200&&o.status<400||b)){var e;try{e="There was a problem communicating with the Learning Record Store. ( "+o.status+" | "+o.response+" )"+c}catch(f){e=f.toString()}return a.XAPIWrapper.log(e),a.xhrRequestOnError(o,d,c,i,j),r=o,o}if(!i)return r=o,o;if(j)i(o,j);else try{var g=JSON.parse(o.responseText);i(o,g)}catch(h){i(o,o.responseText)}}var o,p,q,r,s,t=!1,u=!1,v=!1,w=c.toLowerCase().match(/^(.+):\/\/([^:\/]*):?(\d+)?(\/.*)?$/),x=window.location,y={};if(y["Content-Type"]="application/json",y.Authorization=f,y["X-Experience-API-Version"]=a.XAPIWrapper.xapiVersion,null!==l)for(var z in l)y[z]=l[z];u=x.protocol.toLowerCase()!==w[1]||x.hostname.toLowerCase()!==w[2],u||(q=null===w[3]?"http"===w[1]?"80":"443":w[3],u=q===x.port);var A=window.XDomainRequest&&window.XMLHttpRequest&&void 0===(new XMLHttpRequest).responseType;if(u&&void 0!==A&&A!==!1)v=!0,p=h(d,c,y,e),o=new XDomainRequest,o.open(p.method,p.url);else{o=new XMLHttpRequest,o.withCredentials=m,o.open(d,c,null!=i);for(var z in y)o.setRequestHeader(z,y[z])}if(o.onreadystatechange=function(){return 4===o.readyState?n():void 0},o.onload=n,o.onerror=n,o.send(v?p.data:e),!i){if(v)for(s=1e3+new Date;new Date<s&&4!==o.readyState&&!t;)g();return n()}},a.xhrRequestOnError=function(){},a.XAPIWrapper=new XAPIWrapper(i,!1)}(window.ADL=window.ADL||{}),function(a){function b(a,c){var d=c.split("."),e=d[0];return c=d.slice(1).join("."),a[e]||(/\[\]$/.test(e)?(e=e.slice(0,-2),a[e]=[]):a[e]={}),c?b(a[e],c):a[e]}var c=function(b,c,j){if(b&&b.actor&&b.verb&&b.object){var k=b;for(var l in k)"actor"!=l&&"verb"!=l&&"object"!=l&&(this[l]=k[l]);b=k.actor,c=k.verb,j=k.object}b?b instanceof d?this.actor=b:"Agent"!==b.objectType&&b.objectType?"Group"===b.objectType&&(this.actor=new e(b)):this.actor=new d(b):this.actor=null,this.verb=c?c instanceof f?c:new f(c):null,this.object=j?"Activity"!==j.objectType&&j.objectType?"Agent"===j.objectType?j instanceof d?j:new d(j):"Group"===j.objectType?j instanceof e?j:new e(j):"StatementRef"===j.objectType?j instanceof h?j:new h(j):"SubStatement"===j.objectType?j instanceof i?j:new i(j):null:j instanceof g?j:new g(j):null,this.generateId=function(){this.id=a.ruuid()}};c.prototype.toString=function(){return this.actor.toString()+" "+this.verb.toString()+" "+this.object.toString()},c.prototype.isValid=function(){return this.actor&&this.actor.isValid()&&this.verb&&this.verb.isValid()&&this.object&&this.object.isValid()},c.prototype.generateRegistration=function(){b(this,"context").registration=a.ruuid()},c.prototype.addParentActivity=function(a){b(this,"context.contextActivities.parent[]").push(new g(a))},c.prototype.addGroupingActivity=function(a){b(this,"context.contextActivities.grouping[]").push(new g(a))},c.prototype.addOtherContextActivity=function(a){b(this,"context.contextActivities.other[]").push(new g(a))};var d=function(a,b){if(this.objectType="Agent",this.name=b,a&&(a.mbox||a.mbox_sha1sum||a.openid||a.account))for(var c in a)this[c]=a[c];else/^mailto:/.test(a)?this.mbox=a:/^[0-9a-f]{40}$/i.test(a)?this.mbox_sha1sum=a:/^http[s]?:/.test(a)?this.openid=a:a&&a.homePage&&a.name&&(this.account=a)};d.prototype.toString=function(){return this.name||this.mbox||this.openid||this.mbox_sha1sum||this.account.name},d.prototype.isValid=function(){return this.mbox||this.mbox_sha1sum||this.openid||this.account.homePage&&this.account.name||"Group"===this.objectType&&this.member};var e=function(a,b,c){d.call(this,a,c),this.member=b,this.objectType="Group"};e.prototype=new d;var f=function(a,b){if(a&&a.id)for(var c in a)this[c]=a[c];else this.id=a,b&&(this.display="string"==typeof b||b instanceof String?{"en-US":b}:b)};f.prototype.toString=function(){return this.display&&(this.display["en-US"]||this.display.en)?this.display["en-US"]||this.display.en:this.id},f.prototype.isValid=function(){return this.id};var g=function(a,b,c){if(a&&a.id){var d=a;for(var e in d)this[e]=d[e]}else this.objectType="Activity",this.id=a,(b||c)&&(this.definition={},"string"==typeof b||b instanceof String?this.definition.name={"en-US":b}:b&&(this.definition.name=b),"string"==typeof c||c instanceof String?this.definition.description={"en-US":c}:c&&(this.definition.description=c))};g.prototype.toString=function(){return this.definition&&this.definition.name&&(this.definition.name["en-US"]||this.definition.name.en)?this.definition.name["en-US"]||this.definition.name.en:this.id},g.prototype.isValid=function(){return this.id&&(!this.objectType||"Activity"===this.objectType)};var h=function(a){if(a&&a.id)for(var b in a)this[b]=a[b];else this.objectType="StatementRef",this.id=a};h.prototype.toString=function(){return"statement("+this.id+")"},h.prototype.isValid=function(){return this.id&&this.objectType&&"StatementRef"===this.objectType};var i=function(a,b,d){c.call(this,a,b,d),this.objectType="SubStatement",delete this.id,delete this.stored,delete this.version,delete this.authority};i.prototype=new c,i.prototype.toString=function(){return'"'+i.prototype.prototype.toString.call(this)+'"'},c.Agent=d,c.Group=e,c.Verb=f,c.Activity=g,c.StatementRef=h,c.SubStatement=i,a.XAPIStatement=c}(window.ADL=window.ADL||{}),function(a){var b=a,c=!1;"undefined"!=typeof window&&(b=window.ADL=a.ADL||{},c=!0);var d=function(a){return a.definition&&a.definition.name?b.xapiutil.getLangVal(a.definition.name):void 0},e=function(a){if("SubStatement"===a.objectType&&"SubStatement"!==a.object.objectType&&!(a.id||a.stored||a.version||a.authority)){var c=b.xapiutil.getActorId(a.actor)+":"+b.xapiutil.getVerbDisplay(a.verb)+":"+b.xapiutil.getObjectId(a.object);return c}};b.xapiutil={},b.xapiutil.getLang=function(){var a;if("undefined"!=typeof navigator)a=navigator.language||navigator.browserLanguage||navigator.systemLanguage||navigator.userLanguage;else if(process&&process.env){var b=process.env.LANG;a=b.slice(0,b.indexOf(".")),a=a.replace(/_/,"-")}return a||"en-US"},b.xapiutil.getLangVal=function(a){if(a){var c=Object.keys(a);if(0==c.length)return void 0;var d,e=b.xapiutil.getLang(),f=!1;do a[e]?(d=a[e],f=!0):e.indexOf("-")&&(e=e.substring(0,e.lastIndexOf("-")));while(!f&&""!==e);return d}},b.xapiutil.getMoreStatements=function(a,d,e){if(!c)throw new Error("Node not supported.");var f=[];b.XAPIWrapper.getStatements(e,null,function g(c){if(c&&c.response){var h=JSON.parse(c.response);h.statements&&(f=f.concat(h.statements),a--<=0?d(f):h.more&&""!==h.more?b.XAPIWrapper.getStatements(e,h.more,g):""===h.more&&d(f))}})},b.xapiutil.getActorId=function(a){return a.mbox||a.openid||a.mbox_sha1sum||a.account},b.xapiutil.getActorIdString=function(a){var b=a.mbox||a.openid||a.mbox_sha1sum;return b||(b=a.account?a.account.homePage+":"+a.account.name:a.member?"Anon Group "+a.member:"unknown"),b},b.xapiutil.getActorDisplay=function(a){return a.name||b.xapiutil.getActorIdString(a)},b.xapiutil.getVerbDisplay=function(a){return a?a.display?b.xapiutil.getLangVal(a.display)||a.id:a.id:void 0},b.xapiutil.getObjectType=function(a){return a.objectType||(a.id?"Activity":"Agent")},b.xapiutil.getObjectId=function(a){if(a.id)return a.id;var c=b.xapiutil.getObjectType(a);return"Agent"===c||"Group"===c?b.xapiutil.getActorId(a):void 0},b.xapiutil.getObjectIdString=function(a){if(!a)return"unknown";if(a.id)return a.id;var c=b.xapiutil.getObjectType(a);return"Agent"===c||"Group"===c?b.xapiutil.getActorIdString(a):"SubStatement"==c?e(a):"unknown"},b.xapiutil.getObjectDisplay=function(a){if(!a)return"unknown";var c=d(a)||a.name||a.id;if(!c){var f=b.xapiutil.getObjectType(a);"Agent"===f||"Group"==f?c=b.xapiutil.getActorDisplay(a):"SubStatement"==f&&(c=e(a))}return c}}(this),function(a){function b(a){for(var b=window.location.search.substring(1),c=b.split("&"),d=0;d<c.length;d++){var e=c[d].split("=");if(decodeURIComponent(e[0])==a)return decodeURIComponent(e[1])}}function c(a){return function(){var b=arguments;window.setTimeout(function(){for(var c=[],d=0;d<b.length;d++)c.push(b[d]);a.apply(window,c)},0)}}function d(){var a=document.body,b=new MutationObserver(function(a){a.forEach(function(a){for(var b in a.addedNodes)if(a.addedNodes[b].constructor==HTMLAnchorElement){var c=a.addedNodes[b];e([c])}})}),c={attributes:!0,childList:!0,subtree:!0};b.observe(a,c)}function e(a){var c=b("xAPILaunchKey"),d=b("xAPILaunchService"),e=b("encrypted"),f="xAPILaunchKey="+c+"&xAPILaunchService="+d;e&&(f+="&encrypted=true");for(var g=0;g<a.length;g++){var h=a[g],i=h.href,j=h.attributes.getNamedItem("courselink");j&&"true"==j.value&&(i=i.indexOf("?")>-1?i+"&"+f:i+"?"+f,h.href=i)}}function f(a,f){a=c(a);try{{var h=b("xAPILaunchKey"),i=b("xAPILaunchService");b("encrypted")}if(!h||!i)return a("invalid launch parameters");var j=new URL(i);j.pathname+="launch/"+h;var k=new XMLHttpRequest;k.withCredentials=!0,k.crossDomain=!0,k.onerror=function(b){window.setTimeout(function(){return a(b)})},k.onload=function(){if(200!==k.status)return k.onerror(k.responseText);var b=JSON.parse(k.responseText),c=b,j={};j.endpoint=c.endpoint,j.actor=c.actor,j.withCredentials=!0,window.onunload=function(){if(f){var a=new URL(i);a.pathname+="launch/"+h+"/terminate";var b=new XMLHttpRequest;b.withCredentials=!0,b.crossDomain=!0,b.open("POST",a.toString(),!1),b.setRequestHeader("Content-type","application/json"),b.send('{"code":0,"description":"User closed content"}')}};var l=new g.XAPIWrapper.constructor;return l.changeConfig(j),e(document.body.querySelectorAll("a")),d(),a(null,b,l)},k.open("POST",j.toString(),!0),k.send()}catch(l){a(l)}}var g=a;g.launch=f}(window.ADL=window.ADL||{});
window.ClientSocket = function(){
    
    var ws = null;
    
    var that = this;
    /**
     *     callback: function to receive incoming messages. Signature: (messageAsObject)
     */
    this.listener = null;
    
    // this.addListener = function(callback)
    // {
    //     listeners.push(callback);
    // };
    
    // this.removeListener = function(callback)
    // {
    //     var index = listeners.indexOf(callback);
    //     if(index >= 0)
    //     {
    //         delete listeners[index];
    //     }
    // };
    
    this.isConnected = function()
    {
        return ws != null && ws.readyState == 1;
    };
    
    this.onConnectionChanged = function(isConnected){
        // allow for over-writing
    };

    this.close = function() {
	if (that.isConnected())
	    ws.close();
    };
    
    // connect to socket server
    function connect(address, idProvider, user, device)
    {
        var endpoint = address + idProvider + '/' + user;
        var wsuri = "ws://" + endpoint;
        var protocols = undefined;
        if (! that.isConnected()) {

            if (window.WebSocket || window.MozWebSocket) {

                // Connect to either WebSocket (Mozilla specific object too)
                if (window.WebSocket)
                    ws = new WebSocket(wsuri, protocols);
                else
                    ws = new MozWebSocket(wsuri, protocols);

                // this occurs when the web socket opens
                ws.onopen = function() {

                    // Web Socket is connected. You can send data by send() method
                    // console.log("WebSocket connected to ws://" + endpoint);
                    ws.send(device);
                    that.onConnectionChanged(true);
                };

                // THIS IS CALLED WHEN AN INCOMING MESSAGE IS RECEIVED
                ws.onmessage = function(evt) {

                    var received_msg = evt.data;
                    // console.log("Received: " + received_msg);
                    var obj = JSON.parse(received_msg);
		    if (that.listener != null)
			that.listener(obj);
		};

		// WHAT TO DO WHEN THE WEB SOCKET CLOSES
		ws.onclose = function() {

                    // websocket is closed.
                    //console.log("websocket is closed");
                    // try to connect every 3 seconds
                    var reconnect = function(){
			connect(address, idProvider, user, device);
                    };
                    setTimeout(reconnect , 3000);
                    that.onConnectionChanged(false);
		};

		// console.log("websockets are supported, trying  to connect to "
                //             + endpoint);
            } else {
		// the browser doesn't support WebSockets
		// alert("WebSockets NOT supported here! Browser: "
                //       + navigator.appName + " " + navigator.appVersion);
            }
	}
    }
    this.connect = connect;
}

window.SocketConnectionHandler = function() {
    var socket = new ClientSocket();

    var self = this;

    this.idProvider = "keycloak-fluent";
    
    var host = "adltla.usalearning.net:8081";
    
    this.address = host + "/application-launcher/connect/";

    this.location = {
        "latitude" : null,
        "longitude" : null
    };

    socket.onConnectionChanged = function(isConnected) {
	self.connected = isConnected;
    };
    
    function onLocationUpdated(newLocation){
	self.location.latitude = newLocation.coords.latitude;
	self.location.longitude = newLocation.coords.longitude;
    };
    navigator.geolocation.getCurrentPosition(onLocationUpdated);

    this.close = function() {
	socket.close();
    };
    
    this.setMessageCallback = function(callback) {
	socket.listener = callback;
    };
    
    this.connect = function(userId, userName, deviceName){
	if (!socket.isConnected()) {
	    self.userId = userId;
	    self.userName = userName;
	    var platform = ("" + navigator.platform).toLowerCase();
	    var OSType = null;
	    if (platform.indexOf("win")!=-1){
		OSType="Windows";
	    }else if (platform.indexOf("mac")!=-1){
		OSType="MacOS";
	    }else if (platform.indexOf("x11")!=-1 || platform.indexOf("unix")!=-1){
		OSType="Unix";
	    }else if (platform.indexOf("linux")!=-1){
		OSType="Linux";
	    }else if (platform.indexOf("iPad")!=-1){
		OSType="iPad";
	    }else if (platform.indexOf("iPod")!=-1){
		OSType="iPod";
	    }else if (platform.indexOf("iPhone")!=-1){
		OSType="iPhone";
	    }
	    
	    var device = {
		"id" : deviceName,
		"name" : deviceName,
		"os" : {
		    "platform" : OSType,
		    "version"  : null
		},
		"features" : [],
		"ram" : 0,
		"location" : {
		    "latitude"  : self.location.latitude,
		    "longitude" : self.location.longitude
		}

	    };
	    
	    socket.connect(self.address, self.idProvider, userId, JSON.stringify(device));
	}
    };
}
window.ReadiumInterop = {

    "postHarnessMessage" : function (target, message, url) {
	var kit = window.webkit;
	
	if (kit != null) {
	    var kitHandler = kit.messageHandlers;
	    if (kitHandler != null) {
		var receiver = kitHandler[target];
		if (receiver != null) {
		    receiver.postMessage(message, (url != null)?url:"*");
		}
	    }
	}
    },

    "getFirstAndLastVisibleCFI" : function () {
	if (window.ReadiumSDK != null) {
	    return { "firstCFI" : window.ReadiumSDK.reader.getFirstVisibleCfi(),
		     "lastCFI" : window.ReadiumSDK.reader.getLastVisibleCfi() };
	}
	return {};
    },

    "getEmbeddedBookName" : function () {
    	if (typeof embeddedBookName !== 'undefined')
    		return embeddedBookName;
    	else {
    		for (var i = 0; i < window.frames.length; i++) {
    			if (window.frames[i].embeddedBookName != null)
    				return window.frames[i].embeddedBookName;
    		}
    		for (var i = 0; i < window.top.frames.length; i++) {
    			if (window.top.frames[i].embeddedBookName != null)
    				return window.top.frames[i].embeddedBookName;
    		}
    	}
    },

    "getFirstVisibleCfi" : function () {
	return window.ReadiumSDK.reader.getFirstVisibleCfi();
    }
};


window.LearningLockerAPI = function () {};


var toVoidRecod = function (rec) {
    var o = {
	"context" : {
	    "contextActivities" : {
		"parent" : [{
		    "id" : rec.object.id,
		    "objectType" : "Activity"
		}]
	    }
	},
	"actor" : rec.actor,
	"verb": {
	    "display": {
		"en-US": "voided"
	    },
	    "id": "http://adlnet.gov/expapi/verbs/voided"
	},
	"object": {
	    "id": rec.id,
	    "objectType": "StatementRef"
	},
	"stored" : rec.stored,
	"timestamp" : rec.timestamp,
	"id" : "v-" + rec.id
    };

    return o;
};

window.LearningLockerAPI.prototype.pull = function (endpoint, searchParams, callback) {
    var request = new XMLHttpRequest();
    request.onreadystatechange = function() {
	if (request.readyState == 4) {
	    if (request.status == 200) {
		var result = JSON.parse(request.responseText);
		for (var i = 0; i < result.length; i++) {
		    var rec = result[i]
		    if (!rec.voided)
			result[i] = rec.statement;
		    else
			result[i] = toVoidRecod(rec.statement);
		}
		if (callback != null) {
		    callback(result);
		}
	    }			
	}
    };

    request.open("GET", endpoint.url + "api/statements/aggregate?pipeline=" + encodeURIComponent(JSON.stringify(searchParams)), true);
    
    request.setRequestHeader("Authorization", "Basic " + endpoint.token);
    request.setRequestHeader("Content-Type", "application/json");    

    request.send();       		    
}
window.FakeCompetency = {
    "getCompetencies" : function (user) {
	return window.FakeCompetency[user];
    },

    "Learner" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "Learner1" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "Learner2" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "Learner3" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "Learner5" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],
    
    "Learner7" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 2,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "MCSCT1" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "MCSCT2" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "MCSCT3" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "MCSCT4" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "MCSCT5" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "EWS1" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "EWS2" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "EWS3" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "EWS4" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "EWS5" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "MSTP1" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "MSTP2" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "MSTP3" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "MSTP4" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "MSTP5" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "SNCOA1" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "SNCOA2" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "SNCOA3" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "SNCOA4" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "SNCOA5" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "CDET1" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "CDET2" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "CDET3" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "CDET4" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "CDET5" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "TBS1" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "TBS2" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "TBS3" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "TBS4" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "TBS5" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "MCIS1" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "MCIS2" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 0,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "MCIS3" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "MCIS4" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ],

    "MCIS5" : [
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/94c6486e-99c7-405e-80f6-e76d19445bfe/1485824471109"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4df55545-188c-4746-9780-35524a6909c0/1485824471165"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ee61855f-2562-4f7c-82da-1cfd0622ca01/1485824471211"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e24bcaa6-f653-448a-a6b8-30ebc8204e41/1485824471256"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8397361c-bd64-4e02-907e-f8c5b0e9d8ab/1485824471296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f0341ab8-24b6-4ed0-940c-a9c2c38d7b2f/1485824471337"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4e3e862a-4374-45e0-bebb-9c0fdc8a9a79/1485824471379"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d977f6f5-8aac-49af-9b4d-89c37bf2c0c0/1485824471423"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a8aff122-cd98-4335-a1c2-eb1b9105ce99/1485824471466"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/61196efb-f02b-45f7-b7b4-9e1aa74a435f/1485824471506"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5d63bcd9-98b7-4f9f-a2ed-d2e58dd7a6df/1485824471544"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d073dd1a-8727-4d52-bb88-2501af174048/1485824471582"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3b059b04-b1ed-4ebc-b616-477b4c1a65bf/1485824471622"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/63b7e847-754b-48a8-b25c-19f911a539db/1485824471660"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7c3a24c8-b620-456c-adb9-970d8bb2e1e2/1485824471698"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a266ec2a-59f0-4aeb-911d-cee8c405b23f/1485824471739"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7fc3c198-70c1-4871-b449-cb86841962ed/1485824471777"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b9f515b-fefa-4c3a-b1f7-ecde794f9dd3/1485824471814"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/9ef588e1-c742-4e5e-8f43-7907ad88691f/1485824471853"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b2f38676-9ce2-4cbe-8344-bd4a6cbdf24d/1485824471892"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/872578b0-9449-4b96-b4dc-b9c3b38d322d/1485824471932"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/e18bef12-dcf9-40e8-ade6-4e3d38c54284/1485824471972"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/ef254ce1-be19-4dde-ba2b-dda2092e9e5c/1485824472009"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/09e39aa0-0ebe-4859-8918-fd4f0e7c3cd8/1485824472052"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/fa3bff94-9411-4512-98f8-4419794adede/1485824472091"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/70c15235-601a-47cb-969f-a75836366975/1485824472132"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6dc6845d-5c3a-4b71-9acf-80ca7d1c8245/1485824472170"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/c778f29a-fcb4-413c-b052-f771c24e8858/1485824472210"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/535b730c-032c-4b18-a5cd-71b18d907360/1485824472248"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/97de71c5-2196-49c4-8877-f7c78d267731/1485824472289"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/21865c08-f73d-425f-aa08-edc8b823daff/1485824472327"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/13309741-1884-44bd-af81-5df8faf6e898/1485824472365"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/7ba453ab-f3c4-4721-b7a5-66fc8c466b31/1485824472405"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1c9574e8-e72b-48f3-88de-b07ff6dd5e58/1485824472445"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/715da17e-c16a-49b1-bed2-112081f068f1/1485824472483"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/50c9d05c-d205-4c5b-acbf-3b7d0149e28f/1485824472522"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/73a4f974-8e92-4275-9659-eebb57d233d3/1485824472560"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f3eb77ec-c4d0-4c7c-a92d-7edc10178423/1485824472597"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/01b45c24-6fd6-4806-9b9f-d24fca67d935/1485824472637"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb425b8-c3e6-4f58-bde2-8c3628c1eb4a/1485824472676"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/45e04600-46ab-408f-9bfa-daa39205ad7d/1485824472713"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/8710831a-c37b-4e10-a4e4-4c0665de0795/1485824472756"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/5b23704b-1686-40a6-bd77-73e8865a4bba/1485824472796"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/228d9ca5-d12c-462c-9624-8ccb51fc9fce/1485824472833"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/759c2a2b-8f14-4e18-8dca-6275ceae4f5a/1485824472874"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/b051d415-c475-48a2-b761-847cadd48a61/1485824472914"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2e01701a-aef3-4f8a-a1a6-c55c2b150296/1485824472953"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3e8ad12e-1de5-4c21-afcf-3b819f3e09b1/1485824472990"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2ad6c24f-58c9-4f67-863a-260048b7096f/1485824473028"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/08c6f062-9144-4f26-ae18-161af404847f/1485824473067"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/3f45d538-86c9-4505-89a8-37c5c51d3328/1485824473105"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/2fe11783-0e14-4856-a1ec-6cc2e2ff8e49/1485824473144"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/6c4560f4-e4db-419b-8a8d-ecfebf3fe500/1485824473182"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/4a526e56-e011-4082-87b7-10adeaf88831/1485824473220"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/f31f52d0-6f1c-4821-a99a-64d92786e846/1485824473257"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/a3e700d8-bb4a-44ed-8ef4-ce7c924019c7/1485824473296"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d9074650-4f3d-4bf0-9c90-aedcb2a6f934/1485824473334"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/d4c7b479-822a-4600-a76b-736121cc29f8/1485824473372"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	],
	[
            {"url": "https://cass.tla.cassproject.org/api/custom/data/schema.cassproject.org.0.2.Competency/1fb1d874-c03a-4517-b7da-d82c69979958/1485824473410"},
            {
		"confidence": 1,
		"level": 1,
		"measureType": "com.soartech.fluent.evidencemapper.mastery.FourStageMastery",
		"populationContext": "http://soartech.com/employees"
            }
	]
    ]
    
};

/* normalize environment calls */
window.indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
window.IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction || window.msIDBTransaction || {READ_WRITE: "readwrite"};
window.IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange || window.msIDBKeyRange;

window.IndexedDBStorageAdapterExists = window.indexedDB != null;

// function iOS() {

//   var iDevices = [
//     'iPad Simulator',
//     'iPhone Simulator',
//     'iPod Simulator',
//     'iPad',
//     'iPhone',
//     'iPod'
//   ];

//   if (!!navigator.platform) {
//     while (iDevices.length) {
//       if (navigator.platform === iDevices.pop()){ return true; }
//     }
//   }

//   return false;
// }

// var isIOS = iOS();

/* constants */
var MASTER_INDEX = "master";
var CURRENT_BOOK = "peblCurrentBook";
var CURRENT_USER = "peblCurrentUser";
var VERB_INDEX = "verbs";

function getAll(index, query, callback) {
    var request;
    var result;

    if (index.getAll)
	request = index.getAll(query);
    else {
	result = [];
	request = index.openCursor(query);
    }
    
    request.onerror = function (e) {
	//console.log(e);
    };
    request.onsuccess = function (e) {
	var r = e.target.result;
	if (result) {
	    if (r) {
		result.push(r.value);
		r.continue();
	    } else if (callback != null)
		callback(result);
	} else {
	    if (callback != null) {
		if (r != null)
		    callback(r);
		else
		    callback([]);
	    }
	}
    };
}

function cleanRecord(r) {
    var recordType = typeof(r);
    if (recordType == "object") {
	for (var p in r)
	    if (r.hasOwnProperty(p)) {
		var v = r[p];
		var t = typeof(v);
		if (t == "function")
		    delete r[p];
		else if (t == "array")
		    for (var i = 0; i < v.length; i++)
			cleanRecord(v[i]);
		else if (t == "object")
		    cleanRecord(v);
	    }
    } else if (recordType == "array")
	for (var i = 0; i < r.length; i++)
	    cleanRecord(r[i]);
    return r;
}

/* stjs IndexedDBInterop implemention */

window.IndexedDBInterop = function (readyCallback) {
    var self = this;
    var request = window.indexedDB.open("pebl", 10);

    request.onupgradeneeded = function (event) {
	var db = event.target.result;

	var objectStores = db.objectStoreNames;
	for (var i = 0; i < objectStores.length; i++)
	    db.deleteObjectStore(objectStores[i]);
	
	var eventStore = db.createObjectStore("events", {keyPath:"id"});
	var annotationStore = db.createObjectStore("annotations", {keyPath:"id"});
	var competencyStore = db.createObjectStore("competencies", {keyPath:["url","identity"]});
	var generalAnnotationStore = db.createObjectStore("generalAnnotations", {keyPath:"id"});
	var outgoingStore = db.createObjectStore("outgoing", {keyPath:["identity", "id"]});
	var messageStore = db.createObjectStore("messages", {keyPath:"id"});
	var userStore = db.createObjectStore("user", {keyPath:"identity"});
	var stateStore = db.createObjectStore("state", {keyPath:"id"});
	var assetStore = db.createObjectStore("assets", {keyPath:"id"});	
	var queuedReferences = db.createObjectStore("queuedReferences", {keyPath:["identity", "id"]});
	var notificationStore = db.createObjectStore("notifications", {keyPath:["identity", "id"]});
	var tocStore = db.createObjectStore("tocs", { keyPath:["identity", "containerPath", "section", "pageKey"] });
	var lrsAuthStore = db.createObjectStore("lrsAuth", {keyPath:"id"});

	eventStore.createIndex(MASTER_INDEX, ["identity", "containerPath"]);
	annotationStore.createIndex(MASTER_INDEX, ["identity", "containerPath"]);
	competencyStore.createIndex(MASTER_INDEX, "identity");
	generalAnnotationStore.createIndex(MASTER_INDEX, "containerPath");
	outgoingStore.createIndex(MASTER_INDEX, "identity");
	messageStore.createIndex(MASTER_INDEX, ["identity", "thread"]);
	queuedReferences.createIndex(MASTER_INDEX, "identity");
	notificationStore.createIndex(MASTER_INDEX, "identity");
	tocStore.createIndex(MASTER_INDEX, ["identity", "containerPath"]);
	
    };

    
    request.onsuccess = function (event) {
	self.db = event.target.result;
	
	readyCallback();
    };
    
    request.onerror = function (event) {
	// readyCallback(false, event.target.errorCode);
    };

};

window.IndexedDBInterop.prototype.getAnnotations = function (user, containerPath, callback) {
    var os = this.db.transaction(["annotations"], "readonly").objectStore("annotations");
    var index = os.index(MASTER_INDEX);
    getAll(index,
	   window.IDBKeyRange.only([user.identity, containerPath]),
	   callback);
};

window.IndexedDBInterop.prototype.storeCurrentUser = function(user, callback) {
    var pack = { id : CURRENT_USER,
		 value : user.identity };
    var request = this.db.transaction(["state"], "readwrite").objectStore("state").put(cleanRecord(pack));
    request.onerror = function (e) {
	//console.log(e);
    };
    request.onsuccess = function (e) {
	if (callback != null)
	    callback();
    };
};

window.IndexedDBInterop.prototype.getCurrentUser = function(callback) {
    var request = this.db.transaction(["state"], "readonly").objectStore("state").get(CURRENT_USER);
    request.onerror = function (e) {
	//console.log(e);
    };
    request.onsuccess = function (e) {
	var r = e.target.result;
	if (r != null)
	    callback(r.value);
	else
	    callback(null);
    };
};

window.IndexedDBInterop.prototype.storeCurrentBook = function(book) {
    var pack = { value : book,
		 id : CURRENT_BOOK };
    var request = this.db.transaction(["state"], "readwrite").objectStore("state").put(cleanRecord(pack));
    request.onerror = function (e) {
	//console.log(e);
    };
    request.onsuccess = function (e) {
	//console.log(e);
    };
};

window.IndexedDBInterop.prototype.getCurrentBook = function(callback) {
    var request = this.db.transaction(["state"], "readonly").objectStore("state").get(CURRENT_BOOK);
    request.onerror = function (e) {
	//console.log(e);
    };
    request.onsuccess = function (e) {
	var r = e.target.result;
	if (callback != null) {
	    if (r != null)
		callback(r.value);
	    else
		callback("");
	}
    };
};

window.IndexedDBInterop.prototype.saveEvent = function(user, containerPath, event) {
    var request = this.db.transaction(["events"], "readwrite").objectStore("events").add(cleanRecord(event));
    request.onerror = function (e) {
	//console.log(e);
    };
    request.onsuccess = function (e) {
	//console.log(e);
    };    
};

window.IndexedDBInterop.prototype.saveEvents = function(user, containerPath, events) {
    var objectStore = this.db.transaction(["events"], "readwrite").objectStore("events");
    var callback = function () {
	if (events.length > 0) {
	    var record = events.pop();
	    record.identity = user.identity;
	    record.containerPath = containerPath;
	    var request = objectStore.put(cleanRecord(record));
	    request.onerror = callback;
	    request.onsuccess = callback;
	}
    };
    callback();
};

window.IndexedDBInterop.prototype.getEvents = function(user, containerPath, callback) {
    var os = this.db.transaction(["events"], "readonly").objectStore("events");
    var index = os.index(MASTER_INDEX);
    getAll(index,
	   window.IDBKeyRange.only([user.identity, containerPath]),
	   callback);
};

window.IndexedDBInterop.prototype.getCompetencies = function(user, callback) {
    var os = this.db.transaction(["competencies"], "readonly").objectStore("competencies");
    var index = os.index(MASTER_INDEX);
    var param = user.identity;
    getAll(index,
	   window.IDBKeyRange.only(param),
	   function (arr) {
	       if (arr.length == 0)
		   getAll(index,
			  window.IDBKeyRange.only([param]),
			  callback);
	       else
		   callback(arr);
	   });
};

window.IndexedDBInterop.prototype.setCompetencies = function(user, competenciesMap) {
    var os = this.db.transaction(["competencies"], "readwrite").objectStore("competencies");
    var competencies = [];
    for (var p in competenciesMap) {
	if (competenciesMap.hasOwnProperty(p)) {
	    var c = competenciesMap[p];
	    c.url = p;
	    c.identity = user.identity;
	    competencies.push(c);
	}
    }
    var callback = function () {
	if (competencies.length > 0) {
	    var record = competencies.pop();
	    var request = os.put(cleanRecord(record));
	    request.onerror = callback;
	    request.onsuccess = callback;
	}
    };
    callback();    
};

window.IndexedDBInterop.prototype.storeOutgoing = function(user, xapi) {
    xapi.identity = user.identity;
    var request = this.db.transaction(["outgoing"], "readwrite").objectStore("outgoing").put(cleanRecord(xapi));
    request.onerror = function (e) {
	//console.log(e);
    };
    request.onsuccess = function (e) {
	//console.log(e);
    };        
};

window.IndexedDBInterop.prototype.postMessage = function(user, thread, message) {
    message.identity = user.identity;
    message.thread = thread;
    var request = this.db.transaction(["messages"], "readwrite").objectStore("messages").put(cleanRecord(message));
    request.onerror = function (e) {
	//console.log(e);
    };
    request.onsuccess = function (e) {
	//console.log(e);
    };    
};

window.IndexedDBInterop.prototype.postMessages = function(user, thread, messages) {
    var objectStore = this.db.transaction(["messages"], "readwrite").objectStore("messages");
    var callback = function () {
	if (messages.length > 0) {
	    var record = messages.pop();
	    record.identity = user.identity;
	    record.thread = thread;
	    var request = objectStore.put(cleanRecord(record));
	    request.onerror = callback;
	    request.onsuccess = callback;
	}
    };
    callback();
};

window.IndexedDBInterop.prototype.addNotification = function(user, notification) {
    notification.identity = user.identity;
    var request = this.db.transaction(["notifications"], "readwrite").objectStore("notifications").put(cleanRecord(notification));
    request.onerror = function (e) {
	//console.log(e);
    };
    request.onsuccess = function (e) {
	//console.log(e);
    };    
};

window.IndexedDBInterop.prototype.getNotifications = function(user, callback) {
    var os = this.db.transaction(["notifications"], "readonly").objectStore("notifications");
    var index = os.index(MASTER_INDEX);
    var param = user.identity;
    getAll(index,
	   window.IDBKeyRange.only(param),
	   function (arr) {
	       if (arr.length == 0)
		   getAll(index,
			  window.IDBKeyRange.only([param]),
			  callback);
	       else
		   callback(arr);
	   });    
};

window.IndexedDBInterop.prototype.removeNotification = function(user, id) {
    var request = this.db.transaction(["notifications"], "readwrite").objectStore("notifications").delete(window.IDBKeyRange.only([user.identity, id]));
    request.onerror = function (e) {
	//console.log(e);
    };
    request.onsuccess = function (e) {
	//console.log(e);
    };
};

window.IndexedDBInterop.prototype.removeToc = function(user, containerPath, section, id) {
    var request = this.db.transaction(["tocs"], "readwrite").objectStore("tocs").delete(window.IDBKeyRange.only([user.identity, containerPath, section, id]));
    request.onerror = function (e) {
	//console.log(e);
    };
    request.onsuccess = function (e) {
	//console.log(e);
    };    
};

window.IndexedDBInterop.prototype.addToc = function(user, containerPath, data) {
    data.identity = user.identity;
    data.containerPath = containerPath;
    var request = this.db.transaction(["tocs"], "readwrite").objectStore("tocs").put(cleanRecord(data));
    request.onerror = function (e) {
	//console.log(e);
    };
    request.onsuccess = function (e) {
	//console.log(e);
    };    
};

window.IndexedDBInterop.prototype.addToc = function(user, containerPath, data) {
    data.identity = user.identity;
    data.containerPath = containerPath;
    var request = this.db.transaction(["tocs"], "readwrite").objectStore("tocs").put(cleanRecord(data));
    request.onerror = function (e) {
	//console.log(e);
    };
    request.onsuccess = function (e) {
	//console.log(e);
    };    
};


window.IndexedDBInterop.prototype.getToc = function(user, containerPath, callback) {
    if (containerPath == null)
	return [];
    
    var os = this.db.transaction(["tocs"], "readonly").objectStore("tocs");
    var index = os.index(MASTER_INDEX);
    getAll(index,
	   window.IDBKeyRange.only([user.identity, containerPath]),
	   callback);
};

window.IndexedDBInterop.prototype.removeQueuedReference = function(user, id) {
    var request = this.db.transaction(["queuedReferences"], "readwrite").objectStore("queuedReferences").delete(window.IDBKeyRange.only([user.identity, id]));
    request.onerror = function (e) {
	//console.log(e);
    };
    request.onsuccess = function (e) {
	//console.log(e);
    };    
};

window.IndexedDBInterop.prototype.saveQueuedReference = function(user, ref) {    
    ref.identity = user.identity;

    var request = this.db.transaction(["queuedReferences"], "readwrite").objectStore("queuedReferences").put(cleanRecord(ref));
    request.onerror = function (e) {
	//console.log(e);
    };
    request.onsuccess = function (e) {
	//console.log(e);
    };    
};

window.IndexedDBInterop.prototype.getQueuedReference = function(user, callback) {
    var os = this.db.transaction(["queuedReferences"], "readonly").objectStore("queuedReferences")
    var index = os.index(MASTER_INDEX);
    var request = index.openCursor(window.IDBKeyRange.only(user.identity));
    request.onerror = function (e) {

    };
    request.onsuccess = function (e) {
	if (e.target.result == null) {
	    var req = index.openCursor(window.IDBKeyRange.only([user.identity]));
	    req.onerror = function (e) {

	    };
	    req.onsuccess = function (e) {
		if (callback && e.target.result)
		    callback(e.target.result.value);
	    };    
	} else if (callback && e.target.result)
	    callback(e.target.result.value);
    };    
};

window.IndexedDBInterop.prototype.getMessages = function(user, thread, callback) {
    var os = this.db.transaction(["messages"], "readonly").objectStore("messages");
    var index = os.index(MASTER_INDEX);
    getAll(index,
	   window.IDBKeyRange.only([user.identity, thread]),
	   callback);
};

window.IndexedDBInterop.prototype.removeMessage = function(id) {
    var request = this.db.transaction(["messages"], "readwrite").objectStore("messages").delete(window.IDBKeyRange.only(id));
    request.onerror = function (e) {
	//console.log(e);
    };
    request.onsuccess = function (e) {
	//console.log(e);
    };    
};

window.IndexedDBInterop.prototype.getMessages = function(user, thread, callback) {
    var os = this.db.transaction(["messages"], "readonly").objectStore("messages");
    var index = os.index(MASTER_INDEX);
    getAll(index,
	   window.IDBKeyRange.only([user.identity, thread]),
	   callback);
};

window.IndexedDBInterop.prototype.saveUserProfile = function(user) {
    var request = this.db.transaction(["user"], "readwrite").objectStore("user").put(cleanRecord(user));
    request.onerror = function (e) {
	//console.log(e);
    };
    request.onsuccess = function (e) {
	//console.log(e);
    };
};

window.IndexedDBInterop.prototype.removeAnnotation = function(user, id) {
    var request = this.db.transaction(["annotations"], "readwrite").objectStore("annotations").delete(window.IDBKeyRange.only(id));
    request.onerror = function (e) {
	//console.log(e);
    };
    request.onsuccess = function (e) {
	//console.log(e);
    };    
};

window.IndexedDBInterop.prototype.removeSharedAnnotation = function(user, id) {
    var request = this.db.transaction(["generalAnnotations"], "readwrite").objectStore("generalAnnotations").delete(window.IDBKeyRange.only(id));
    request.onerror = function (e) {
	//console.log(e);
    };
    request.onsuccess = function (e) {
	//console.log(e);
    };
};

window.IndexedDBInterop.prototype.getGeneralAnnotations = function(user, containerPath, callback) {
    var index = this.db.transaction(["generalAnnotations"], "readonly").objectStore("generalAnnotations").index(MASTER_INDEX);
    console.log("index: " + index);
    var param = containerPath;
    getAll(index,
	   window.IDBKeyRange.only(param),
	   function (arr) {
	       if (arr.length == 0)
		   getAll(index,
			  window.IDBKeyRange.only([param]),
			  callback);
	       else
		   callback(arr);
	   });
};

window.IndexedDBInterop.prototype.getUserProfile = function(id, callback) {
    var request = this.db.transaction(["user"], "readonly").objectStore("user").get(id);
    request.onerror = function (e) {
	//console.log(e);
    };
    request.onsuccess = function (e) {
	if (callback != null)
	    callback(e.target.result);
    };    
};

window.IndexedDBInterop.prototype.getOutgoing = function(user, callback) {
    var os = this.db.transaction(["outgoing"], "readonly").objectStore("outgoing");
    var index = os.index(MASTER_INDEX);
    var param = user.identity;
    getAll(index,
	   window.IDBKeyRange.only(param),
	   function (arr) {
	       if (arr.length == 0)
		   getAll(index,
			  window.IDBKeyRange.only([param]),
			  callback);
	       else
		   callback(arr);
	   });
};


window.IndexedDBInterop.prototype.clearOutgoing = function(user, toClear) {
    var objectStore = this.db.transaction(["outgoing"], "readwrite").objectStore("outgoing");
    var index = objectStore.index(MASTER_INDEX);
    var callback = function () {
	if (toClear.length > 0) {
	    var record = toClear.pop();
	    var request = objectStore.delete(window.IDBKeyRange.only([user.identity, record.id]));
	    request.onerror = callback;
	    request.onsuccess = callback;
	}
    };
    callback();
};

window.IndexedDBInterop.prototype.saveAnnotation = function(user, containerPath, annotation) {
    annotation.identity = user.identity;
    annotation.containerPath = containerPath;
    var request = this.db.transaction(["annotations"], "readwrite").objectStore("annotations").put(cleanRecord(annotation));
    request.onerror = function (e) {
	// console.log(e);
    };
    request.onsuccess = function (e) {
	// console.log(e);
    };
};

window.IndexedDBInterop.prototype.saveAnnotations = function(user, containerPath, annotations) {
    var objectStore = this.db.transaction(["annotations"], "readwrite").objectStore("annotations");
    var callback = function () {
	if (annotations.length > 0) {
	    var record = annotations.pop();
	    record.identity = user.identity;
	    record.containerPath = containerPath;
	    var request = objectStore.put(cleanRecord(record));
	    request.onerror = callback;
	    request.onsuccess = callback;
	}
    };
    callback();
};


window.IndexedDBInterop.prototype.getAsset = function(id, callback) {
    var request = this.db.transaction(["assets"], "readonly").objectStore("assets").get(id);
    request.onerror = function (e) {
	//console.log(e);
    };
    request.onsuccess = function (e) {
	if (callback != null)
	    callback(e.target.result);
    };
};

window.IndexedDBInterop.prototype.saveAsset = function(id, data) {
    data.id = id;
    data.content = new Blob([data.content.response], { type : data.content.getResponseHeader("Content-Type") });
    var request = this.db.transaction(["assets"], "readwrite").objectStore("assets").put(cleanRecord(data));
    request.onerror = function (e) {
	// console.log(e);
    };
    request.onsuccess = function (e) {
	// console.log(e);
    };
};

window.IndexedDBInterop.prototype.saveGeneralAnnotation = function(user, containerPath, annotation) {
    annotation.containerPath = containerPath;
    var request = this.db.transaction(["generalAnnotations"], "readwrite").objectStore("generalAnnotations").put(cleanRecord(annotation));
    request.onerror = function (e) {
	// console.log(e);
    };
    request.onsuccess = function (e) {
	// console.log(e);
    };
};

window.IndexedDBInterop.prototype.saveGeneralAnnotations = function(user, containerPath, annotations) {
    var objectStore = this.db.transaction(["generalAnnotations"], "readwrite").objectStore("generalAnnotations");
    var callback = function () {
	if (annotations.length > 0) {
	    var record = annotations.pop();
	    record.containerPath = containerPath;
	    var request = objectStore.put(cleanRecord(record));
	    request.onerror = callback;
	    request.onsuccess = callback;
	}
    };
    callback();
};
(function(e,t){typeof define=="function"&&define.amd?define([],t):e.forge=t()})(this,function(){var e,t,n;return function(r){function v(e,t){return h.call(e,t)}function m(e,t){var n,r,i,s,o,u,a,f,c,h,p,v=t&&t.split("/"),m=l.map,g=m&&m["*"]||{};if(e&&e.charAt(0)===".")if(t){v=v.slice(0,v.length-1),e=e.split("/"),o=e.length-1,l.nodeIdCompat&&d.test(e[o])&&(e[o]=e[o].replace(d,"")),e=v.concat(e);for(c=0;c<e.length;c+=1){p=e[c];if(p===".")e.splice(c,1),c-=1;else if(p===".."){if(c===1&&(e[2]===".."||e[0]===".."))break;c>0&&(e.splice(c-1,2),c-=2)}}e=e.join("/")}else e.indexOf("./")===0&&(e=e.substring(2));if((v||g)&&m){n=e.split("/");for(c=n.length;c>0;c-=1){r=n.slice(0,c).join("/");if(v)for(h=v.length;h>0;h-=1){i=m[v.slice(0,h).join("/")];if(i){i=i[r];if(i){s=i,u=c;break}}}if(s)break;!a&&g&&g[r]&&(a=g[r],f=c)}!s&&a&&(s=a,u=f),s&&(n.splice(0,u,s),e=n.join("/"))}return e}function g(e,t){return function(){return s.apply(r,p.call(arguments,0).concat([e,t]))}}function y(e){return function(t){return m(t,e)}}function b(e){return function(t){a[e]=t}}function w(e){if(v(f,e)){var t=f[e];delete f[e],c[e]=!0,i.apply(r,t)}if(!v(a,e)&&!v(c,e))throw new Error("No "+e);return a[e]}function E(e){var t,n=e?e.indexOf("!"):-1;return n>-1&&(t=e.substring(0,n),e=e.substring(n+1,e.length)),[t,e]}function S(e){return function(){return l&&l.config&&l.config[e]||{}}}var i,s,o,u,a={},f={},l={},c={},h=Object.prototype.hasOwnProperty,p=[].slice,d=/\.js$/;o=function(e,t){var n,r=E(e),i=r[0];return e=r[1],i&&(i=m(i,t),n=w(i)),i?n&&n.normalize?e=n.normalize(e,y(t)):e=m(e,t):(e=m(e,t),r=E(e),i=r[0],e=r[1],i&&(n=w(i))),{f:i?i+"!"+e:e,n:e,pr:i,p:n}},u={require:function(e){return g(e)},exports:function(e){var t=a[e];return typeof t!="undefined"?t:a[e]={}},module:function(e){return{id:e,uri:"",exports:a[e],config:S(e)}}},i=function(e,t,n,i){var s,l,h,p,d,m=[],y=typeof n,E;i=i||e;if(y==="undefined"||y==="function"){t=!t.length&&n.length?["require","exports","module"]:t;for(d=0;d<t.length;d+=1){p=o(t[d],i),l=p.f;if(l==="require")m[d]=u.require(e);else if(l==="exports")m[d]=u.exports(e),E=!0;else if(l==="module")s=m[d]=u.module(e);else if(v(a,l)||v(f,l)||v(c,l))m[d]=w(l);else{if(!p.p)throw new Error(e+" missing "+l);p.p.load(p.n,g(i,!0),b(l),{}),m[d]=a[l]}}h=n?n.apply(a[e],m):undefined;if(e)if(s&&s.exports!==r&&s.exports!==a[e])a[e]=s.exports;else if(h!==r||!E)a[e]=h}else e&&(a[e]=n)},e=t=s=function(e,t,n,a,f){if(typeof e=="string")return u[e]?u[e](t):w(o(e,t).f);if(!e.splice){l=e,l.deps&&s(l.deps,l.callback);if(!t)return;t.splice?(e=t,t=n,n=null):e=r}return t=t||function(){},typeof n=="function"&&(n=a,a=f),a?i(r,e,t,n):setTimeout(function(){i(r,e,t,n)},4),s},s.config=function(e){return s(e)},e._defined=a,n=function(e,t,n){t.splice||(n=t,t=[]),!v(a,e)&&!v(f,e)&&(f[e]=[e,t,n])},n.amd={jQuery:!0}}(),n("node_modules/almond/almond",function(){}),function(){function e(e){function n(e){this.data="",this.read=0;if(typeof e=="string")this.data=e;else if(t.isArrayBuffer(e)||t.isArrayBufferView(e)){var r=new Uint8Array(e);try{this.data=String.fromCharCode.apply(null,r)}catch(i){for(var s=0;s<r.length;++s)this.putByte(r[s])}}else if(e instanceof n||typeof e=="object"&&typeof e.data=="string"&&typeof e.read=="number")this.data=e.data,this.read=e.read;this._constructedStringLength=0}function i(e,n){n=n||{},this.read=n.readOffset||0,this.growSize=n.growSize||1024;var r=t.isArrayBuffer(e),i=t.isArrayBufferView(e);if(r||i){r?this.data=new DataView(e):this.data=new DataView(e.buffer,e.byteOffset,e.byteLength),this.write="writeOffset"in n?n.writeOffset:this.data.byteLength;return}this.data=new DataView(new ArrayBuffer(0)),this.write=0,e!==null&&e!==undefined&&this.putBytes(e),"writeOffset"in n&&(this.write=n.writeOffset)}var t=e.util=e.util||{};(function(){if(typeof process!="undefined"&&process.nextTick){t.nextTick=process.nextTick,typeof setImmediate=="function"?t.setImmediate=setImmediate:t.setImmediate=t.nextTick;return}if(typeof setImmediate=="function"){t.setImmediate=setImmediate,t.nextTick=function(e){return setImmediate(e)};return}t.setImmediate=function(e){setTimeout(e,0)};if(typeof window!="undefined"&&typeof window.postMessage=="function"){var e="forge.setImmediate",n=[];t.setImmediate=function(t){n.push(t),n.length===1&&window.postMessage(e,"*")};function r(t){if(t.source===window&&t.data===e){t.stopPropagation();var r=n.slice();n.length=0,r.forEach(function(e){e()})}}window.addEventListener("message",r,!0)}if(typeof MutationObserver!="undefined"){var i=Date.now(),s=!0,o=document.createElement("div"),n=[];(new MutationObserver(function(){var e=n.slice();n.length=0,e.forEach(function(e){e()})})).observe(o,{attributes:!0});var u=t.setImmediate;t.setImmediate=function(e){Date.now()-i>15?(i=Date.now(),u(e)):(n.push(e),n.length===1&&o.setAttribute("a",s=!s))}}t.nextTick=t.setImmediate})(),t.isArray=Array.isArray||function(e){return Object.prototype.toString.call(e)==="[object Array]"},t.isArrayBuffer=function(e){return typeof ArrayBuffer!="undefined"&&e instanceof ArrayBuffer},t.isArrayBufferView=function(e){return e&&t.isArrayBuffer(e.buffer)&&e.byteLength!==undefined},t.ByteBuffer=n,t.ByteStringBuffer=n;var r=4096;t.ByteStringBuffer.prototype._optimizeConstructedString=function(e){this._constructedStringLength+=e,this._constructedStringLength>r&&(this.data.substr(0,1),this._constructedStringLength=0)},t.ByteStringBuffer.prototype.length=function(){return this.data.length-this.read},t.ByteStringBuffer.prototype.isEmpty=function(){return this.length()<=0},t.ByteStringBuffer.prototype.putByte=function(e){return this.putBytes(String.fromCharCode(e))},t.ByteStringBuffer.prototype.fillWithByte=function(e,t){e=String.fromCharCode(e);var n=this.data;while(t>0)t&1&&(n+=e),t>>>=1,t>0&&(e+=e);return this.data=n,this._optimizeConstructedString(t),this},t.ByteStringBuffer.prototype.putBytes=function(e){return this.data+=e,this._optimizeConstructedString(e.length),this},t.ByteStringBuffer.prototype.putString=function(e){return this.putBytes(t.encodeUtf8(e))},t.ByteStringBuffer.prototype.putInt16=function(e){return this.putBytes(String.fromCharCode(e>>8&255)+String.fromCharCode(e&255))},t.ByteStringBuffer.prototype.putInt24=function(e){return this.putBytes(String.fromCharCode(e>>16&255)+String.fromCharCode(e>>8&255)+String.fromCharCode(e&255))},t.ByteStringBuffer.prototype.putInt32=function(e){return this.putBytes(String.fromCharCode(e>>24&255)+String.fromCharCode(e>>16&255)+String.fromCharCode(e>>8&255)+String.fromCharCode(e&255))},t.ByteStringBuffer.prototype.putInt16Le=function(e){return this.putBytes(String.fromCharCode(e&255)+String.fromCharCode(e>>8&255))},t.ByteStringBuffer.prototype.putInt24Le=function(e){return this.putBytes(String.fromCharCode(e&255)+String.fromCharCode(e>>8&255)+String.fromCharCode(e>>16&255))},t.ByteStringBuffer.prototype.putInt32Le=function(e){return this.putBytes(String.fromCharCode(e&255)+String.fromCharCode(e>>8&255)+String.fromCharCode(e>>16&255)+String.fromCharCode(e>>24&255))},t.ByteStringBuffer.prototype.putInt=function(e,t){var n="";do t-=8,n+=String.fromCharCode(e>>t&255);while(t>0);return this.putBytes(n)},t.ByteStringBuffer.prototype.putSignedInt=function(e,t){return e<0&&(e+=2<<t-1),this.putInt(e,t)},t.ByteStringBuffer.prototype.putBuffer=function(e){return this.putBytes(e.getBytes())},t.ByteStringBuffer.prototype.getByte=function(){return this.data.charCodeAt(this.read++)},t.ByteStringBuffer.prototype.getInt16=function(){var e=this.data.charCodeAt(this.read)<<8^this.data.charCodeAt(this.read+1);return this.read+=2,e},t.ByteStringBuffer.prototype.getInt24=function(){var e=this.data.charCodeAt(this.read)<<16^this.data.charCodeAt(this.read+1)<<8^this.data.charCodeAt(this.read+2);return this.read+=3,e},t.ByteStringBuffer.prototype.getInt32=function(){var e=this.data.charCodeAt(this.read)<<24^this.data.charCodeAt(this.read+1)<<16^this.data.charCodeAt(this.read+2)<<8^this.data.charCodeAt(this.read+3);return this.read+=4,e},t.ByteStringBuffer.prototype.getInt16Le=function(){var e=this.data.charCodeAt(this.read)^this.data.charCodeAt(this.read+1)<<8;return this.read+=2,e},t.ByteStringBuffer.prototype.getInt24Le=function(){var e=this.data.charCodeAt(this.read)^this.data.charCodeAt(this.read+1)<<8^this.data.charCodeAt(this.read+2)<<16;return this.read+=3,e},t.ByteStringBuffer.prototype.getInt32Le=function(){var e=this.data.charCodeAt(this.read)^this.data.charCodeAt(this.read+1)<<8^this.data.charCodeAt(this.read+2)<<16^this.data.charCodeAt(this.read+3)<<24;return this.read+=4,e},t.ByteStringBuffer.prototype.getInt=function(e){var t=0;do t=(t<<8)+this.data.charCodeAt(this.read++),e-=8;while(e>0);return t},t.ByteStringBuffer.prototype.getSignedInt=function(e){var t=this.getInt(e),n=2<<e-2;return t>=n&&(t-=n<<1),t},t.ByteStringBuffer.prototype.getBytes=function(e){var t;return e?(e=Math.min(this.length(),e),t=this.data.slice(this.read,this.read+e),this.read+=e):e===0?t="":(t=this.read===0?this.data:this.data.slice(this.read),this.clear()),t},t.ByteStringBuffer.prototype.bytes=function(e){return typeof e=="undefined"?this.data.slice(this.read):this.data.slice(this.read,this.read+e)},t.ByteStringBuffer.prototype.at=function(e){return this.data.charCodeAt(this.read+e)},t.ByteStringBuffer.prototype.setAt=function(e,t){return this.data=this.data.substr(0,this.read+e)+String.fromCharCode(t)+this.data.substr(this.read+e+1),this},t.ByteStringBuffer.prototype.last=function(){return this.data.charCodeAt(this.data.length-1)},t.ByteStringBuffer.prototype.copy=function(){var e=t.createBuffer(this.data);return e.read=this.read,e},t.ByteStringBuffer.prototype.compact=function(){return this.read>0&&(this.data=this.data.slice(this.read),this.read=0),this},t.ByteStringBuffer.prototype.clear=function(){return this.data="",this.read=0,this},t.ByteStringBuffer.prototype.truncate=function(e){var t=Math.max(0,this.length()-e);return this.data=this.data.substr(this.read,t),this.read=0,this},t.ByteStringBuffer.prototype.toHex=function(){var e="";for(var t=this.read;t<this.data.length;++t){var n=this.data.charCodeAt(t);n<16&&(e+="0"),e+=n.toString(16)}return e},t.ByteStringBuffer.prototype.toString=function(){return t.decodeUtf8(this.bytes())},t.DataBuffer=i,t.DataBuffer.prototype.length=function(){return this.write-this.read},t.DataBuffer.prototype.isEmpty=function(){return this.length()<=0},t.DataBuffer.prototype.accommodate=function(e,t){if(this.length()>=e)return this;t=Math.max(t||this.growSize,e);var n=new Uint8Array(this.data.buffer,this.data.byteOffset,this.data.byteLength),r=new Uint8Array(this.length()+t);return r.set(n),this.data=new DataView(r.buffer),this},t.DataBuffer.prototype.putByte=function(e){return this.accommodate(1),this.data.setUint8(this.write++,e),this},t.DataBuffer.prototype.fillWithByte=function(e,t){this.accommodate(t);for(var n=0;n<t;++n)this.data.setUint8(e);return this},t.DataBuffer.prototype.putBytes=function(e,n){if(t.isArrayBufferView(e)){var r=new Uint8Array(e.buffer,e.byteOffset,e.byteLength),i=r.byteLength-r.byteOffset;this.accommodate(i);var s=new Uint8Array(this.data.buffer,this.write);return s.set(r),this.write+=i,this}if(t.isArrayBuffer(e)){var r=new Uint8Array(e);this.accommodate(r.byteLength);var s=new Uint8Array(this.data.buffer);return s.set(r,this.write),this.write+=r.byteLength,this}if(e instanceof t.DataBuffer||typeof e=="object"&&typeof e.read=="number"&&typeof e.write=="number"&&t.isArrayBufferView(e.data)){var r=new Uint8Array(e.data.byteLength,e.read,e.length());this.accommodate(r.byteLength);var s=new Uint8Array(e.data.byteLength,this.write);return s.set(r),this.write+=r.byteLength,this}e instanceof t.ByteStringBuffer&&(e=e.data,n="binary"),n=n||"binary";if(typeof e=="string"){var o;if(n==="hex")return this.accommodate(Math.ceil(e.length/2)),o=new Uint8Array(this.data.buffer,this.write),this.write+=t.binary.hex.decode(e,o,this.write),this;if(n==="base64")return this.accommodate(Math.ceil(e.length/4)*3),o=new Uint8Array(this.data.buffer,this.write),this.write+=t.binary.base64.decode(e,o,this.write),this;n==="utf8"&&(e=t.encodeUtf8(e),n="binary");if(n==="binary"||n==="raw")return this.accommodate(e.length),o=new Uint8Array(this.data.buffer,this.write),this.write+=t.binary.raw.decode(o),this;if(n==="utf16")return this.accommodate(e.length*2),o=new Uint16Array(this.data.buffer,this.write),this.write+=t.text.utf16.encode(o),this;throw new Error("Invalid encoding: "+n)}throw Error("Invalid parameter: "+e)},t.DataBuffer.prototype.putBuffer=function(e){return this.putBytes(e),e.clear(),this},t.DataBuffer.prototype.putString=function(e){return this.putBytes(e,"utf16")},t.DataBuffer.prototype.putInt16=function(e){return this.accommodate(2),this.data.setInt16(this.write,e),this.write+=2,this},t.DataBuffer.prototype.putInt24=function(e){return this.accommodate(3),this.data.setInt16(this.write,e>>8&65535),this.data.setInt8(this.write,e>>16&255),this.write+=3,this},t.DataBuffer.prototype.putInt32=function(e){return this.accommodate(4),this.data.setInt32(this.write,e),this.write+=4,this},t.DataBuffer.prototype.putInt16Le=function(e){return this.accommodate(2),this.data.setInt16(this.write,e,!0),this.write+=2,this},t.DataBuffer.prototype.putInt24Le=function(e){return this.accommodate(3),this.data.setInt8(this.write,e>>16&255),this.data.setInt16(this.write,e>>8&65535,!0),this.write+=3,this},t.DataBuffer.prototype.putInt32Le=function(e){return this.accommodate(4),this.data.setInt32(this.write,e,!0),this.write+=4,this},t.DataBuffer.prototype.putInt=function(e,t){this.accommodate(t/8);do t-=8,this.data.setInt8(this.write++,e>>t&255);while(t>0);return this},t.DataBuffer.prototype.putSignedInt=function(e,t){return this.accommodate(t/8),e<0&&(e+=2<<t-1),this.putInt(e,t)},t.DataBuffer.prototype.getByte=function(){return this.data.getInt8(this.read++)},t.DataBuffer.prototype.getInt16=function(){var e=this.data.getInt16(this.read);return this.read+=2,e},t.DataBuffer.prototype.getInt24=function(){var e=this.data.getInt16(this.read)<<8^this.data.getInt8(this.read+2);return this.read+=3,e},t.DataBuffer.prototype.getInt32=function(){var e=this.data.getInt32(this.read);return this.read+=4,e},t.DataBuffer.prototype.getInt16Le=function(){var e=this.data.getInt16(this.read,!0);return this.read+=2,e},t.DataBuffer.prototype.getInt24Le=function(){var e=this.data.getInt8(this.read)^this.data.getInt16(this.read+1,!0)<<8;return this.read+=3,e},t.DataBuffer.prototype.getInt32Le=function(){var e=this.data.getInt32(this.read,!0);return this.read+=4,e},t.DataBuffer.prototype.getInt=function(e){var t=0;do t=(t<<8)+this.data.getInt8(this.read++),e-=8;while(e>0);return t},t.DataBuffer.prototype.getSignedInt=function(e){var t=this.getInt(e),n=2<<e-2;return t>=n&&(t-=n<<1),t},t.DataBuffer.prototype.getBytes=function(e){var t;return e?(e=Math.min(this.length(),e),t=this.data.slice(this.read,this.read+e),this.read+=e):e===0?t="":(t=this.read===0?this.data:this.data.slice(this.read),this.clear()),t},t.DataBuffer.prototype.bytes=function(e){return typeof e=="undefined"?this.data.slice(this.read):this.data.slice(this.read,this.read+e)},t.DataBuffer.prototype.at=function(e){return this.data.getUint8(this.read+e)},t.DataBuffer.prototype.setAt=function(e,t){return this.data.setUint8(e,t),this},t.DataBuffer.prototype.last=function(){return this.data.getUint8(this.write-1)},t.DataBuffer.prototype.copy=function(){return new t.DataBuffer(this)},t.DataBuffer.prototype.compact=function(){if(this.read>0){var e=new Uint8Array(this.data.buffer,this.read),t=new Uint8Array(e.byteLength);t.set(e),this.data=new DataView(t),this.write-=this.read,this.read=0}return this},t.DataBuffer.prototype.clear=function(){return this.data=new DataView(new ArrayBuffer(0)),this.read=this.write=0,this},t.DataBuffer.prototype.truncate=function(e){return this.write=Math.max(0,this.length()-e),this.read=Math.min(this.read,this.write),this},t.DataBuffer.prototype.toHex=function(){var e="";for(var t=this.read;t<this.data.byteLength;++t){var n=this.data.getUint8(t);n<16&&(e+="0"),e+=n.toString(16)}return e},t.DataBuffer.prototype.toString=function(e){var n=new Uint8Array(this.data,this.read,this.length());e=e||"utf8";if(e==="binary"||e==="raw")return t.binary.raw.encode(n);if(e==="hex")return t.binary.hex.encode(n);if(e==="base64")return t.binary.base64.encode(n);if(e==="utf8")return t.text.utf8.decode(n);if(e==="utf16")return t.text.utf16.decode(n);throw new Error("Invalid encoding: "+e)},t.createBuffer=function(e,n){return n=n||"raw",e!==undefined&&n==="utf8"&&(e=t.encodeUtf8(e)),new t.ByteBuffer(e)},t.fillString=function(e,t){var n="";while(t>0)t&1&&(n+=e),t>>>=1,t>0&&(e+=e);return n},t.xorBytes=function(e,t,n){var r="",i="",s="",o=0,u=0;for(;n>0;--n,++o)i=e.charCodeAt(o)^t.charCodeAt(o),u>=10&&(r+=s,s="",u=0),s+=String.fromCharCode(i),++u;return r+=s,r},t.hexToBytes=function(e){var t="",n=0;e.length&!0&&(n=1,t+=String.fromCharCode(parseInt(e[0],16)));for(;n<e.length;n+=2)t+=String.fromCharCode(parseInt(e.substr(n,2),16));return t},t.bytesToHex=function(e){return t.createBuffer(e).toHex()},t.int32ToBytes=function(e){return String.fromCharCode(e>>24&255)+String.fromCharCode(e>>16&255)+String.fromCharCode(e>>8&255)+String.fromCharCode(e&255)};var s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",o=[62,-1,-1,-1,63,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,64,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1,-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51];t.encode64=function(e,t){var n="",r="",i,o,u,a=0;while(a<e.length)i=e.charCodeAt(a++),o=e.charCodeAt(a++),u=e.charCodeAt(a++),n+=s.charAt(i>>2),n+=s.charAt((i&3)<<4|o>>4),isNaN(o)?n+="==":(n+=s.charAt((o&15)<<2|u>>6),n+=isNaN(u)?"=":s.charAt(u&63)),t&&n.length>t&&(r+=n.substr(0,t)+"\r\n",n=n.substr(t));return r+=n,r},t.decode64=function(e){e=e.replace(/[^A-Za-z0-9\+\/\=]/g,"");var t="",n,r,i,s,u=0;while(u<e.length)n=o[e.charCodeAt(u++)-43],r=o[e.charCodeAt(u++)-43],i=o[e.charCodeAt(u++)-43],s=o[e.charCodeAt(u++)-43],t+=String.fromCharCode(n<<2|r>>4),i!==64&&(t+=String.fromCharCode((r&15)<<4|i>>2),s!==64&&(t+=String.fromCharCode((i&3)<<6|s)));return t},t.encodeUtf8=function(e){return unescape(encodeURIComponent(e))},t.decodeUtf8=function(e){return decodeURIComponent(escape(e))},t.binary={raw:{},hex:{},base64:{}},t.binary.raw.encode=function(e){return String.fromCharCode.apply(null,e)},t.binary.raw.decode=function(e,t,n){var r=t;r||(r=new Uint8Array(e.length)),n=n||0;var i=n;for(var s=0;s<e.length;++s)r[i++]=e.charCodeAt(s);return t?i-n:r},t.binary.hex.encode=t.bytesToHex,t.binary.hex.decode=function(e,t,n){var r=t;r||(r=new Uint8Array(Math.ceil(e.length/2))),n=n||0;var i=0,s=n;e.length&1&&(i=1,r[s++]=parseInt(e[0],16));for(;i<e.length;i+=2)r[s++]=parseInt(e.substr(i,2),16);return t?s-n:r},t.binary.base64.encode=function(e,t){var n="",r="",i,o,u,a=0;while(a<e.byteLength)i=e[a++],o=e[a++],u=e[a++],n+=s.charAt(i>>2),n+=s.charAt((i&3)<<4|o>>4),isNaN(o)?n+="==":(n+=s.charAt((o&15)<<2|u>>6),n+=isNaN(u)?"=":s.charAt(u&63)),t&&n.length>t&&(r+=n.substr(0,t)+"\r\n",n=n.substr(t));return r+=n,r},t.binary.base64.decode=function(e,t,n){var r=t;r||(r=new Uint8Array(Math.ceil(e.length/4)*3)),e=e.replace(/[^A-Za-z0-9\+\/\=]/g,""),n=n||0;var i,s,u,a,f=0,l=n;while(f<e.length)i=o[e.charCodeAt(f++)-43],s=o[e.charCodeAt(f++)-43],u=o[e.charCodeAt(f++)-43],a=o[e.charCodeAt(f++)-43],r[l++]=i<<2|s>>4,u!==64&&(r[l++]=(s&15)<<4|u>>2,a!==64&&(r[l++]=(u&3)<<6|a));return t?l-n:r.subarray(0,l)},t.text={utf8:{},utf16:{}},t.text.utf8.encode=function(e,n,r){e=t.encodeUtf8(e);var i=n;i||(i=new Uint8Array(e.length)),r=r||0;var s=r;for(var o=0;o<e.length;++o)i[s++]=e.charCodeAt(o);return n?s-r:i},t.text.utf8.decode=function(e){return t.decodeUtf8(String.fromCharCode.apply(null,e))},t.text.utf16.encode=function(e,t,n){var r=t;r||(r=new Uint8Array(e.length));var i=new Uint16Array(r);n=n||0;var s=n,o=n;for(var u=0;u<e.length;++u)i[o++]=e.charCodeAt(u),s+=2;return t?s-n:r},t.text.utf16.decode=function(e){return String.fromCharCode.apply(null,new Uint16Array(e))},t.deflate=function(e,n,r){n=t.decode64(e.deflate(t.encode64(n)).rval);if(r){var i=2,s=n.charCodeAt(1);s&32&&(i=6),n=n.substring(i,n.length-4)}return n},t.inflate=function(e,n,r){var i=e.inflate(t.encode64(n)).rval;return i===null?null:t.decode64(i)};var u=function(e,n,r){if(!e)throw new Error("WebStorage not available.");var i;r===null?i=e.removeItem(n):(r=t.encode64(JSON.stringify(r)),i=e.setItem(n,r));if(typeof i!="undefined"&&i.rval!==!0){var s=new Error(i.error.message);throw s.id=i.error.id,s.name=i.error.name,s}},a=function(e,n){if(!e)throw new Error("WebStorage not available.");var r=e.getItem(n);if(e.init)if(r.rval===null){if(r.error){var i=new Error(r.error.message);throw i.id=r.error.id,i.name=r.error.name,i}r=null}else r=r.rval;return r!==null&&(r=JSON.parse(t.decode64(r))),r},f=function(e,t,n,r){var i=a(e,t);i===null&&(i={}),i[n]=r,u(e,t,i)},l=function(e,t,n){var r=a(e,t);return r!==null&&(r=n in r?r[n]:null),r},c=function(e,t,n){var r=a(e,t);if(r!==null&&n in r){delete r[n];var i=!0;for(var s in r){i=!1;break}i&&(r=null),u(e,t,r)}},h=function(e,t){u(e,t,null)},p=function(e,t,n){var r=null;typeof n=="undefined"&&(n=["web","flash"]);var i,s=!1,o=null;for(var u in n){i=n[u];try{if(i==="flash"||i==="both"){if(t[0]===null)throw new Error("Flash local storage not available.");r=e.apply(this,t),s=i==="flash"}if(i==="web"||i==="both")t[0]=localStorage,r=e.apply(this,t),s=!0}catch(a){o=a}if(s)break}if(!s)throw o;return r};t.setItem=function(e,t,n,r,i){p(f,arguments,i)},t.getItem=function(e,t,n,r){return p(l,arguments,r)},t.removeItem=function(e,t,n,r){p(c,arguments,r)},t.clearItems=function(e,t,n){p(h,arguments,n)},t.parseUrl=function(e){var t=/^(https?):\/\/([^:&^\/]*):?(\d*)(.*)$/g;t.lastIndex=0;var n=t.exec(e),r=n===null?null:{full:e,scheme:n[1],host:n[2],port:n[3],path:n[4]};return r&&(r.fullHost=r.host,r.port?r.port!==80&&r.scheme==="http"?r.fullHost+=":"+r.port:r.port!==443&&r.scheme==="https"&&(r.fullHost+=":"+r.port):r.scheme==="http"?r.port=80:r.scheme==="https"&&(r.port=443),r.full=r.scheme+"://"+r.fullHost),r};var d=null;t.getQueryVariables=function(e){var t=function(e){var t={},n=e.split("&");for(var r=0;r<n.length;r++){var i=n[r].indexOf("="),s,o;i>0?(s=n[r].substring(0,i),o=n[r].substring(i+1)):(s=n[r],o=null),s in t||(t[s]=[]),!(s in Object.prototype)&&o!==null&&t[s].push(unescape(o))}return t},n;return typeof e=="undefined"?(d===null&&(typeof window!="undefined"&&window.location&&window.location.search?d=t(window.location.search.substring(1)):d={}),n=d):n=t(e),n},t.parseFragment=function(e){var n=e,r="",i=e.indexOf("?");i>0&&(n=e.substring(0,i),r=e.substring(i+1));var s=n.split("/");s.length>0&&s[0]===""&&s.shift();var o=r===""?{}:t.getQueryVariables(r);return{pathString:n,queryString:r,path:s,query:o}},t.makeRequest=function(e){var n=t.parseFragment(e),r={path:n.pathString,query:n.queryString,getPath:function(e){return typeof e=="undefined"?n.path:n.path[e]},getQuery:function(e,t){var r;return typeof e=="undefined"?r=n.query:(r=n.query[e],r&&typeof t!="undefined"&&(r=r[t])),r},getQueryLast:function(e,t){var n,i=r.getQuery(e);return i?n=i[i.length-1]:n=t,n}};return r},t.makeLink=function(e,t,n){e=jQuery.isArray(e)?e.join("/"):e;var r=jQuery.param(t||{});return n=n||"",e+(r.length>0?"?"+r:"")+(n.length>0?"#"+n:"")},t.setPath=function(e,t,n){if(typeof e=="object"&&e!==null){var r=0,i=t.length;while(r<i){var s=t[r++];if(r==i)e[s]=n;else{var o=s in e;if(!o||o&&typeof e[s]!="object"||o&&e[s]===null)e[s]={};e=e[s]}}}},t.getPath=function(e,t,n){var r=0,i=t.length,s=!0;while(s&&r<i&&typeof e=="object"&&e!==null){var o=t[r++];s=o in e,s&&(e=e[o])}return s?e:n},t.deletePath=function(e,t){if(typeof e=="object"&&e!==null){var n=0,r=t.length;while(n<r){var i=t[n++];if(n==r)delete e[i];else{if(!(i in e&&typeof e[i]=="object"&&e[i]!==null))break;e=e[i]}}}},t.isEmpty=function(e){for(var t in e)if(e.hasOwnProperty(t))return!1;return!0},t.format=function(e){var t=/%./g,n,r,i=0,s=[],o=0;while(n=t.exec(e)){r=e.substring(o,t.lastIndex-2),r.length>0&&s.push(r),o=t.lastIndex;var u=n[0][1];switch(u){case"s":case"o":i<arguments.length?s.push(arguments[i++ +1]):s.push("<?>");break;case"%":s.push("%");break;default:s.push("<%"+u+"?>")}}return s.push(e.substring(o)),s.join("")},t.formatNumber=function(e,t,n,r){var i=e,s=isNaN(t=Math.abs(t))?2:t,o=n===undefined?",":n,u=r===undefined?".":r,a=i<0?"-":"",f=parseInt(i=Math.abs(+i||0).toFixed(s),10)+"",l=f.length>3?f.length%3:0;return a+(l?f.substr(0,l)+u:"")+f.substr(l).replace(/(\d{3})(?=\d)/g,"$1"+u)+(s?o+Math.abs(i-f).toFixed(s).slice(2):"")},t.formatSize=function(e){return e>=1073741824?e=t.formatNumber(e/1073741824,2,".","")+" GiB":e>=1048576?e=t.formatNumber(e/1048576,2,".","")+" MiB":e>=1024?e=t.formatNumber(e/1024,0)+" KiB":e=t.formatNumber(e,0)+" bytes",e},t.bytesFromIP=function(e){return e.indexOf(".")!==-1?t.bytesFromIPv4(e):e.indexOf(":")!==-1?t.bytesFromIPv6(e):null},t.bytesFromIPv4=function(e){e=e.split(".");if(e.length!==4)return null;var n=t.createBuffer();for(var r=0;r<e.length;++r){var i=parseInt(e[r],10);if(isNaN(i))return null;n.putByte(i)}return n.getBytes()},t.bytesFromIPv6=function(e){var n=0;e=e.split(":").filter(function(e){return e.length===0&&++n,!0});var r=(8-e.length+n)*2,i=t.createBuffer();for(var s=0;s<8;++s){if(!e[s]||e[s].length===0){i.fillWithByte(0,r),r=0;continue}var o=t.hexToBytes(e[s]);o.length<2&&i.putByte(0),i.putBytes(o)}return i.getBytes()},t.bytesToIP=function(e){return e.length===4?t.bytesToIPv4(e):e.length===16?t.bytesToIPv6(e):null},t.bytesToIPv4=function(e){if(e.length!==4)return null;var t=[];for(var n=0;n<e.length;++n)t.push(e.charCodeAt(n));return t.join(".")},t.bytesToIPv6=function(e){if(e.length!==16)return null;var n=[],r=[],i=0;for(var s=0;s<e.length;s+=2){var o=t.bytesToHex(e[s]+e[s+1]);while(o[0]==="0"&&o!=="0")o=o.substr(1);if(o==="0"){var u=r[r.length-1],a=n.length;!u||a!==u.end+1?r.push({start:a,end:a}):(u.end=a,u.end-u.start>r[i].end-r[i].start&&(i=r.length-1))}n.push(o)}if(r.length>0){var f=r[i];f.end-f.start>0&&(n.splice(f.start,f.end-f.start+1,""),f.start===0&&n.unshift(""),f.end===7&&n.push(""))}return n.join(":")},t.estimateCores=function(e,n){function i(e,u,a){if(u===0){var f=Math.floor(e.reduce(function(e,t){return e+t},0)/e.length);return t.cores=Math.max(1,f),URL.revokeObjectURL(r),n(null,t.cores)}s(a,function(t,n){e.push(o(a,n)),i(e,u-1,a)})}function s(e,t){var n=[],i=[];for(var s=0;s<e;++s){var o=new Worker(r);o.addEventListener("message",function(r){i.push(r.data);if(i.length===e){for(var s=0;s<e;++s)n[s].terminate();t(null,i)}}),n.push(o)}for(var s=0;s<e;++s)n[s].postMessage(s)}function o(e,t){var n=[];for(var r=0;r<e;++r){var i=t[r],s=n[r]=[];for(var o=0;o<e;++o){if(r===o)continue;var u=t[o];(i.st>u.st&&i.st<u.et||u.st>i.st&&u.st<i.et)&&s.push(o)}}return n.reduce(function(e,t){return Math.max(e,t.length)},0)}typeof e=="function"&&(n=e,e={}),e=e||{};if("cores"in t&&!e.update)return n(null,t.cores);if(typeof navigator!="undefined"&&"hardwareConcurrency"in navigator&&navigator.hardwareConcurrency>0)return t.cores=navigator.hardwareConcurrency,n(null,t.cores);if(typeof Worker=="undefined")return t.cores=1,n(null,t.cores);if(typeof Blob=="undefined")return t.cores=2,n(null,t.cores);var r=URL.createObjectURL(new Blob(["(",function(){self.addEventListener("message",function(e){var t=Date.now(),n=t+4;while(Date.now()<n);self.postMessage({st:t,et:n})})}.toString(),")()"],{type:"application/javascript"}));i([],5,16)}}var r="util";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/util",["require","module"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){e.cipher=e.cipher||{},e.cipher.algorithms=e.cipher.algorithms||{},e.cipher.createCipher=function(t,n){var r=t;typeof r=="string"&&(r=e.cipher.getAlgorithm(r),r&&(r=r()));if(!r)throw new Error("Unsupported algorithm: "+t);return new e.cipher.BlockCipher({algorithm:r,key:n,decrypt:!1})},e.cipher.createDecipher=function(t,n){var r=t;typeof r=="string"&&(r=e.cipher.getAlgorithm(r),r&&(r=r()));if(!r)throw new Error("Unsupported algorithm: "+t);return new e.cipher.BlockCipher({algorithm:r,key:n,decrypt:!0})},e.cipher.registerAlgorithm=function(t,n){t=t.toUpperCase(),e.cipher.algorithms[t]=n},e.cipher.getAlgorithm=function(t){return t=t.toUpperCase(),t in e.cipher.algorithms?e.cipher.algorithms[t]:null};var t=e.cipher.BlockCipher=function(e){this.algorithm=e.algorithm,this.mode=this.algorithm.mode,this.blockSize=this.mode.blockSize,this._finish=!1,this._input=null,this.output=null,this._op=e.decrypt?this.mode.decrypt:this.mode.encrypt,this._decrypt=e.decrypt,this.algorithm.initialize(e)};t.prototype.start=function(t){t=t||{};var n={};for(var r in t)n[r]=t[r];n.decrypt=this._decrypt,this._finish=!1,this._input=e.util.createBuffer(),this.output=t.output||e.util.createBuffer(),this.mode.start(n)},t.prototype.update=function(e){e&&this._input.putBuffer(e);while(!this._op.call(this.mode,this._input,this.output,this._finish)&&!this._finish);this._input.compact()},t.prototype.finish=function(e){e&&(this.mode.name==="ECB"||this.mode.name==="CBC")&&(this.mode.pad=function(t){return e(this.blockSize,t,!1)},this.mode.unpad=function(t){return e(this.blockSize,t,!0)});var t={};return t.decrypt=this._decrypt,t.overflow=this._input.length()%this.blockSize,!this._decrypt&&this.mode.pad&&!this.mode.pad(this._input,t)?!1:(this._finish=!0,this.update(),this._decrypt&&this.mode.unpad&&!this.mode.unpad(this.output,t)?!1:this.mode.afterFinish&&!this.mode.afterFinish(this.output,t)?!1:!0)}}var r="cipher";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/cipher",["require","module","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function n(t){typeof t=="string"&&(t=e.util.createBuffer(t));if(e.util.isArray(t)&&t.length>4){var n=t;t=e.util.createBuffer();for(var r=0;r<n.length;++r)t.putByte(n[r])}return e.util.isArray(t)||(t=[t.getInt32(),t.getInt32(),t.getInt32(),t.getInt32()]),t}function r(e){e[e.length-1]=e[e.length-1]+1&4294967295}function i(e){return[e/4294967296|0,e&4294967295]}e.cipher=e.cipher||{};var t=e.cipher.modes=e.cipher.modes||{};t.ecb=function(e){e=e||{},this.name="ECB",this.cipher=e.cipher,this.blockSize=e.blockSize||16,this._ints=this.blockSize/4,this._inBlock=new Array(this._ints),this._outBlock=new Array(this._ints)},t.ecb.prototype.start=function(e){},t.ecb.prototype.encrypt=function(e,t,n){if(e.length()<this.blockSize&&!(n&&e.length()>0))return!0;for(var r=0;r<this._ints;++r)this._inBlock[r]=e.getInt32();this.cipher.encrypt(this._inBlock,this._outBlock);for(var r=0;r<this._ints;++r)t.putInt32(this._outBlock[r])},t.ecb.prototype.decrypt=function(e,t,n){if(e.length()<this.blockSize&&!(n&&e.length()>0))return!0;for(var r=0;r<this._ints;++r)this._inBlock[r]=e.getInt32();this.cipher.decrypt(this._inBlock,this._outBlock);for(var r=0;r<this._ints;++r)t.putInt32(this._outBlock[r])},t.ecb.prototype.pad=function(e,t){var n=e.length()===this.blockSize?this.blockSize:this.blockSize-e.length();return e.fillWithByte(n,n),!0},t.ecb.prototype.unpad=function(e,t){if(t.overflow>0)return!1;var n=e.length(),r=e.at(n-1);return r>this.blockSize<<2?!1:(e.truncate(r),!0)},t.cbc=function(e){e=e||{},this.name="CBC",this.cipher=e.cipher,this.blockSize=e.blockSize||16,this._ints=this.blockSize/4,this._inBlock=new Array(this._ints),this._outBlock=new Array(this._ints)},t.cbc.prototype.start=function(e){if(e.iv===null){if(!this._prev)throw new Error("Invalid IV parameter.");this._iv=this._prev.slice(0)}else{if(!("iv"in e))throw new Error("Invalid IV parameter.");this._iv=n(e.iv),this._prev=this._iv.slice(0)}},t.cbc.prototype.encrypt=function(e,t,n){if(e.length()<this.blockSize&&!(n&&e.length()>0))return!0;for(var r=0;r<this._ints;++r)this._inBlock[r]=this._prev[r]^e.getInt32();this.cipher.encrypt(this._inBlock,this._outBlock);for(var r=0;r<this._ints;++r)t.putInt32(this._outBlock[r]);this._prev=this._outBlock},t.cbc.prototype.decrypt=function(e,t,n){if(e.length()<this.blockSize&&!(n&&e.length()>0))return!0;for(var r=0;r<this._ints;++r)this._inBlock[r]=e.getInt32();this.cipher.decrypt(this._inBlock,this._outBlock);for(var r=0;r<this._ints;++r)t.putInt32(this._prev[r]^this._outBlock[r]);this._prev=this._inBlock.slice(0)},t.cbc.prototype.pad=function(e,t){var n=e.length()===this.blockSize?this.blockSize:this.blockSize-e.length();return e.fillWithByte(n,n),!0},t.cbc.prototype.unpad=function(e,t){if(t.overflow>0)return!1;var n=e.length(),r=e.at(n-1);return r>this.blockSize<<2?!1:(e.truncate(r),!0)},t.cfb=function(t){t=t||{},this.name="CFB",this.cipher=t.cipher,this.blockSize=t.blockSize||16,this._ints=this.blockSize/4,this._inBlock=null,this._outBlock=new Array(this._ints),this._partialBlock=new Array(this._ints),this._partialOutput=e.util.createBuffer(),this._partialBytes=0},t.cfb.prototype.start=function(e){if(!("iv"in e))throw new Error("Invalid IV parameter.");this._iv=n(e.iv),this._inBlock=this._iv.slice(0),this._partialBytes=0},t.cfb.prototype.encrypt=function(e,t,n){var r=e.length();if(r===0)return!0;this.cipher.encrypt(this._inBlock,this._outBlock);if(this._partialBytes===0&&r>=this.blockSize){for(var i=0;i<this._ints;++i)this._inBlock[i]=e.getInt32()^this._outBlock[i],t.putInt32(this._inBlock[i]);return}var s=(this.blockSize-r)%this.blockSize;s>0&&(s=this.blockSize-s),this._partialOutput.clear();for(var i=0;i<this._ints;++i)this._partialBlock[i]=e.getInt32()^this._outBlock[i],this._partialOutput.putInt32(this._partialBlock[i]);if(s>0)e.read-=this.blockSize;else for(var i=0;i<this._ints;++i)this._inBlock[i]=this._partialBlock[i];this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes);if(s>0&&!n)return t.putBytes(this._partialOutput.getBytes(s-this._partialBytes)),this._partialBytes=s,!0;t.putBytes(this._partialOutput.getBytes(r-this._partialBytes)),this._partialBytes=0},t.cfb.prototype.decrypt=function(e,t,n){var r=e.length();if(r===0)return!0;this.cipher.encrypt(this._inBlock,this._outBlock);if(this._partialBytes===0&&r>=this.blockSize){for(var i=0;i<this._ints;++i)this._inBlock[i]=e.getInt32(),t.putInt32(this._inBlock[i]^this._outBlock[i]);return}var s=(this.blockSize-r)%this.blockSize;s>0&&(s=this.blockSize-s),this._partialOutput.clear();for(var i=0;i<this._ints;++i)this._partialBlock[i]=e.getInt32(),this._partialOutput.putInt32(this._partialBlock[i]^this._outBlock[i]);if(s>0)e.read-=this.blockSize;else for(var i=0;i<this._ints;++i)this._inBlock[i]=this._partialBlock[i];this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes);if(s>0&&!n)return t.putBytes(this._partialOutput.getBytes(s-this._partialBytes)),this._partialBytes=s,!0;t.putBytes(this._partialOutput.getBytes(r-this._partialBytes)),this._partialBytes=0},t.ofb=function(t){t=t||{},this.name="OFB",this.cipher=t.cipher,this.blockSize=t.blockSize||16,this._ints=this.blockSize/4,this._inBlock=null,this._outBlock=new Array(this._ints),this._partialOutput=e.util.createBuffer(),this._partialBytes=0},t.ofb.prototype.start=function(e){if(!("iv"in e))throw new Error("Invalid IV parameter.");this._iv=n(e.iv),this._inBlock=this._iv.slice(0),this._partialBytes=0},t.ofb.prototype.encrypt=function(e,t,n){var r=e.length();if(e.length()===0)return!0;this.cipher.encrypt(this._inBlock,this._outBlock);if(this._partialBytes===0&&r>=this.blockSize){for(var i=0;i<this._ints;++i)t.putInt32(e.getInt32()^this._outBlock[i]),this._inBlock[i]=this._outBlock[i];return}var s=(this.blockSize-r)%this.blockSize;s>0&&(s=this.blockSize-s),this._partialOutput.clear();for(var i=0;i<this._ints;++i)this._partialOutput.putInt32(e.getInt32()^this._outBlock[i]);if(s>0)e.read-=this.blockSize;else for(var i=0;i<this._ints;++i)this._inBlock[i]=this._outBlock[i];this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes);if(s>0&&!n)return t.putBytes(this._partialOutput.getBytes(s-this._partialBytes)),this._partialBytes=s,!0;t.putBytes(this._partialOutput.getBytes(r-this._partialBytes)),this._partialBytes=0},t.ofb.prototype.decrypt=t.ofb.prototype.encrypt,t.ctr=function(t){t=t||{},this.name="CTR",this.cipher=t.cipher,this.blockSize=t.blockSize||16,this._ints=this.blockSize/4,this._inBlock=null,this._outBlock=new Array(this._ints),this._partialOutput=e.util.createBuffer(),this._partialBytes=0},t.ctr.prototype.start=function(e){if(!("iv"in e))throw new Error("Invalid IV parameter.");this._iv=n(e.iv),this._inBlock=this._iv.slice(0),this._partialBytes=0},t.ctr.prototype.encrypt=function(e,t,n){var i=e.length();if(i===0)return!0;this.cipher.encrypt(this._inBlock,this._outBlock);if(this._partialBytes===0&&i>=this.blockSize)for(var s=0;s<this._ints;++s)t.putInt32(e.getInt32()^this._outBlock[s]);else{var o=(this.blockSize-i)%this.blockSize;o>0&&(o=this.blockSize-o),this._partialOutput.clear();for(var s=0;s<this._ints;++s)this._partialOutput.putInt32(e.getInt32()^this._outBlock[s]);o>0&&(e.read-=this.blockSize),this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes);if(o>0&&!n)return t.putBytes(this._partialOutput.getBytes(o-this._partialBytes)),this._partialBytes=o,!0;t.putBytes(this._partialOutput.getBytes(i-this._partialBytes)),this._partialBytes=0}r(this._inBlock)},t.ctr.prototype.decrypt=t.ctr.prototype.encrypt,t.gcm=function(t){t=t||{},this.name="GCM",this.cipher=t.cipher,this.blockSize=t.blockSize||16,this._ints=this.blockSize/4,this._inBlock=new Array(this._ints),this._outBlock=new Array(this._ints),this._partialOutput=e.util.createBuffer(),this._partialBytes=0,this._R=3774873600},t.gcm.prototype.start=function(t){if(!("iv"in t))throw new Error("Invalid IV parameter.");var n=e.util.createBuffer(t.iv);this._cipherLength=0;var s;"additionalData"in t?s=e.util.createBuffer(t.additionalData):s=e.util.createBuffer(),"tagLength"in t?this._tagLength=t.tagLength:this._tagLength=128,this._tag=null;if(t.decrypt){this._tag=e.util.createBuffer(t.tag).getBytes();if(this._tag.length!==this._tagLength/8)throw new Error("Authentication tag does not match tag length.")}this._hashBlock=new Array(this._ints),this.tag=null,this._hashSubkey=new Array(this._ints),this.cipher.encrypt([0,0,0,0],this._hashSubkey),this.componentBits=4,this._m=this.generateHashTable(this._hashSubkey,this.componentBits);var o=n.length();if(o===12)this._j0=[n.getInt32(),n.getInt32(),n.getInt32(),1];else{this._j0=[0,0,0,0];while(n.length()>0)this._j0=this.ghash(this._hashSubkey,this._j0,[n.getInt32(),n.getInt32(),n.getInt32(),n.getInt32()]);this._j0=this.ghash(this._hashSubkey,this._j0,[0,0].concat(i(o*8)))}this._inBlock=this._j0.slice(0),r(this._inBlock),this._partialBytes=0,s=e.util.createBuffer(s),this._aDataLength=i(s.length()*8);var u=s.length()%this.blockSize;u&&s.fillWithByte(0,this.blockSize-u),this._s=[0,0,0,0];while(s.length()>0)this._s=this.ghash(this._hashSubkey,this._s,[s.getInt32(),s.getInt32(),s.getInt32(),s.getInt32()])},t.gcm.prototype.encrypt=function(e,t,n){var i=e.length();if(i===0)return!0;this.cipher.encrypt(this._inBlock,this._outBlock);if(this._partialBytes===0&&i>=this.blockSize){for(var s=0;s<this._ints;++s)t.putInt32(this._outBlock[s]^=e.getInt32());this._cipherLength+=this.blockSize}else{var o=(this.blockSize-i)%this.blockSize;o>0&&(o=this.blockSize-o),this._partialOutput.clear();for(var s=0;s<this._ints;++s)this._partialOutput.putInt32(e.getInt32()^this._outBlock[s]);if(o===0||n){if(n){var u=i%this.blockSize;this._cipherLength+=u,this._partialOutput.truncate(this.blockSize-u)}else this._cipherLength+=this.blockSize;for(var s=0;s<this._ints;++s)this._outBlock[s]=this._partialOutput.getInt32();this._partialOutput.read-=this.blockSize}this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes);if(o>0&&!n)return e.read-=this.blockSize,t.putBytes(this._partialOutput.getBytes(o-this._partialBytes)),this._partialBytes=o,!0;t.putBytes(this._partialOutput.getBytes(i-this._partialBytes)),this._partialBytes=0}this._s=this.ghash(this._hashSubkey,this._s,this._outBlock),r(this._inBlock)},t.gcm.prototype.decrypt=function(e,t,n){var i=e.length();if(i<this.blockSize&&!(n&&i>0))return!0;this.cipher.encrypt(this._inBlock,this._outBlock),r(this._inBlock),this._hashBlock[0]=e.getInt32(),this._hashBlock[1]=e.getInt32(),this._hashBlock[2]=e.getInt32(),this._hashBlock[3]=e.getInt32(),this._s=this.ghash(this._hashSubkey,this._s,this._hashBlock);for(var s=0;s<this._ints;++s)t.putInt32(this._outBlock[s]^this._hashBlock[s]);i<this.blockSize?this._cipherLength+=i%this.blockSize:this._cipherLength+=this.blockSize},t.gcm.prototype.afterFinish=function(t,n){var r=!0;n.decrypt&&n.overflow&&t.truncate(this.blockSize-n.overflow),this.tag=e.util.createBuffer();var s=this._aDataLength.concat(i(this._cipherLength*8));this._s=this.ghash(this._hashSubkey,this._s,s);var o=[];this.cipher.encrypt(this._j0,o);for(var u=0;u<this._ints;++u)this.tag.putInt32(this._s[u]^o[u]);return this.tag.truncate(this.tag.length()%(this._tagLength/8)),n.decrypt&&this.tag.bytes()!==this._tag&&(r=!1),r},t.gcm.prototype.multiply=function(e,t){var n=[0,0,0,0],r=t.slice(0);for(var i=0;i<128;++i){var s=e[i/32|0]&1<<31-i%32;s&&(n[0]^=r[0],n[1]^=r[1],n[2]^=r[2],n[3]^=r[3]),this.pow(r,r)}return n},t.gcm.prototype.pow=function(e,t){var n=e[3]&1;for(var r=3;r>0;--r)t[r]=e[r]>>>1|(e[r-1]&1)<<31;t[0]=e[0]>>>1,n&&(t[0]^=this._R)},t.gcm.prototype.tableMultiply=function(e){var t=[0,0,0,0];for(var n=0;n<32;++n){var r=n/8|0,i=e[r]>>>(7-n%8)*4&15,s=this._m[n][i];t[0]^=s[0],t[1]^=s[1],t[2]^=s[2],t[3]^=s[3]}return t},t.gcm.prototype.ghash=function(e,t,n){return t[0]^=n[0],t[1]^=n[1],t[2]^=n[2],t[3]^=n[3],this.tableMultiply(t)},t.gcm.prototype.generateHashTable=function(e,t){var n=8/t,r=4*n,i=16*n,s=new Array(i);for(var o=0;o<i;++o){var u=[0,0,0,0],a=o/r|0,f=(r-1-o%r)*t;u[a]=1<<t-1<<f,s[o]=this.generateSubHashTable(this.multiply(u,e),t)}return s},t.gcm.prototype.generateSubHashTable=function(e,t){var n=1<<t,r=n>>>1,i=new Array(n);i[r]=e.slice(0);var s=r>>>1;while(s>0)this.pow(i[2*s],i[s]=[]),s>>=1;s=2;while(s<r){for(var o=1;o<s;++o){var u=i[s],a=i[o];i[s+o]=[u[0]^a[0],u[1]^a[1],u[2]^a[2],u[3]^a[3]]}s*=2}i[0]=[0,0,0,0];for(s=r+1;s<n;++s){var f=i[s^r];i[s]=[e[0]^f[0],e[1]^f[1],e[2]^f[2],e[3]^f[3]]}return i}}var r="cipherModes";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/cipherModes",["require","module","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function t(t,n){var r=function(){return new e.aes.Algorithm(t,n)};e.cipher.registerAlgorithm(t,r)}function f(){n=!0,o=[0,1,2,4,8,16,32,64,128,27,54];var e=new Array(256);for(var t=0;t<128;++t)e[t]=t<<1,e[t+128]=t+128<<1^283;i=new Array(256),s=new Array(256),u=new Array(4),a=new Array(4);for(var t=0;t<4;++t)u[t]=new Array(256),a[t]=new Array(256);var r=0,f=0,l,c,h,p,d,v,m;for(var t=0;t<256;++t){p=f^f<<1^f<<2^f<<3^f<<4,p=p>>8^p&255^99,i[r]=p,s[p]=r,d=e[p],l=e[r],c=e[l],h=e[c],v=d<<24^p<<16^p<<8^(p^d),m=(l^c^h)<<24^(r^h)<<16^(r^c^h)<<8^(r^l^h);for(var g=0;g<4;++g)u[g][r]=v,a[g][p]=m,v=v<<24|v>>>8,m=m<<24|m>>>8;r===0?r=f=1:(r=l^e[e[e[l^h]]],f^=e[e[f]])}}function l(e,t){var n=e.slice(0),s,u=1,f=n.length,l=f+6+1,c=r*l;for(var h=f;h<c;++h)s=n[h-1],h%f===0?(s=i[s>>>16&255]<<24^i[s>>>8&255]<<16^i[s&255]<<8^i[s>>>24]^o[u]<<24,u++):f>6&&h%f===4&&(s=i[s>>>24]<<24^i[s>>>16&255]<<16^i[s>>>8&255]<<8^i[s&255]),n[h]=n[h-f]^s;if(t){var p,d=a[0],v=a[1],m=a[2],g=a[3],y=n.slice(0);c=n.length;for(var h=0,b=c-r;h<c;h+=r,b-=r)if(h===0||h===c-r)y[h]=n[b],y[h+1]=n[b+3],y[h+2]=n[b+2],y[h+3]=n[b+1];else for(var w=0;w<r;++w)p=n[b+w],y[h+(3&-w)]=d[i[p>>>24]]^v[i[p>>>16&255]]^m[i[p>>>8&255]]^g[i[p&255]];n=y}return n}function c(e,t,n,r){var o=e.length/4-1,f,l,c,h,p;r?(f=a[0],l=a[1],c=a[2],h=a[3],p=s):(f=u[0],l=u[1],c=u[2],h=u[3],p=i);var d,v,m,g,y,b,w;d=t[0]^e[0],v=t[r?3:1]^e[1],m=t[2]^e[2],g=t[r?1:3]^e[3];var E=3;for(var S=1;S<o;++S)y=f[d>>>24]^l[v>>>16&255]^c[m>>>8&255]^h[g&255]^e[++E],b=f[v>>>24]^l[m>>>16&255]^c[g>>>8&255]^h[d&255]^e[++E],w=f[m>>>24]^l[g>>>16&255]^c[d>>>8&255]^h[v&255]^e[++E],g=f[g>>>24]^l[d>>>16&255]^c[v>>>8&255]^h[m&255]^e[++E],d=y,v=b,m=w;n[0]=p[d>>>24]<<24^p[v>>>16&255]<<16^p[m>>>8&255]<<8^p[g&255]^e[++E],n[r?3:1]=p[v>>>24]<<24^p[m>>>16&255]<<16^p[g>>>8&255]<<8^p[d&255]^e[++E],n[2]=p[m>>>24]<<24^p[g>>>16&255]<<16^p[d>>>8&255]<<8^p[v&255]^e[++E],n[r?1:3]=p[g>>>24]<<24^p[d>>>16&255]<<16^p[v>>>8&255]<<8^p[m&255]^e[++E]}function h(t){t=t||{};var n=(t.mode||"CBC").toUpperCase(),r="AES-"+n,i;t.decrypt?i=e.cipher.createDecipher(r,t.key):i=e.cipher.createCipher(r,t.key);var s=i.start;return i.start=function(t,n){var r=null;n instanceof e.util.ByteBuffer&&(r=n,n={}),n=n||{},n.output=r,n.iv=t,s.call(i,n)},i}e.aes=e.aes||{},e.aes.startEncrypting=function(e,t,n,r){var i=h({key:e,output:n,decrypt:!1,mode:r});return i.start(t),i},e.aes.createEncryptionCipher=function(e,t){return h({key:e,output:null,decrypt:!1,mode:t})},e.aes.startDecrypting=function(e,t,n,r){var i=h({key:e,output:n,decrypt:!0,mode:r});return i.start(t),i},e.aes.createDecryptionCipher=function(e,t){return h({key:e,output:null,decrypt:!0,mode:t})},e.aes.Algorithm=function(e,t){n||f();var r=this;r.name=e,r.mode=new t({blockSize:16,cipher:{encrypt:function(e,t){return c(r._w,e,t,!1)},decrypt:function(e,t){return c(r._w,e,t,!0)}}}),r._init=!1},e.aes.Algorithm.prototype.initialize=function(t){if(this._init)return;var n=t.key,r;if(typeof n!="string"||n.length!==16&&n.length!==24&&n.length!==32){if(e.util.isArray(n)&&(n.length===16||n.length===24||n.length===32)){r=n,n=e.util.createBuffer();for(var i=0;i<r.length;++i)n.putByte(r[i])}}else n=e.util.createBuffer(n);if(!e.util.isArray(n)){r=n,n=[];var s=r.length();if(s===16||s===24||s===32){s>>>=2;for(var i=0;i<s;++i)n.push(r.getInt32())}}if(!e.util.isArray(n)||n.length!==4&&n.length!==6&&n.length!==8)throw new Error("Invalid key parameter.");var o=this.mode.name,u=["CFB","OFB","CTR","GCM"].indexOf(o)!==-1;this._w=l(n,t.decrypt&&!u),this._init=!0},e.aes._expandKey=function(e,t){return n||f(),l(e,t)},e.aes._updateBlock=c,t("AES-ECB",e.cipher.modes.ecb),t("AES-CBC",e.cipher.modes.cbc),t("AES-CFB",e.cipher.modes.cfb),t("AES-OFB",e.cipher.modes.ofb),t("AES-CTR",e.cipher.modes.ctr),t("AES-GCM",e.cipher.modes.gcm);var n=!1,r=4,i,s,o,u,a}var r="aes";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/aes",["require","module","./cipher","./cipherModes","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){e.pki=e.pki||{};var t=e.pki.oids=e.oids=e.oids||{};t["1.2.840.113549.1.1.1"]="rsaEncryption",t.rsaEncryption="1.2.840.113549.1.1.1",t["1.2.840.113549.1.1.4"]="md5WithRSAEncryption",t.md5WithRSAEncryption="1.2.840.113549.1.1.4",t["1.2.840.113549.1.1.5"]="sha1WithRSAEncryption",t.sha1WithRSAEncryption="1.2.840.113549.1.1.5",t["1.2.840.113549.1.1.7"]="RSAES-OAEP",t["RSAES-OAEP"]="1.2.840.113549.1.1.7",t["1.2.840.113549.1.1.8"]="mgf1",t.mgf1="1.2.840.113549.1.1.8",t["1.2.840.113549.1.1.9"]="pSpecified",t.pSpecified="1.2.840.113549.1.1.9",t["1.2.840.113549.1.1.10"]="RSASSA-PSS",t["RSASSA-PSS"]="1.2.840.113549.1.1.10",t["1.2.840.113549.1.1.11"]="sha256WithRSAEncryption",t.sha256WithRSAEncryption="1.2.840.113549.1.1.11",t["1.2.840.113549.1.1.12"]="sha384WithRSAEncryption",t.sha384WithRSAEncryption="1.2.840.113549.1.1.12",t["1.2.840.113549.1.1.13"]="sha512WithRSAEncryption",t.sha512WithRSAEncryption="1.2.840.113549.1.1.13",t["1.3.14.3.2.7"]="desCBC",t.desCBC="1.3.14.3.2.7",t["1.3.14.3.2.26"]="sha1",t.sha1="1.3.14.3.2.26",t["2.16.840.1.101.3.4.2.1"]="sha256",t.sha256="2.16.840.1.101.3.4.2.1",t["2.16.840.1.101.3.4.2.2"]="sha384",t.sha384="2.16.840.1.101.3.4.2.2",t["2.16.840.1.101.3.4.2.3"]="sha512",t.sha512="2.16.840.1.101.3.4.2.3",t["1.2.840.113549.2.5"]="md5",t.md5="1.2.840.113549.2.5",t["1.2.840.113549.1.7.1"]="data",t.data="1.2.840.113549.1.7.1",t["1.2.840.113549.1.7.2"]="signedData",t.signedData="1.2.840.113549.1.7.2",t["1.2.840.113549.1.7.3"]="envelopedData",t.envelopedData="1.2.840.113549.1.7.3",t["1.2.840.113549.1.7.4"]="signedAndEnvelopedData",t.signedAndEnvelopedData="1.2.840.113549.1.7.4",t["1.2.840.113549.1.7.5"]="digestedData",t.digestedData="1.2.840.113549.1.7.5",t["1.2.840.113549.1.7.6"]="encryptedData",t.encryptedData="1.2.840.113549.1.7.6",t["1.2.840.113549.1.9.1"]="emailAddress",t.emailAddress="1.2.840.113549.1.9.1",t["1.2.840.113549.1.9.2"]="unstructuredName",t.unstructuredName="1.2.840.113549.1.9.2",t["1.2.840.113549.1.9.3"]="contentType",t.contentType="1.2.840.113549.1.9.3",t["1.2.840.113549.1.9.4"]="messageDigest",t.messageDigest="1.2.840.113549.1.9.4",t["1.2.840.113549.1.9.5"]="signingTime",t.signingTime="1.2.840.113549.1.9.5",t["1.2.840.113549.1.9.6"]="counterSignature",t.counterSignature="1.2.840.113549.1.9.6",t["1.2.840.113549.1.9.7"]="challengePassword",t.challengePassword="1.2.840.113549.1.9.7",t["1.2.840.113549.1.9.8"]="unstructuredAddress",t.unstructuredAddress="1.2.840.113549.1.9.8",t["1.2.840.113549.1.9.14"]="extensionRequest",t.extensionRequest="1.2.840.113549.1.9.14",t["1.2.840.113549.1.9.20"]="friendlyName",t.friendlyName="1.2.840.113549.1.9.20",t["1.2.840.113549.1.9.21"]="localKeyId",t.localKeyId="1.2.840.113549.1.9.21",t["1.2.840.113549.1.9.22.1"]="x509Certificate",t.x509Certificate="1.2.840.113549.1.9.22.1",t["1.2.840.113549.1.12.10.1.1"]="keyBag",t.keyBag="1.2.840.113549.1.12.10.1.1",t["1.2.840.113549.1.12.10.1.2"]="pkcs8ShroudedKeyBag",t.pkcs8ShroudedKeyBag="1.2.840.113549.1.12.10.1.2",t["1.2.840.113549.1.12.10.1.3"]="certBag",t.certBag="1.2.840.113549.1.12.10.1.3",t["1.2.840.113549.1.12.10.1.4"]="crlBag",t.crlBag="1.2.840.113549.1.12.10.1.4",t["1.2.840.113549.1.12.10.1.5"]="secretBag",t.secretBag="1.2.840.113549.1.12.10.1.5",t["1.2.840.113549.1.12.10.1.6"]="safeContentsBag",t.safeContentsBag="1.2.840.113549.1.12.10.1.6",t["1.2.840.113549.1.5.13"]="pkcs5PBES2",t.pkcs5PBES2="1.2.840.113549.1.5.13",t["1.2.840.113549.1.5.12"]="pkcs5PBKDF2",t.pkcs5PBKDF2="1.2.840.113549.1.5.12",t["1.2.840.113549.1.12.1.1"]="pbeWithSHAAnd128BitRC4",t.pbeWithSHAAnd128BitRC4="1.2.840.113549.1.12.1.1",t["1.2.840.113549.1.12.1.2"]="pbeWithSHAAnd40BitRC4",t.pbeWithSHAAnd40BitRC4="1.2.840.113549.1.12.1.2",t["1.2.840.113549.1.12.1.3"]="pbeWithSHAAnd3-KeyTripleDES-CBC",t["pbeWithSHAAnd3-KeyTripleDES-CBC"]="1.2.840.113549.1.12.1.3",t["1.2.840.113549.1.12.1.4"]="pbeWithSHAAnd2-KeyTripleDES-CBC",t["pbeWithSHAAnd2-KeyTripleDES-CBC"]="1.2.840.113549.1.12.1.4",t["1.2.840.113549.1.12.1.5"]="pbeWithSHAAnd128BitRC2-CBC",t["pbeWithSHAAnd128BitRC2-CBC"]="1.2.840.113549.1.12.1.5",t["1.2.840.113549.1.12.1.6"]="pbewithSHAAnd40BitRC2-CBC",t["pbewithSHAAnd40BitRC2-CBC"]="1.2.840.113549.1.12.1.6",t["1.2.840.113549.3.7"]="des-EDE3-CBC",t["des-EDE3-CBC"]="1.2.840.113549.3.7",t["2.16.840.1.101.3.4.1.2"]="aes128-CBC",t["aes128-CBC"]="2.16.840.1.101.3.4.1.2",t["2.16.840.1.101.3.4.1.22"]="aes192-CBC",t["aes192-CBC"]="2.16.840.1.101.3.4.1.22",t["2.16.840.1.101.3.4.1.42"]="aes256-CBC",t["aes256-CBC"]="2.16.840.1.101.3.4.1.42",t["2.5.4.3"]="commonName",t.commonName="2.5.4.3",t["2.5.4.5"]="serialName",t.serialName="2.5.4.5",t["2.5.4.6"]="countryName",t.countryName="2.5.4.6",t["2.5.4.7"]="localityName",t.localityName="2.5.4.7",t["2.5.4.8"]="stateOrProvinceName",t.stateOrProvinceName="2.5.4.8",t["2.5.4.10"]="organizationName",t.organizationName="2.5.4.10",t["2.5.4.11"]="organizationalUnitName",t.organizationalUnitName="2.5.4.11",t["2.16.840.1.113730.1.1"]="nsCertType",t.nsCertType="2.16.840.1.113730.1.1",t["2.5.29.1"]="authorityKeyIdentifier",t["2.5.29.2"]="keyAttributes",t["2.5.29.3"]="certificatePolicies",t["2.5.29.4"]="keyUsageRestriction",t["2.5.29.5"]="policyMapping",t["2.5.29.6"]="subtreesConstraint",t["2.5.29.7"]="subjectAltName",t["2.5.29.8"]="issuerAltName",t["2.5.29.9"]="subjectDirectoryAttributes",t["2.5.29.10"]="basicConstraints",t["2.5.29.11"]="nameConstraints",t["2.5.29.12"]="policyConstraints",t["2.5.29.13"]="basicConstraints",t["2.5.29.14"]="subjectKeyIdentifier",t.subjectKeyIdentifier="2.5.29.14",t["2.5.29.15"]="keyUsage",t.keyUsage="2.5.29.15",t["2.5.29.16"]="privateKeyUsagePeriod",t["2.5.29.17"]="subjectAltName",t.subjectAltName="2.5.29.17",t["2.5.29.18"]="issuerAltName",t.issuerAltName="2.5.29.18",t["2.5.29.19"]="basicConstraints",t.basicConstraints="2.5.29.19",t["2.5.29.20"]="cRLNumber",t["2.5.29.21"]="cRLReason",t["2.5.29.22"]="expirationDate",t["2.5.29.23"]="instructionCode",t["2.5.29.24"]="invalidityDate",t["2.5.29.25"]="cRLDistributionPoints",t["2.5.29.26"]="issuingDistributionPoint",t["2.5.29.27"]="deltaCRLIndicator",t["2.5.29.28"]="issuingDistributionPoint",t["2.5.29.29"]="certificateIssuer",t["2.5.29.30"]="nameConstraints",t["2.5.29.31"]="cRLDistributionPoints",t["2.5.29.32"]="certificatePolicies",t["2.5.29.33"]="policyMappings",t["2.5.29.34"]="policyConstraints",t["2.5.29.35"]="authorityKeyIdentifier",t["2.5.29.36"]="policyConstraints",t["2.5.29.37"]="extKeyUsage",t.extKeyUsage="2.5.29.37",t["2.5.29.46"]="freshestCRL",t["2.5.29.54"]="inhibitAnyPolicy",t["1.3.6.1.5.5.7.3.1"]="serverAuth",t.serverAuth="1.3.6.1.5.5.7.3.1",t["1.3.6.1.5.5.7.3.2"]="clientAuth",t.clientAuth="1.3.6.1.5.5.7.3.2",t["1.3.6.1.5.5.7.3.3"]="codeSigning",t.codeSigning="1.3.6.1.5.5.7.3.3",t["1.3.6.1.5.5.7.3.4"]="emailProtection",t.emailProtection="1.3.6.1.5.5.7.3.4",t["1.3.6.1.5.5.7.3.8"]="timeStamping",t.timeStamping="1.3.6.1.5.5.7.3.8"}var r="oids";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/oids",["require","module"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){var t=e.asn1=e.asn1||{};t.Class={UNIVERSAL:0,APPLICATION:64,CONTEXT_SPECIFIC:128,PRIVATE:192},t.Type={NONE:0,BOOLEAN:1,INTEGER:2,BITSTRING:3,OCTETSTRING:4,NULL:5,OID:6,ODESC:7,EXTERNAL:8,REAL:9,ENUMERATED:10,EMBEDDED:11,UTF8:12,ROID:13,SEQUENCE:16,SET:17,PRINTABLESTRING:19,IA5STRING:22,UTCTIME:23,GENERALIZEDTIME:24,BMPSTRING:30},t.create=function(t,n,r,i){if(e.util.isArray(i)){var s=[];for(var o=0;o<i.length;++o)i[o]!==undefined&&s.push(i[o]);i=s}return{tagClass:t,type:n,constructed:r,composed:r||e.util.isArray(i),value:i}};var n=t.getBerValueLength=function(e){var t=e.getByte();if(t===128)return undefined;var n,r=t&128;return r?n=e.getInt((t&127)<<3):n=t,n};t.fromDer=function(r,i){i===undefined&&(i=!0),typeof r=="string"&&(r=e.util.createBuffer(r));if(r.length()<2){var s=new Error("Too few bytes to parse DER.");throw s.bytes=r.length(),s}var o=r.getByte(),u=o&192,a=o&31,f=n(r);if(r.length()<f){if(i){var s=new Error("Too few bytes to read ASN.1 value.");throw s.detail=r.length()+" < "+f,s}f=r.length()}var l,c=(o&32)===32,h=c;if(!h&&u===t.Class.UNIVERSAL&&a===t.Type.BITSTRING&&f>1){var p=r.read,d=r.getByte();if(d===0){o=r.getByte();var v=o&192;if(v===t.Class.UNIVERSAL||v===t.Class.CONTEXT_SPECIFIC)try{var m=n(r);h=m===f-(r.read-p),h&&(++p,--f)}catch(g){}}r.read=p}if(h){l=[];if(f===undefined)for(;;){if(r.bytes(2)===String.fromCharCode(0,0)){r.getBytes(2);break}l.push(t.fromDer(r,i))}else{var y=r.length();while(f>0)l.push(t.fromDer(r,i)),f-=y-r.length(),y=r.length()}}else{if(f===undefined){if(i)throw new Error("Non-constructed ASN.1 object of indefinite length.");f=r.length()}if(a===t.Type.BMPSTRING){l="";for(var b=0;b<f;b+=2)l+=String.fromCharCode(r.getInt16())}else l=r.getBytes(f)}return t.create(u,a,c,l)},t.toDer=function(n){var r=e.util.createBuffer(),i=n.tagClass|n.type,s=e.util.createBuffer();if(n.composed){n.constructed?i|=32:s.putByte(0);for(var o=0;o<n.value.length;++o)n.value[o]!==undefined&&s.putBuffer(t.toDer(n.value[o]))}else if(n.type===t.Type.BMPSTRING)for(var o=0;o<n.value.length;++o)s.putInt16(n.value.charCodeAt(o));else s.putBytes(n.value);r.putByte(i);if(s.length()<=127)r.putByte(s.length()&127);else{var u=s.length(),a="";do a+=String.fromCharCode(u&255),u>>>=8;while(u>0);r.putByte(a.length|128);for(var o=a.length-1;o>=0;--o)r.putByte(a.charCodeAt(o))}return r.putBuffer(s),r},t.oidToDer=function(t){var n=t.split("."),r=e.util.createBuffer();r.putByte(40*parseInt(n[0],10)+parseInt(n[1],10));var i,s,o,u;for(var a=2;a<n.length;++a){i=!0,s=[],o=parseInt(n[a],10);do u=o&127,o>>>=7,i||(u|=128),s.push(u),i=!1;while(o>0);for(var f=s.length-1;f>=0;--f)r.putByte(s[f])}return r},t.derToOid=function(t){var n;typeof t=="string"&&(t=e.util.createBuffer(t));var r=t.getByte();n=Math.floor(r/40)+"."+r%40;var i=0;while(t.length()>0)r=t.getByte(),i<<=7,r&128?i+=r&127:(n+="."+(i+r),i=0);return n},t.utcTimeToDate=function(e){var t=new Date,n=parseInt(e.substr(0,2),10);n=n>=50?1900+n:2e3+n;var r=parseInt(e.substr(2,2),10)-1,i=parseInt(e.substr(4,2),10),s=parseInt(e.substr(6,2),10),o=parseInt(e.substr(8,2),10),u=0;if(e.length>11){var a=e.charAt(10),f=10;a!=="+"&&a!=="-"&&(u=parseInt(e.substr(10,2),10),f+=2)}t.setUTCFullYear(n,r,i),t.setUTCHours(s,o,u,0);if(f){a=e.charAt(f);if(a==="+"||a==="-"){var l=parseInt(e.substr(f+1,2),10),c=parseInt(e.substr(f+4,2),10),h=l*60+c;h*=6e4,a==="+"?t.setTime(+t-h):t.setTime(+t+h)}}return t},t.generalizedTimeToDate=function(e){var t=new Date,n=parseInt(e.substr(0,4),10),r=parseInt(e.substr(4,2),10)-1,i=parseInt(e.substr(6,2),10),s=parseInt(e.substr(8,2),10),o=parseInt(e.substr(10,2),10),u=parseInt(e.substr(12,2),10),a=0,f=0,l=!1;e.charAt(e.length-1)==="Z"&&(l=!0);var c=e.length-5,h=e.charAt(c);if(h==="+"||h==="-"){var p=parseInt(e.substr(c+1,2),10),d=parseInt(e.substr(c+4,2),10);f=p*60+d,f*=6e4,h==="+"&&(f*=-1),l=!0}return e.charAt(14)==="."&&(a=parseFloat(e.substr(14),10)*1e3),l?(t.setUTCFullYear(n,r,i),t.setUTCHours(s,o,u,a),t.setTime(+t+f)):(t.setFullYear(n,r,i),t.setHours(s,o,u,a)),t},t.dateToUtcTime=function(e){if(typeof e=="string")return e;var t="",n=[];n.push((""+e.getUTCFullYear()).substr(2)),n.push(""+(e.getUTCMonth()+1)),n.push(""+e.getUTCDate()),n.push(""+e.getUTCHours()),n.push(""+e.getUTCMinutes()),n.push(""+e.getUTCSeconds());for(var r=0;r<n.length;++r)n[r].length<2&&(t+="0"),t+=n[r];return t+="Z",t},t.dateToGeneralizedTime=function(e){if(typeof e=="string")return e;var t="",n=[];n.push(""+e.getUTCFullYear()),n.push(""+(e.getUTCMonth()+1)),n.push(""+e.getUTCDate()),n.push(""+e.getUTCHours()),n.push(""+e.getUTCMinutes()),n.push(""+e.getUTCSeconds());for(var r=0;r<n.length;++r)n[r].length<2&&(t+="0"),t+=n[r];return t+="Z",t},t.integerToDer=function(t){var n=e.util.createBuffer();if(t>=-128&&t<128)return n.putSignedInt(t,8);if(t>=-32768&&t<32768)return n.putSignedInt(t,16);if(t>=-8388608&&t<8388608)return n.putSignedInt(t,24);if(t>=-2147483648&&t<2147483648)return n.putSignedInt(t,32);var r=new Error("Integer too large; max is 32-bits.");throw r.integer=t,r},t.derToInteger=function(t){typeof t=="string"&&(t=e.util.createBuffer(t));var n=t.length()*8;if(n>32)throw new Error("Integer too large; max is 32-bits.");return t.getSignedInt(n)},t.validate=function(n,r,i,s){var o=!1;if(n.tagClass!==r.tagClass&&typeof r.tagClass!="undefined"||n.type!==r.type&&typeof r.type!="undefined")s&&(n.tagClass!==r.tagClass&&s.push("["+r.name+"] "+'Expected tag class "'+r.tagClass+'", got "'+n.tagClass+'"'),n.type!==r.type&&s.push("["+r.name+"] "+'Expected type "'+r.type+'", got "'+n.type+'"'));else if(n.constructed===r.constructed||typeof r.constructed=="undefined"){o=!0;if(r.value&&e.util.isArray(r.value)){var u=0;for(var a=0;o&&a<r.value.length;++a)o=r.value[a].optional||!1,n.value[u]&&(o=t.validate(n.value[u],r.value[a],i,s),o?++u:r.value[a].optional&&(o=!0)),!o&&s&&s.push("["+r.name+"] "+'Tag class "'+r.tagClass+'", type "'+r.type+'" expected value length "'+r.value.length+'", got "'+n.value.length+'"')}o&&i&&(r.capture&&(i[r.capture]=n.value),r.captureAsn1&&(i[r.captureAsn1]=n))}else s&&s.push("["+r.name+"] "+'Expected constructed "'+r.constructed+'", got "'+n.constructed+'"');return o};var r=/[^\\u0000-\\u00ff]/;t.prettyPrint=function(n,i,s){var o="";i=i||0,s=s||2,i>0&&(o+="\n");var u="";for(var a=0;a<i*s;++a)u+=" ";o+=u+"Tag: ";switch(n.tagClass){case t.Class.UNIVERSAL:o+="Universal:";break;case t.Class.APPLICATION:o+="Application:";break;case t.Class.CONTEXT_SPECIFIC:o+="Context-Specific:";break;case t.Class.PRIVATE:o+="Private:"}if(n.tagClass===t.Class.UNIVERSAL){o+=n.type;switch(n.type){case t.Type.NONE:o+=" (None)";break;case t.Type.BOOLEAN:o+=" (Boolean)";break;case t.Type.BITSTRING:o+=" (Bit string)";break;case t.Type.INTEGER:o+=" (Integer)";break;case t.Type.OCTETSTRING:o+=" (Octet string)";break;case t.Type.NULL:o+=" (Null)";break;case t.Type.OID:o+=" (Object Identifier)";break;case t.Type.ODESC:o+=" (Object Descriptor)";break;case t.Type.EXTERNAL:o+=" (External or Instance of)";break;case t.Type.REAL:o+=" (Real)";break;case t.Type.ENUMERATED:o+=" (Enumerated)";break;case t.Type.EMBEDDED:o+=" (Embedded PDV)";break;case t.Type.UTF8:o+=" (UTF8)";break;case t.Type.ROID:o+=" (Relative Object Identifier)";break;case t.Type.SEQUENCE:o+=" (Sequence)";break;case t.Type.SET:o+=" (Set)";break;case t.Type.PRINTABLESTRING:o+=" (Printable String)";break;case t.Type.IA5String:o+=" (IA5String (ASCII))";break;case t.Type.UTCTIME:o+=" (UTC time)";break;case t.Type.GENERALIZEDTIME:o+=" (Generalized time)";break;case t.Type.BMPSTRING:o+=" (BMP String)"}}else o+=n.type;o+="\n",o+=u+"Constructed: "+n.constructed+"\n";if(n.composed){var f=0,l="";for(var a=0;a<n.value.length;++a)n.value[a]!==undefined&&(f+=1,l+=t.prettyPrint(n.value[a],i+1,s),a+1<n.value.length&&(l+=","));o+=u+"Sub values: "+f+l}else{o+=u+"Value: ";if(n.type===t.Type.OID){var c=t.derToOid(n.value);o+=c,e.pki&&e.pki.oids&&c in e.pki.oids&&(o+=" ("+e.pki.oids[c]+") ")}if(n.type===t.Type.INTEGER)try{o+=t.derToInteger(n.value)}catch(h){o+="0x"+e.util.bytesToHex(n.value)}else n.type===t.Type.OCTETSTRING?(r.test(n.value)||(o+="("+n.value+") "),o+="0x"+e.util.bytesToHex(n.value)):n.type===t.Type.UTF8?o+=e.util.decodeUtf8(n.value):n.type===t.Type.PRINTABLESTRING||n.type===t.Type.IA5String?o+=n.value:r.test(n.value)?o+="0x"+e.util.bytesToHex(n.value):n.value.length===0?o+="[null]":o+=n.value}return o}}var r="asn1";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/asn1",["require","module","./util","./oids"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function u(){n=String.fromCharCode(128),n+=e.util.fillString(String.fromCharCode(0),64),r=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,6,11,0,5,10,15,4,9,14,3,8,13,2,7,12,5,8,11,14,1,4,7,10,13,0,3,6,9,12,15,2,0,7,14,5,12,3,10,1,8,15,6,13,4,11,2,9],i=[7,12,17,22,7,12,17,22,7,12,17,22,7,12,17,22,5,9,14,20,5,9,14,20,5,9,14,20,5,9,14,20,4,11,16,23,4,11,16,23,4,11,16,23,4,11,16,23,6,10,15,21,6,10,15,21,6,10,15,21,6,10,15,21],s=new Array(64);for(var t=0;t<64;++t)s[t]=Math.floor(Math.abs(Math.sin(t+1))*4294967296);o=!0}function a(e,t,n){var o,u,a,f,l,c,h,p,d=n.length();while(d>=64){u=e.h0,a=e.h1,f=e.h2,l=e.h3;for(p=0;p<16;++p)t[p]=n.getInt32Le(),c=l^a&(f^l),o=u+c+s[p]+t[p],h=i[p],u=l,l=f,f=a,a+=o<<h|o>>>32-h;for(;p<32;++p)c=f^l&(a^f),o=u+c+s[p]+t[r[p]],h=i[p],u=l,l=f,f=a,a+=o<<h|o>>>32-h;for(;p<48;++p)c=a^f^l,o=u+c+s[p]+t[r[p]],h=i[p],u=l,l=f,f=a,a+=o<<h|o>>>32-h;for(;p<64;++p)c=f^(a|~l),o=u+c+s[p]+t[r[p]],h=i[p],u=l,l=f,f=a,a+=o<<h|o>>>32-h;e.h0=e.h0+u|0,e.h1=e.h1+a|0,e.h2=e.h2+f|0,e.h3=e.h3+l|0,d-=64}}var t=e.md5=e.md5||{};e.md=e.md||{},e.md.algorithms=e.md.algorithms||{},e.md.md5=e.md.algorithms.md5=t,t.create=function(){o||u();var t=null,r=e.util.createBuffer(),i=new Array(16),s={algorithm:"md5",blockLength:64,digestLength:16,messageLength:0,messageLength64:[0,0]};return s.start=function(){return s.messageLength=0,s.messageLength64=[0,0],r=e.util.createBuffer(),t={h0:1732584193,h1:4023233417,h2:2562383102,h3:271733878},s},s.start(),s.update=function(n,o){return o==="utf8"&&(n=e.util.encodeUtf8(n)),s.messageLength+=n.length,s.messageLength64[0]+=n.length/4294967296>>>0,s.messageLength64[1]+=n.length>>>0,r.putBytes(n),a(t,i,r),(r.read>2048||r.length()===0)&&r.compact(),s},s.digest=function(){var o=e.util.createBuffer();o.putBytes(r.bytes()),o.putBytes(n.substr(0,64-(s.messageLength64[1]+8&63))),o.putInt32Le(s.messageLength64[1]<<3),o.putInt32Le(s.messageLength64[0]<<3|s.messageLength64[0]>>>28);var u={h0:t.h0,h1:t.h1,h2:t.h2,h3:t.h3};a(u,i,o);var f=e.util.createBuffer();return f.putInt32Le(u.h0),f.putInt32Le(u.h1),f.putInt32Le(u.h2),f.putInt32Le(u.h3),f},s};var n=null,r=null,i=null,s=null,o=!1}var r="md5";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/md5",["require","module","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function i(){n=String.fromCharCode(128),n+=e.util.fillString(String.fromCharCode(0),64),r=!0}function s(e,t,n){var r,i,s,o,u,a,f,l,c=n.length();while(c>=64){i=e.h0,s=e.h1,o=e.h2,u=e.h3,a=e.h4;for(l=0;l<16;++l)r=n.getInt32(),t[l]=r,f=u^s&(o^u),r=(i<<5|i>>>27)+f+a+1518500249+r,a=u,u=o,o=s<<30|s>>>2,s=i,i=r;for(;l<20;++l)r=t[l-3]^t[l-8]^t[l-14]^t[l-16],r=r<<1|r>>>31,t[l]=r,f=u^s&(o^u),r=(i<<5|i>>>27)+f+a+1518500249+r,a=u,u=o,o=s<<30|s>>>2,s=i,i=r;for(;l<32;++l)r=t[l-3]^t[l-8]^t[l-14]^t[l-16],r=r<<1|r>>>31,t[l]=r,f=s^o^u,r=(i<<5|i>>>27)+f+a+1859775393+r,a=u,u=o,o=s<<30|s>>>2,s=i,i=r;for(;l<40;++l)r=t[l-6]^t[l-16]^t[l-28]^t[l-32],r=r<<2|r>>>30,t[l]=r,f=s^o^u,r=(i<<5|i>>>27)+f+a+1859775393+r,a=u,u=o,o=s<<30|s>>>2,s=i,i=r;for(;l<60;++l)r=t[l-6]^t[l-16]^t[l-28]^t[l-32],r=r<<2|r>>>30,t[l]=r,f=s&o|u&(s^o),r=(i<<5|i>>>27)+f+a+2400959708+r,a=u,u=o,o=s<<30|s>>>2,s=i,i=r;for(;l<80;++l)r=t[l-6]^t[l-16]^t[l-28]^t[l-32],r=r<<2|r>>>30,t[l]=r,f=s^o^u,r=(i<<5|i>>>27)+f+a+3395469782+r,a=u,u=o,o=s<<30|s>>>2,s=i,i=r;e.h0=e.h0+i|0,e.h1=e.h1+s|0,e.h2=e.h2+o|0,e.h3=e.h3+u|0,e.h4=e.h4+a|0,c-=64}}var t=e.sha1=e.sha1||{};e.md=e.md||{},e.md.algorithms=e.md.algorithms||{},e.md.sha1=e.md.algorithms.sha1=t,t.create=function(){r||i();var t=null,o=e.util.createBuffer(),u=new Array(80),a={algorithm:"sha1",blockLength:64,digestLength:20,messageLength:0,messageLength64:[0,0]};return a.start=function(){return a.messageLength=0,a.messageLength64=[0,0],o=e.util.createBuffer(),t={h0:1732584193,h1:4023233417,h2:2562383102,h3:271733878,h4:3285377520},a},a.start(),a.update=function(n,r){return r==="utf8"&&(n=e.util.encodeUtf8(n)),a.messageLength+=n.length,a.messageLength64[0]+=n.length/4294967296>>>0,a.messageLength64[1]+=n.length>>>0,o.putBytes(n),s(t,u,o),(o.read>2048||o.length()===0)&&o.compact(),a},a.digest=function(){var r=e.util.createBuffer();r.putBytes(o.bytes()),r.putBytes(n.substr(0,64-(a.messageLength64[1]+8&63))),r.putInt32(a.messageLength64[0]<<3|a.messageLength64[0]>>>28),r.putInt32(a.messageLength64[1]<<3);var i={h0:t.h0,h1:t.h1,h2:t.h2,h3:t.h3,h4:t.h4};s(i,u,r);var f=e.util.createBuffer();return f.putInt32(i.h0),f.putInt32(i.h1),f.putInt32(i.h2),f.putInt32(i.h3),f.putInt32(i.h4),f},a};var n=null,r=!1}var r="sha1";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/sha1",["require","module","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function s(){n=String.fromCharCode(128),n+=e.util.fillString(String.fromCharCode(0),64),i=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],r=!0}function o(e,t,n){var r,s,o,u,a,f,l,c,h,p,d,v,m,g,y,b=n.length();while(b>=64){for(l=0;l<16;++l)t[l]=n.getInt32();for(;l<64;++l)r=t[l-2],r=(r>>>17|r<<15)^(r>>>19|r<<13)^r>>>10,s=t[l-15],s=(s>>>7|s<<25)^(s>>>18|s<<14)^s>>>3,t[l]=r+t[l-7]+s+t[l-16]|0;c=e.h0,h=e.h1,p=e.h2,d=e.h3,v=e.h4,m=e.h5,g=e.h6,y=e.h7;for(l=0;l<64;++l)u=(v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7),a=g^v&(m^g),o=(c>>>2|c<<30)^(c>>>13|c<<19)^(c>>>22|c<<10),f=c&h|p&(c^h),r=y+u+a+i[l]+t[l],s=o+f,y=g,g=m,m=v,v=d+r|0,d=p,p=h,h=c,c=r+s|0;e.h0=e.h0+c|0,e.h1=e.h1+h|0,e.h2=e.h2+p|0,e.h3=e.h3+d|0,e.h4=e.h4+v|0,e.h5=e.h5+m|0,e.h6=e.h6+g|0,e.h7=e.h7+y|0,b-=64}}var t=e.sha256=e.sha256||{};e.md=e.md||{},e.md.algorithms=e.md.algorithms||{},e.md.sha256=e.md.algorithms.sha256=t,t.create=function(){r||s();var t=null,i=e.util.createBuffer(),u=new Array(64),a={algorithm:"sha256",blockLength:64,digestLength:32,messageLength:0,messageLength64:[0,0]};return a.start=function(){return a.messageLength=0,a.messageLength64=[0,0],i=e.util.createBuffer(),t={h0:1779033703,h1:3144134277,h2:1013904242,h3:2773480762,h4:1359893119,h5:2600822924,h6:528734635,h7:1541459225},a},a.start(),a.update=function(n,r){return r==="utf8"&&(n=e.util.encodeUtf8(n)),a.messageLength+=n.length,a.messageLength64[0]+=n.length/4294967296>>>0,a.messageLength64[1]+=n.length>>>0,i.putBytes(n),o(t,u,i),(i.read>2048||i.length()===0)&&i.compact(),a},a.digest=function(){var r=e.util.createBuffer();r.putBytes(i.bytes()),r.putBytes(n.substr(0,64-(a.messageLength64[1]+8&63))),r.putInt32(a.messageLength64[0]<<3|a.messageLength64[0]>>>28),r.putInt32(a.messageLength64[1]<<3);var s={h0:t.h0,h1:t.h1,h2:t.h2,h3:t.h3,h4:t.h4,h5:t.h5,h6:t.h6,h7:t.h7};o(s,u,r);var f=e.util.createBuffer();return f.putInt32(s.h0),f.putInt32(s.h1),f.putInt32(s.h2),f.putInt32(s.h3),f.putInt32(s.h4),f.putInt32(s.h5),f.putInt32(s.h6),f.putInt32(s.h7),f},a};var n=null,r=!1,i=null}var r="sha256";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/sha256",["require","module","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function u(){r=String.fromCharCode(128),r+=e.util.fillString(String.fromCharCode(0),128),s=[[1116352408,3609767458],[1899447441,602891725],[3049323471,3964484399],[3921009573,2173295548],[961987163,4081628472],[1508970993,3053834265],[2453635748,2937671579],[2870763221,3664609560],[3624381080,2734883394],[310598401,1164996542],[607225278,1323610764],[1426881987,3590304994],[1925078388,4068182383],[2162078206,991336113],[2614888103,633803317],[3248222580,3479774868],[3835390401,2666613458],[4022224774,944711139],[264347078,2341262773],[604807628,2007800933],[770255983,1495990901],[1249150122,1856431235],[1555081692,3175218132],[1996064986,2198950837],[2554220882,3999719339],[2821834349,766784016],[2952996808,2566594879],[3210313671,3203337956],[3336571891,1034457026],[3584528711,2466948901],[113926993,3758326383],[338241895,168717936],[666307205,1188179964],[773529912,1546045734],[1294757372,1522805485],[1396182291,2643833823],[1695183700,2343527390],[1986661051,1014477480],[2177026350,1206759142],[2456956037,344077627],[2730485921,1290863460],[2820302411,3158454273],[3259730800,3505952657],[3345764771,106217008],[3516065817,3606008344],[3600352804,1432725776],[4094571909,1467031594],[275423344,851169720],[430227734,3100823752],[506948616,1363258195],[659060556,3750685593],[883997877,3785050280],[958139571,3318307427],[1322822218,3812723403],[1537002063,2003034995],[1747873779,3602036899],[1955562222,1575990012],[2024104815,1125592928],[2227730452,2716904306],[2361852424,442776044],[2428436474,593698344],[2756734187,3733110249],[3204031479,2999351573],[3329325298,3815920427],[3391569614,3928383900],[3515267271,566280711],[3940187606,3454069534],[4118630271,4000239992],[116418474,1914138554],[174292421,2731055270],[289380356,3203993006],[460393269,320620315],[685471733,587496836],[852142971,1086792851],[1017036298,365543100],[1126000580,2618297676],[1288033470,3409855158],[1501505948,4234509866],[1607167915,987167468],[1816402316,1246189591]],o={},o["SHA-512"]=[[1779033703,4089235720],[3144134277,2227873595],[1013904242,4271175723],[2773480762,1595750129],[1359893119,2917565137],[2600822924,725511199],[528734635,4215389547],[1541459225,327033209]],o["SHA-384"]=[[3418070365,3238371032],[1654270250,914150663],[2438529370,812702999],[355462360,4144912697],[1731405415,4290775857],[2394180231,1750603025],[3675008525,1694076839],[1203062813,3204075428]],o["SHA-512/256"]=[[573645204,4230739756],[2673172387,3360449730],[596883563,1867755857],[2520282905,1497426621],[2519219938,2827943907],[3193839141,1401305490],[721525244,746961066],[246885852,2177182882]],o["SHA-512/224"]=[[2352822216,424955298],[1944164710,2312950998],[502970286,855612546],[1738396948,1479516111],[258812777,2077511080],[2011393907,79989058],[1067287976,1780299464],[286451373,2446758561]],i=!0}function a(e,t,n){var r,i,o,u,a,f,l,c,h,p,d,v,m,g,y,b,w,E,S,x,T,N,C,k,L,A,O,M,_,D,P,H,B,j,F,I=n.length();while(I>=128){for(_=0;_<16;++_)t[_][0]=n.getInt32()>>>0,t[_][1]=n.getInt32()>>>0;for(;_<80;++_)H=t[_-2],D=H[0],P=H[1],r=((D>>>19|P<<13)^(P>>>29|D<<3)^D>>>6)>>>0,i=((D<<13|P>>>19)^(P<<3|D>>>29)^(D<<26|P>>>6))>>>0,j=t[_-15],D=j[0],P=j[1],o=((D>>>1|P<<31)^(D>>>8|P<<24)^D>>>7)>>>0,u=((D<<31|P>>>1)^(D<<24|P>>>8)^(D<<25|P>>>7))>>>0,B=t[_-7],F=t[_-16],P=i+B[1]+u+F[1],t[_][0]=r+B[0]+o+F[0]+(P/4294967296>>>0)>>>0,t[_][1]=P>>>0;m=e[0][0],g=e[0][1],y=e[1][0],b=e[1][1],w=e[2][0],E=e[2][1],S=e[3][0],x=e[3][1],T=e[4][0],N=e[4][1],C=e[5][0],k=e[5][1],L=e[6][0],A=e[6][1],O=e[7][0],M=e[7][1];for(_=0;_<80;++_)l=((T>>>14|N<<18)^(T>>>18|N<<14)^(N>>>9|T<<23))>>>0,c=((T<<18|N>>>14)^(T<<14|N>>>18)^(N<<23|T>>>9))>>>0,h=(L^T&(C^L))>>>0,p=(A^N&(k^A))>>>0,a=((m>>>28|g<<4)^(g>>>2|m<<30)^(g>>>7|m<<25))>>>0,f=((m<<4|g>>>28)^(g<<30|m>>>2)^(g<<25|m>>>7))>>>0,d=(m&y|w&(m^y))>>>0,v=(g&b|E&(g^b))>>>0,P=M+c+p+s[_][1]+t[_][1],r=O+l+h+s[_][0]+t[_][0]+(P/4294967296>>>0)>>>0,i=P>>>0,P=f+v,o=a+d+(P/4294967296>>>0)>>>0,u=P>>>0,O=L,M=A,L=C,A=k,C=T,k=N,P=x+i,T=S+r+(P/4294967296>>>0)>>>0,N=P>>>0,S=w,x=E,w=y,E=b,y=m,b=g,P=i+u,m=r+o+(P/4294967296>>>0)>>>0,g=P>>>0;P=e[0][1]+g,e[0][0]=e[0][0]+m+(P/4294967296>>>0)>>>0,e[0][1]=P>>>0,P=e[1][1]+b,e[1][0]=e[1][0]+y+(P/4294967296>>>0)>>>0,e[1][1]=P>>>0,P=e[2][1]+E,e[2][0]=e[2][0]+w+(P/4294967296>>>0)>>>0,e[2][1]=P>>>0,P=e[3][1]+x,e[3][0]=e[3][0]+S+(P/4294967296>>>0)>>>0,e[3][1]=P>>>0,P=e[4][1]+N,e[4][0]=e[4][0]+T+(P/4294967296>>>0)>>>0,e[4][1]=P>>>0,P=e[5][1]+k,e[5][0]=e[5][0]+C+(P/4294967296>>>0)>>>0,e[5][1]=P>>>0,P=e[6][1]+A,e[6][0]=e[6][0]+L+(P/4294967296>>>0)>>>0,e[6][1]=P>>>0,P=e[7][1]+M,e[7][0]=e[7][0]+O+(P/4294967296>>>0)>>>0,e[7][1]=P>>>0,I-=128}}var t=e.sha512=e.sha512||{};e.md=e.md||{},e.md.algorithms=e.md.algorithms||{},e.md.sha512=e.md.algorithms.sha512=t;var n=e.sha384=e.sha512.sha384=e.sha512.sha384||{};n.create=function(){return t.create("SHA-384")},e.md.sha384=e.md.algorithms.sha384=n,e.sha512.sha256=e.sha512.sha256||{create:function(){return t.create("SHA-512/256")}},e.md["sha512/256"]=e.md.algorithms["sha512/256"]=e.sha512.sha256,e.sha512.sha224=e.sha512.sha224||{create:function(){return t.create("SHA-512/224")}},e.md["sha512/224"]=e.md.algorithms["sha512/224"]=e.sha512.sha224,t.create=function(t){i||u(),typeof t=="undefined"&&(t="SHA-512");if(t in o){var n=o[t],s=null,f=e.util.createBuffer(),l=new Array(80);for(var c=0;c<80;++c)l[c]=new Array(2);var h={algorithm:t.replace("-","").toLowerCase(),blockLength:128,digestLength:64,messageLength:0,messageLength128:[0,0,0,0]};return h.start=function(){h.messageLength=0,h.messageLength128=[0,0,0,0],f=e.util.createBuffer(),s=new Array(n.length);for(var t=0;t<n.length;++t)s[t]=n[t].slice(0);return h},h.start(),h.update=function(t,n){n==="utf8"&&(t=e.util.encodeUtf8(t)),h.messageLength+=t.length;var r=t.length;r=[r/4294967296>>>0,r>>>0];for(var i=3;i>=0;--i)h.messageLength128[i]+=r[1],r[1]=r[0]+(h.messageLength128[i]/4294967296>>>0),h.messageLength128[i]=h.messageLength128[i]>>>0,r[0]=r[1]/4294967296>>>0;return f.putBytes(t),a(s,l,f),(f.read>2048||f.length()===0)&&f.compact(),h},h.digest=function(){var n=e.util.createBuffer();n.putBytes(f.bytes()),n.putBytes(r.substr(0,128-(h.messageLength128[3]+16&127)));var i=[];for(var o=0;o<3;++o)i[o]=h.messageLength128[o]<<3|h.messageLength128[o-1]>>>28;i[3]=h.messageLength128[3]<<3,n.putInt32(i[0]),n.putInt32(i[1]),n.putInt32(i[2]),n.putInt32(i[3]);var u=new Array(s.length);for(var o=0;o<s.length;++o)u[o]=s[o].slice(0);a(u,l,n);var c=e.util.createBuffer(),p;t==="SHA-512"?p=u.length:t==="SHA-384"?p=u.length-2:p=u.length-4;for(var o=0;o<p;++o)c.putInt32(u[o][0]),(o!==p-1||t!=="SHA-512/224")&&c.putInt32(u[o][1]);return c},h}throw new Error("Invalid SHA-512 algorithm: "+t)};var r=null,i=!1,s=null,o=null}var r="sha512";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/sha512",["require","module","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){e.md=e.md||{},e.md.algorithms={md5:e.md5,sha1:e.sha1,sha256:e.sha256},e.md.md5=e.md5,e.md.sha1=e.sha1,e.md.sha256=e.sha256}var r="md";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/md",["require","module","./md5","./sha1","./sha256","./sha512"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){var t=e.hmac=e.hmac||{};t.create=function(){var t=null,n=null,r=null,i=null,s={};return s.start=function(s,o){if(s!==null)if(typeof s=="string"){s=s.toLowerCase();if(!(s in e.md.algorithms))throw new Error('Unknown hash algorithm "'+s+'"');n=e.md.algorithms[s].create()}else n=s;if(o===null)o=t;else{if(typeof o=="string")o=e.util.createBuffer(o);else if(e.util.isArray(o)){var u=o;o=e.util.createBuffer();for(var a=0;a<u.length;++a)o.putByte(u[a])}var f=o.length();f>n.blockLength&&(n.start(),n.update(o.bytes()),o=n.digest()),r=e.util.createBuffer(),i=e.util.createBuffer(),f=o.length();for(var a=0;a<f;++a){var u=o.at(a);r.putByte(54^u),i.putByte(92^u)}if(f<n.blockLength){var u=n.blockLength-f;for(var a=0;a<u;++a)r.putByte(54),i.putByte(92)}t=o,r=r.bytes(),i=i.bytes()}n.start(),n.update(r)},s.update=function(e){n.update(e)},s.getMac=function(){var e=n.digest().bytes();return n.start(),n.update(i),n.update(e),n.digest()},s.digest=s.getMac,s}}var r="hmac";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/hmac",["require","module","./md","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function n(e){var t=e.name+": ",n=[],r=function(e,t){return" "+t};for(var i=0;i<e.values.length;++i)n.push(e.values[i].replace(/^(\S+\r\n)/,r));t+=n.join(",")+"\r\n";var s=0,o=-1;for(var i=0;i<t.length;++i,++s)if(s>65&&o!==-1){var u=t[o];u===","?(++o,t=t.substr(0,o)+"\r\n "+t.substr(o)):t=t.substr(0,o)+"\r\n"+u+t.substr(o+1),s=i-o-1,o=-1,++i}else if(t[i]===" "||t[i]==="	"||t[i]===",")o=i;return t}function r(e){return e.replace(/^\s+/,"")}var t=e.pem=e.pem||{};t.encode=function(t,r){r=r||{};var i="-----BEGIN "+t.type+"-----\r\n",s;t.procType&&(s={name:"Proc-Type",values:[String(t.procType.version),t.procType.type]},i+=n(s)),t.contentDomain&&(s={name:"Content-Domain",values:[t.contentDomain]},i+=n(s)),t.dekInfo&&(s={name:"DEK-Info",values:[t.dekInfo.algorithm]},t.dekInfo.parameters&&s.values.push(t.dekInfo.parameters),i+=n(s));if(t.headers)for(var o=0;o<t.headers.length;++o)i+=n(t.headers[o]);return t.procType&&(i+="\r\n"),i+=e.util.encode64(t.body,r.maxline||64)+"\r\n",i+="-----END "+t.type+"-----\r\n",i},t.decode=function(t){var n=[],i=/\s*-----BEGIN ([A-Z0-9- ]+)-----\r?\n?([\x21-\x7e\s]+?(?:\r?\n\r?\n))?([:A-Za-z0-9+\/=\s]+?)-----END \1-----/g,s=/([\x21-\x7e]+):\s*([\x21-\x7e\s^:]+)/,o=/\r?\n/,u;for(;;){u=i.exec(t);if(!u)break;var a={type:u[1],procType:null,contentDomain:null,dekInfo:null,headers:[],body:e.util.decode64(u[3])};n.push(a);if(!u[2])continue;var f=u[2].split(o),l=0;while(u&&l<f.length){var c=f[l].replace(/\s+$/,"");for(var h=l+1;h<f.length;++h){var p=f[h];if(!/\s/.test(p[0]))break;c+=p,l=h}u=c.match(s);if(u){var d={name:u[1],values:[]},v=u[2].split(",");for(var m=0;m<v.length;++m)d.values.push(r(v[m]));if(!a.procType){if(d.name!=="Proc-Type")throw new Error('Invalid PEM formatted message. The first encapsulated header must be "Proc-Type".');if(d.values.length!==2)throw new Error('Invalid PEM formatted message. The "Proc-Type" header must have two subfields.');a.procType={version:v[0],type:v[1]}}else if(!a.contentDomain&&d.name==="Content-Domain")a.contentDomain=v[0]||"";else if(!a.dekInfo&&d.name==="DEK-Info"){if(d.values.length===0)throw new Error('Invalid PEM formatted message. The "DEK-Info" header must have at least one subfield.');a.dekInfo={algorithm:v[0],parameters:v[1]||null}}else a.headers.push(d)}++l}if(a.procType==="ENCRYPTED"&&!a.dekInfo)throw new Error('Invalid PEM formatted message. The "DEK-Info" header must be present if "Proc-Type" is "ENCRYPTED".')}if(n.length===0)throw new Error("Invalid PEM formatted message.");return n}}var r="pem";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/pem",["require","module","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function t(t,n){var r=function(){return new e.des.Algorithm(t,n)};e.cipher.registerAlgorithm(t,r)}function l(e){var t=[0,4,536870912,536870916,65536,65540,536936448,536936452,512,516,536871424,536871428,66048,66052,536936960,536936964],n=[0,1,1048576,1048577,67108864,67108865,68157440,68157441,256,257,1048832,1048833,67109120,67109121,68157696,68157697],r=[0,8,2048,2056,16777216,16777224,16779264,16779272,0,8,2048,2056,16777216,16777224,16779264,16779272],i=[0,2097152,134217728,136314880,8192,2105344,134225920,136323072,131072,2228224,134348800,136445952,139264,2236416,134356992,136454144],s=[0,262144,16,262160,0,262144,16,262160,4096,266240,4112,266256,4096,266240,4112,266256],o=[0,1024,32,1056,0,1024,32,1056,33554432,33555456,33554464,33555488,33554432,33555456,33554464,33555488],u=[0,268435456,524288,268959744,2,268435458,524290,268959746,0,268435456,524288,268959744,2,268435458,524290,268959746],a=[0,65536,2048,67584,536870912,536936448,536872960,536938496,131072,196608,133120,198656,537001984,537067520,537004032,537069568],f=[0,262144,0,262144,2,262146,2,262146,33554432,33816576,33554432,33816576,33554434,33816578,33554434,33816578],l=[0,268435456,8,268435464,0,268435456,8,268435464,1024,268436480,1032,268436488,1024,268436480,1032,268436488],c=[0,32,0,32,1048576,1048608,1048576,1048608,8192,8224,8192,8224,1056768,1056800,1056768,1056800],h=[0,16777216,512,16777728,2097152,18874368,2097664,18874880,67108864,83886080,67109376,83886592,69206016,85983232,69206528,85983744],p=[0,4096,134217728,134221824,524288,528384,134742016,134746112,16,4112,134217744,134221840,524304,528400,134742032,134746128],d=[0,4,256,260,0,4,256,260,1,5,257,261,1,5,257,261],v=e.length()>8?3:1,m=[],g=[0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0],y=0,b;for(var w=0;w<v;w++){var E=e.getInt32(),S=e.getInt32();b=(E>>>4^S)&252645135,S^=b,E^=b<<4,b=(S>>>-16^E)&65535,E^=b,S^=b<<-16,b=(E>>>2^S)&858993459,S^=b,E^=b<<2,b=(S>>>-16^E)&65535,E^=b,S^=b<<-16,b=(E>>>1^S)&1431655765,S^=b,E^=b<<1,b=(S>>>8^E)&16711935,E^=b,S^=b<<8,b=(E>>>1^S)&1431655765,S^=b,E^=b<<1,b=E<<8|S>>>20&240,E=S<<24|S<<8&16711680|S>>>8&65280|S>>>24&240,S=b;for(var x=0;x<g.length;++x){g[x]?(E=E<<2|E>>>26,S=S<<2|S>>>26):(E=E<<1|E>>>27,S=S<<1|S>>>27),E&=-15,S&=-15;var T=t[E>>>28]|n[E>>>24&15]|r[E>>>20&15]|i[E>>>16&15]|s[E>>>12&15]|o[E>>>8&15]|u[E>>>4&15],N=a[S>>>28]|f[S>>>24&15]|l[S>>>20&15]|c[S>>>16&15]|h[S>>>12&15]|p[S>>>8&15]|d[S>>>4&15];b=(N>>>16^T)&65535,m[y++]=T^b,m[y++]=N^b<<16}}return m}function c(e,t,l,c){var h=e.length===32?3:9,p;h===3?p=c?[30,-2,-2]:[0,32,2]:p=c?[94,62,-2,32,64,2,30,-2,-2]:[0,32,2,62,30,-2,64,96,2];var d,v=t[0],m=t[1];d=(v>>>4^m)&252645135,m^=d,v^=d<<4,d=(v>>>16^m)&65535,m^=d,v^=d<<16,d=(m>>>2^v)&858993459,v^=d,m^=d<<2,d=(m>>>8^v)&16711935,v^=d,m^=d<<8,d=(v>>>1^m)&1431655765,m^=d,v^=d<<1,v=v<<1|v>>>31,m=m<<1|m>>>31;for(var g=0;g<h;g+=3){var y=p[g+1],b=p[g+2];for(var w=p[g];w!=y;w+=b){var E=m^e[w],S=(m>>>4|m<<28)^e[w+1];d=v,v=m,m=d^(r[E>>>24&63]|s[E>>>16&63]|u[E>>>8&63]|f[E&63]|n[S>>>24&63]|i[S>>>16&63]|o[S>>>8&63]|a[S&63])}d=v,v=m,m=d}v=v>>>1|v<<31,m=m>>>1|m<<31,d=(v>>>1^m)&1431655765,m^=d,v^=d<<1,d=(m>>>8^v)&16711935,v^=d,m^=d<<8,d=(m>>>2^v)&858993459,v^=d,m^=d<<2,d=(v>>>16^m)&65535,m^=d,v^=d<<16,d=(v>>>4^m)&252645135,m^=d,v^=d<<4,l[0]=v,l[1]=m}function h(t){t=t||{};var n=(t.mode||"CBC").toUpperCase(),r="DES-"+n,i;t.decrypt?i=e.cipher.createDecipher(r,t.key):i=e.cipher.createCipher(r,t.key);var s=i.start;return i.start=function(t,n){var r=null;n instanceof e.util.ByteBuffer&&(r=n,n={}),n=n||{},n.output=r,n.iv=t,s.call(i,n)},i}e.des=e.des||{},e.des.startEncrypting=function(e,t,n,r){var i=h({key:e,output:n,decrypt:!1,mode:r||(t===null?"ECB":"CBC")});return i.start(t),i},e.des.createEncryptionCipher=function(e,t){return h({key:e,output:null,decrypt:!1,mode:t})},e.des.startDecrypting=function(e,t,n,r){var i=h({key:e,output:n,decrypt:!0,mode:r||(t===null?"ECB":"CBC")});return i.start(t),i},e.des.createDecryptionCipher=function(e,t){return h({key:e,output:null,decrypt:!0,mode:t})},e.des.Algorithm=function(e,t){var n=this;n.name=e,n.mode=new t({blockSize:8,cipher:{encrypt:function(e,t){return c(n._keys,e,t,!1)},decrypt:function(e,t){return c(n._keys,e,t,!0)}}}),n._init=!1},e.des.Algorithm.prototype.initialize=function(t){if(this._init)return;var n=e.util.createBuffer(t.key);if(this.name.indexOf("3DES")===0&&n.length()!==24)throw new Error("Invalid Triple-DES key size: "+n.length()*8);this._keys=l(n),this._init=!0},t("DES-ECB",e.cipher.modes.ecb),t("DES-CBC",e.cipher.modes.cbc),t("DES-CFB",e.cipher.modes.cfb),t("DES-OFB",e.cipher.modes.ofb),t("DES-CTR",e.cipher.modes.ctr),t("3DES-ECB",e.cipher.modes.ecb),t("3DES-CBC",e.cipher.modes.cbc),t("3DES-CFB",e.cipher.modes.cfb),t("3DES-OFB",e.cipher.modes.ofb),t("3DES-CTR",e.cipher.modes.ctr);var n=[16843776,0,65536,16843780,16842756,66564,4,65536,1024,16843776,16843780,1024,16778244,16842756,16777216,4,1028,16778240,16778240,66560,66560,16842752,16842752,16778244,65540,16777220,16777220,65540,0,1028,66564,16777216,65536,16843780,4,16842752,16843776,16777216,16777216,1024,16842756,65536,66560,16777220,1024,4,16778244,66564,16843780,65540,16842752,16778244,16777220,1028,66564,16843776,1028,16778240,16778240,0,65540,66560,0,16842756],r=[-2146402272,-2147450880,32768,1081376,1048576,32,-2146435040,-2147450848,-2147483616,-2146402272,-2146402304,-2147483648,-2147450880,1048576,32,-2146435040,1081344,1048608,-2147450848,0,-2147483648,32768,1081376,-2146435072,1048608,-2147483616,0,1081344,32800,-2146402304,-2146435072,32800,0,1081376,-2146435040,1048576,-2147450848,-2146435072,-2146402304,32768,-2146435072,-2147450880,32,-2146402272,1081376,32,32768,-2147483648,32800,-2146402304,1048576,-2147483616,1048608,-2147450848,-2147483616,1048608,1081344,0,-2147450880,32800,-2147483648,-2146435040,-2146402272,1081344],i=[520,134349312,0,134348808,134218240,0,131592,134218240,131080,134217736,134217736,131072,134349320,131080,134348800,520,134217728,8,134349312,512,131584,134348800,134348808,131592,134218248,131584,131072,134218248,8,134349320,512,134217728,134349312,134217728,131080,520,131072,134349312,134218240,0,512,131080,134349320,134218240,134217736,512,0,134348808,134218248,131072,134217728,134349320,8,131592,131584,134217736,134348800,134218248,520,134348800,131592,8,134348808,131584],s=[8396801,8321,8321,128,8396928,8388737,8388609,8193,0,8396800,8396800,8396929,129,0,8388736,8388609,1,8192,8388608,8396801,128,8388608,8193,8320,8388737,1,8320,8388736,8192,8396928,8396929,129,8388736,8388609,8396800,8396929,129,0,0,8396800,8320,8388736,8388737,1,8396801,8321,8321,128,8396929,129,1,8192,8388609,8193,8396928,8388737,8193,8320,8388608,8396801,128,8388608,8192,8396928],o=[256,34078976,34078720,1107296512,524288,256,1073741824,34078720,1074266368,524288,33554688,1074266368,1107296512,1107820544,524544,1073741824,33554432,1074266112,1074266112,0,1073742080,1107820800,1107820800,33554688,1107820544,1073742080,0,1107296256,34078976,33554432,1107296256,524544,524288,1107296512,256,33554432,1073741824,34078720,1107296512,1074266368,33554688,1073741824,1107820544,34078976,1074266368,256,33554432,1107820544,1107820800,524544,1107296256,1107820800,34078720,0,1074266112,1107296256,524544,33554688,1073742080,524288,0,1074266112,34078976,1073742080],u=[536870928,541065216,16384,541081616,541065216,16,541081616,4194304,536887296,4210704,4194304,536870928,4194320,536887296,536870912,16400,0,4194320,536887312,16384,4210688,536887312,16,541065232,541065232,0,4210704,541081600,16400,4210688,541081600,536870912,536887296,16,541065232,4210688,541081616,4194304,16400,536870928,4194304,536887296,536870912,16400,536870928,541081616,4210688,541065216,4210704,541081600,0,541065232,16,16384,541065216,4210704,16384,4194320,536887312,0,541081600,536870912,4194320,536887312],a=[2097152,69206018,67110914,0,2048,67110914,2099202,69208064,69208066,2097152,0,67108866,2,67108864,69206018,2050,67110912,2099202,2097154,67110912,67108866,69206016,69208064,2097154,69206016,2048,2050,69208066,2099200,2,67108864,2099200,67108864,2099200,2097152,67110914,67110914,69206018,69206018,2,2097154,67108864,67110912,2097152,69208064,2050,2099202,69208064,2050,67108866,69208066,69206016,2099200,0,2,69208066,0,2099202,69206016,2048,67108866,67110912,2048,2097154],f=[268439616,4096,262144,268701760,268435456,268439616,64,268435456,262208,268697600,268701760,266240,268701696,266304,4096,64,268697600,268435520,268439552,4160,266240,262208,268697664,268701696,4160,0,0,268697664,268435520,268439552,266304,262144,266304,262144,268701696,4096,64,268697664,4096,266304,268439552,64,268435520,268697600,268697664,268435456,262144,268439616,0,268701760,262208,268435520,268697600,268439552,268439616,0,268701760,266240,266240,4160,4160,262208,268435456,268701696]}var r="des";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/des",["require","module","./cipher","./cipherModes","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){var n=e.pkcs5=e.pkcs5||{},r=typeof process!="undefined"&&process.versions&&process.versions.node,i;r&&!e.disableNativeCode&&(i=t("crypto")),e.pbkdf2=n.pbkdf2=function(t,n,s,o,u,a){function w(){if(y>c)return a(null,d);p.start(null,null),p.update(n),p.update(e.util.int32ToBytes(y)),v=g=p.digest().getBytes(),b=2,E()}function E(){if(b<=s)return p.start(null,null),p.update(g),m=p.digest().getBytes(),v=e.util.xorBytes(v,m,f),g=m,++b,e.util.setImmediate(E);d+=y<c?v:v.substr(0,h),++y,w()}typeof u=="function"&&(a=u,u=null);if(r&&!e.disableNativeCode&&i.pbkdf2&&(u===null||typeof u!="object")&&(i.pbkdf2Sync.length>4||!u||u==="sha1"))return typeof u!="string"&&(u="sha1"),n=new Buffer(n,"binary"),a?i.pbkdf2Sync.length===4?i.pbkdf2(t,n,s,o,function(e,t){if(e)return a(e);a(null,t.toString("binary"))}):i.pbkdf2(t,n,s,o,u,function(e,t){if(e)return a(e);a(null,t.toString("binary"))}):i.pbkdf2Sync.length===4?i.pbkdf2Sync(t,n,s,o).toString("binary"):i.pbkdf2Sync(t,n,s,o,u).toString("binary");if(typeof u=="undefined"||u===null)u=e.md.sha1.create();if(typeof u=="string"){if(!(u in e.md.algorithms))throw new Error("Unknown hash algorithm: "+u);u=e.md[u].create()}var f=u.digestLength;if(o>4294967295*f){var l=new Error("Derived key is too long.");if(a)return a(l);throw l}var c=Math.ceil(o/f),h=o-(c-1)*f,p=e.hmac.create();p.start(u,t);var d="",v,m,g;if(!a){for(var y=1;y<=c;++y){p.start(null,null),p.update(n),p.update(e.util.int32ToBytes(y)),v=g=p.digest().getBytes();for(var b=2;b<=s;++b)p.start(null,null),p.update(g),m=p.digest().getBytes(),v=e.util.xorBytes(v,m,f),g=m;d+=y<c?v:v.substr(0,h)}return d}var y=1,b;w()}}var r="pbkdf2";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/pbkdf2",["require","module","./hmac","./md","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){var n=typeof process!="undefined"&&process.versions&&process.versions.node,r=null;!e.disableNativeCode&&n&&!process.versions["node-webkit"]&&(r=t("crypto"));var i=e.prng=e.prng||{};i.create=function(t){function u(e){if(n.pools[0].messageLength>=32)return f(),e();var t=32-n.pools[0].messageLength<<5;n.seedFile(t,function(t,r){if(t)return e(t);n.collect(r),f(),e()})}function a(){if(n.pools[0].messageLength>=32)return f();var e=32-n.pools[0].messageLength<<5;n.collect(n.seedFileSync(e)),f()}function f(){var e=n.plugin.md.create();e.update(n.pools[0].digest().getBytes()),n.pools[0].start();var t=1;for(var r=1;r<32;++r)t=t===31?2147483648:t<<2,t%n.reseeds===0&&(e.update(n.pools[r].digest().getBytes()),n.pools[r].start());var i=e.digest().getBytes();e.start(),e.update(i);var s=e.digest().getBytes();n.key=n.plugin.formatKey(i),n.seed=n.plugin.formatSeed(s),n.reseeds=n.reseeds===4294967295?0:n.reseeds+1,n.generated=0}function l(t){var n=null;if(typeof window!="undefined"){var r=window.crypto||window.msCrypto;r&&r.getRandomValues&&(n=function(e){return r.getRandomValues(e)})}var i=e.util.createBuffer();if(n)while(i.length()<t){var s=Math.max(1,Math.min(t-i.length(),65536)/4),o=new Uint32Array(Math.floor(s));try{n(o);for(var u=0;u<o.length;++u)i.putInt32(o[u])}catch(a){if(!(typeof QuotaExceededError!="undefined"&&a instanceof QuotaExceededError))throw a}}if(i.length()<t){var f,l,c,h=Math.floor(Math.random()*65536);while(i.length()<t){l=16807*(h&65535),f=16807*(h>>16),l+=(f&32767)<<16,l+=f>>15,l=(l&2147483647)+(l>>31),h=l&4294967295;for(var u=0;u<3;++u)c=h>>>(u<<3),c^=Math.floor(Math.random()*256),i.putByte(String.fromCharCode(c&255))}}return i.getBytes(t)}var n={plugin:t,key:null,seed:null,time:null,reseeds:0,generated:0},i=t.md,s=new Array(32);for(var o=0;o<32;++o)s[o]=i.create();return n.pools=s,n.pool=0,n.generate=function(t,r){function l(c){if(c)return r(c);if(f.length()>=t)return r(null,f.getBytes(t));n.generated>1048575&&(n.key=null);if(n.key===null)return e.util.nextTick(function(){u(l)});var h=i(n.key,n.seed);n.generated+=h.length,f.putBytes(h),n.key=o(i(n.key,s(n.seed))),n.seed=a(i(n.key,n.seed)),e.util.setImmediate(l)}if(!r)return n.generateSync(t);var i=n.plugin.cipher,s=n.plugin.increment,o=n.plugin.formatKey,a=n.plugin.formatSeed,f=e.util.createBuffer();n.key=null,l()},n.generateSync=function(t){var r=n.plugin.cipher,i=n.plugin.increment,s=n.plugin.formatKey,o=n.plugin.formatSeed;n.key=null;var u=e.util.createBuffer();while(u.length()<t){n.generated>1048575&&(n.key=null),n.key===null&&a();var f=r(n.key,n.seed);n.generated+=f.length,u.putBytes(f),n.key=s(r(n.key,i(n.seed))),n.seed=o(r(n.key,n.seed))}return u.getBytes(t)},r?(n.seedFile=function(e,t){r.randomBytes(e,function(e,n){if(e)return t(e);t(null,n.toString())})},n.seedFileSync=function(e){return r.randomBytes(e).toString()}):(n.seedFile=function(e,t){try{t(null,l(e))}catch(n){t(n)}},n.seedFileSync=l),n.collect=function(e){var t=e.length;for(var r=0;r<t;++r)n.pools[n.pool].update(e.substr(r,1)),n.pool=n.pool===31?0:n.pool+1},n.collectInt=function(e,t){var r="";for(var i=0;i<t;i+=8)r+=String.fromCharCode(e>>i&255);n.collect(r)},n.registerWorker=function(e){if(e===self)n.seedFile=function(e,t){function n(e){var r=e.data;r.forge&&r.forge.prng&&(self.removeEventListener("message",n),t(r.forge.prng.err,r.forge.prng.bytes))}self.addEventListener("message",n),self.postMessage({forge:{prng:{needed:e}}})};else{var t=function(t){var r=t.data;r.forge&&r.forge.prng&&n.seedFile(r.forge.prng.needed,function(t,n){e.postMessage({forge:{prng:{err:t,bytes:n}}})})};e.addEventListener("message",t)}},n}}var r="prng";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/prng",["require","module","./md","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){if(e.random&&e.random.getBytes)return;(function(t){function s(){var t=e.prng.create(n);return t.getBytes=function(e,n){return t.generate(e,n)},t.getBytesSync=function(e){return t.generate(e)},t}var n={},r=new Array(4),i=e.util.createBuffer();n.formatKey=function(t){var n=e.util.createBuffer(t);return t=new Array(4),t[0]=n.getInt32(),t[1]=n.getInt32(),t[2]=n.getInt32(),t[3]=n.getInt32(),e.aes._expandKey(t,!1)},n.formatSeed=function(t){var n=e.util.createBuffer(t);return t=new Array(4),t[0]=n.getInt32(),t[1]=n.getInt32(),t[2]=n.getInt32(),t[3]=n.getInt32(),t},n.cipher=function(t,n){return e.aes._updateBlock(t,n,r,!1),i.putInt32(r[0]),i.putInt32(r[1]),i.putInt32(r[2]),i.putInt32(r[3]),i.getBytes()},n.increment=function(e){return++e[3],e},n.md=e.md.sha256;var o=s(),u=typeof process!="undefined"&&process.versions&&process.versions.node,a=null;if(typeof window!="undefined"){var f=window.crypto||window.msCrypto;f&&f.getRandomValues&&(a=function(e){return f.getRandomValues(e)})}if(e.disableNativeCode||!u&&!a){typeof window=="undefined"||window.document===undefined,o.collectInt(+(new Date),32);if(typeof navigator!="undefined"){var l="";for(var c in navigator)try{typeof navigator[c]=="string"&&(l+=navigator[c])}catch(h){}o.collect(l),l=null}t&&(t().mousemove(function(e){o.collectInt(e.clientX,16),o.collectInt(e.clientY,16)}),t().keypress(function(e){o.collectInt(e.charCode,8)}))}if(!e.random)e.random=o;else for(var c in o)e.random[c]=o[c];e.random.createInstance=s})(typeof jQuery!="undefined"?jQuery:null)}var r="random";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/random",["require","module","./aes","./md","./prng","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){var t=[217,120,249,196,25,221,181,237,40,233,253,121,74,160,216,157,198,126,55,131,43,118,83,142,98,76,100,136,68,139,251,162,23,154,89,245,135,179,79,19,97,69,109,141,9,129,125,50,189,143,64,235,134,183,123,11,240,149,33,34,92,107,78,130,84,214,101,147,206,96,178,28,115,86,192,20,167,140,241,220,18,117,202,31,59,190,228,209,66,61,212,48,163,60,182,38,111,191,14,218,70,105,7,87,39,242,29,155,188,148,67,3,248,17,199,246,144,239,62,231,6,195,213,47,200,102,30,215,8,232,234,222,128,82,238,247,132,170,114,172,53,77,106,42,150,26,210,113,90,21,73,116,75,159,208,94,4,24,164,236,194,224,65,110,15,81,203,204,36,145,175,80,161,244,112,57,153,124,58,133,35,184,180,122,252,2,54,91,37,85,151,49,45,93,250,152,227,138,146,174,5,223,41,16,103,108,186,201,211,0,230,207,225,158,168,44,99,22,1,63,88,226,137,169,13,56,52,27,171,51,255,176,187,72,12,95,185,177,205,46,197,243,219,71,229,165,156,119,10,166,32,104,254,127,193,173],n=[1,2,3,5],r=function(e,t){return e<<t&65535|(e&65535)>>16-t},i=function(e,t){return(e&65535)>>t|e<<16-t&65535};e.rc2=e.rc2||{},e.rc2.expandKey=function(n,r){typeof n=="string"&&(n=e.util.createBuffer(n)),r=r||128;var i=n,s=n.length(),o=r,u=Math.ceil(o/8),a=255>>(o&7),f;for(f=s;f<128;f++)i.putByte(t[i.at(f-1)+i.at(f-s)&255]);i.setAt(128-u,t[i.at(128-u)&a]);for(f=127-u;f>=0;f--)i.setAt(f,t[i.at(f+1)^i.at(f+u)]);return i};var s=function(t,s,o){var u=!1,a=null,f=null,l=null,c,h,p,d,v=[];t=e.rc2.expandKey(t,s);for(p=0;p<64;p++)v.push(t.getInt16Le());o?(c=function(e){for(p=0;p<4;p++)e[p]+=v[d]+(e[(p+3)%4]&e[(p+2)%4])+(~e[(p+3)%4]&e[(p+1)%4]),e[p]=r(e[p],n[p]),d++},h=function(e){for(p=0;p<4;p++)e[p]+=v[e[(p+3)%4]&63]}):(c=function(e){for(p=3;p>=0;p--)e[p]=i(e[p],n[p]),e[p]-=v[d]+(e[(p+3)%4]&e[(p+2)%4])+(~e[(p+3)%4]&e[(p+1)%4]),d--},h=function(e){for(p=3;p>=0;p--)e[p]-=v[e[(p+3)%4]&63]});var m=function(e){var t=[];for(p=0;p<4;p++){var n=a.getInt16Le();l!==null&&(o?n^=l.getInt16Le():l.putInt16Le(n)),t.push(n&65535)}d=o?0:63;for(var r=0;r<e.length;r++)for(var i=0;i<e[r][0];i++)e[r][1](t);for(p=0;p<4;p++)l!==null&&(o?l.putInt16Le(t[p]):t[p]^=l.getInt16Le()),f.putInt16Le(t[p])},g=null;return g={start:function(t,n){t&&typeof t=="string"&&(t=e.util.createBuffer(t)),u=!1,a=e.util.createBuffer(),f=n||new e.util.createBuffer,l=t,g.output=f},update:function(e){u||a.putBuffer(e);while(a.length()>=8)m([[5,c],[1,h],[6,c],[1,h],[5,c]])},finish:function(e){var t=!0;if(o)if(e)t=e(8,a,!o);else{var n=a.length()===8?8:8-a.length();a.fillWithByte(n,n)}t&&(u=!0,g.update());if(!o){t=a.length()===0;if(t)if(e)t=e(8,f,!o);else{var r=f.length(),i=f.at(r-1);i>r?t=!1:f.truncate(i)}}return t}},g};e.rc2.startEncrypting=function(t,n,r){var i=e.rc2.createEncryptionCipher(t,128);return i.start(n,r),i},e.rc2.createEncryptionCipher=function(e,t){return s(e,t,!0)},e.rc2.startDecrypting=function(t,n,r){var i=e.rc2.createDecryptionCipher(t,128);return i.start(n,r),i},e.rc2.createDecryptionCipher=function(e,t){return s(e,t,!1)}}var r="rc2";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/rc2",["require","module","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function i(e,t,n){this.data=[],e!=null&&("number"==typeof e?this.fromNumber(e,t,n):t==null&&"string"!=typeof e?this.fromString(e,256):this.fromString(e,t))}function s(){return new i(null)}function o(e,t,n,r,i,s){while(--s>=0){var o=t*this.data[e++]+n.data[r]+i;i=Math.floor(o/67108864),n.data[r++]=o&67108863}return i}function u(e,t,n,r,i,s){var o=t&32767,u=t>>15;while(--s>=0){var a=this.data[e]&32767,f=this.data[e++]>>15,l=u*a+f*o;a=o*a+((l&32767)<<15)+n.data[r]+(i&1073741823),i=(a>>>30)+(l>>>15)+u*f+(i>>>30),n.data[r++]=a&1073741823}return i}function a(e,t,n,r,i,s){var o=t&16383,u=t>>14;while(--s>=0){var a=this.data[e]&16383,f=this.data[e++]>>14,l=u*a+f*o;a=o*a+((l&16383)<<14)+n.data[r]+i,i=(a>>28)+(l>>14)+u*f,n.data[r++]=a&268435455}return i}function d(e){return l.charAt(e)}function v(e,t){var n=c[e.charCodeAt(t)];return n==null?-1:n}function m(e){for(var t=this.t-1;t>=0;--t)e.data[t]=this.data[t];e.t=this.t,e.s=this.s}function g(e){this.t=1,this.s=e<0?-1:0,e>0?this.data[0]=e:e<-1?this.data[0]=e+this.DV:this.t=0}function y(e){var t=s();return t.fromInt(e),t}function b(e,t){var n;if(t==16)n=4;else if(t==8)n=3;else if(t==256)n=8;else if(t==2)n=1;else if(t==32)n=5;else{if(t!=4){this.fromRadix(e,t);return}n=2}this.t=0,this.s=0;var r=e.length,s=!1,o=0;while(--r>=0){var u=n==8?e[r]&255:v(e,r);if(u<0){e.charAt(r)=="-"&&(s=!0);continue}s=!1,o==0?this.data[this.t++]=u:o+n>this.DB?(this.data[this.t-1]|=(u&(1<<this.DB-o)-1)<<o,this.data[this.t++]=u>>this.DB-o):this.data[this.t-1]|=u<<o,o+=n,o>=this.DB&&(o-=this.DB)}n==8&&(e[0]&128)!=0&&(this.s=-1,o>0&&(this.data[this.t-1]|=(1<<this.DB-o)-1<<o)),this.clamp(),s&&i.ZERO.subTo(this,this)}function w(){var e=this.s&this.DM;while(this.t>0&&this.data[this.t-1]==e)--this.t}function E(e){if(this.s<0)return"-"+this.negate().toString(e);var t;if(e==16)t=4;else if(e==8)t=3;else if(e==2)t=1;else if(e==32)t=5;else{if(e!=4)return this.toRadix(e);t=2}var n=(1<<t)-1,r,i=!1,s="",o=this.t,u=this.DB-o*this.DB%t;if(o-->0){u<this.DB&&(r=this.data[o]>>u)>0&&(i=!0,s=d(r));while(o>=0)u<t?(r=(this.data[o]&(1<<u)-1)<<t-u,r|=this.data[--o]>>(u+=this.DB-t)):(r=this.data[o]>>(u-=t)&n,u<=0&&(u+=this.DB,--o)),r>0&&(i=!0),i&&(s+=d(r))}return i?s:"0"}function S(){var e=s();return i.ZERO.subTo(this,e),e}function x(){return this.s<0?this.negate():this}function T(e){var t=this.s-e.s;if(t!=0)return t;var n=this.t;t=n-e.t;if(t!=0)return this.s<0?-t:t;while(--n>=0)if((t=this.data[n]-e.data[n])!=0)return t;return 0}function N(e){var t=1,n;return(n=e>>>16)!=0&&(e=n,t+=16),(n=e>>8)!=0&&(e=n,t+=8),(n=e>>4)!=0&&(e=n,t+=4),(n=e>>2)!=0&&(e=n,t+=2),(n=e>>1)!=0&&(e=n,t+=1),t}function C(){return this.t<=0?0:this.DB*(this.t-1)+N(this.data[this.t-1]^this.s&this.DM)}function k(e,t){var n;for(n=this.t-1;n>=0;--n)t.data[n+e]=this.data[n];for(n=e-1;n>=0;--n)t.data[n]=0;t.t=this.t+e,t.s=this.s}function L(e,t){for(var n=e;n<this.t;++n)t.data[n-e]=this.data[n];t.t=Math.max(this.t-e,0),t.s=this.s}function A(e,t){var n=e%this.DB,r=this.DB-n,i=(1<<r)-1,s=Math.floor(e/this.DB),o=this.s<<n&this.DM,u;for(u=this.t-1;u>=0;--u)t.data[u+s+1]=this.data[u]>>r|o,o=(this.data[u]&i)<<n;for(u=s-1;u>=0;--u)t.data[u]=0;t.data[s]=o,t.t=this.t+s+1,t.s=this.s,t.clamp()}function O(e,t){t.s=this.s;var n=Math.floor(e/this.DB);if(n>=this.t){t.t=0;return}var r=e%this.DB,i=this.DB-r,s=(1<<r)-1;t.data[0]=this.data[n]>>r;for(var o=n+1;o<this.t;++o)t.data[o-n-1]|=(this.data[o]&s)<<i,t.data[o-n]=this.data[o]>>r;r>0&&(t.data[this.t-n-1]|=(this.s&s)<<i),t.t=this.t-n,t.clamp()}function M(e,t){var n=0,r=0,i=Math.min(e.t,this.t);while(n<i)r+=this.data[n]-e.data[n],t.data[n++]=r&this.DM,r>>=this.DB;if(e.t<this.t){r-=e.s;while(n<this.t)r+=this.data[n],t.data[n++]=r&this.DM,r>>=this.DB;r+=this.s}else{r+=this.s;while(n<e.t)r-=e.data[n],t.data[n++]=r&this.DM,r>>=this.DB;r-=e.s}t.s=r<0?-1:0,r<-1?t.data[n++]=this.DV+r:r>0&&(t.data[n++]=r),t.t=n,t.clamp()}function _(e,t){var n=this.abs(),r=e.abs(),s=n.t;t.t=s+r.t;while(--s>=0)t.data[s]=0;for(s=0;s<r.t;++s)t.data[s+n.t]=n.am(0,r.data[s],t,s,0,n.t);t.s=0,t.clamp(),this.s!=e.s&&i.ZERO.subTo(t,t)}function D(e){var t=this.abs(),n=e.t=2*t.t;while(--n>=0)e.data[n]=0;for(n=0;n<t.t-1;++n){var r=t.am(n,t.data[n],e,2*n,0,1);(e.data[n+t.t]+=t.am(n+1,2*t.data[n],e,2*n+1,r,t.t-n-1))>=t.DV&&(e.data[n+t.t]-=t.DV,e.data[n+t.t+1]=1)}e.t>0&&(e.data[e.t-1]+=t.am(n,t.data[n],e,2*n,0,1)),e.s=0,e.clamp()}function P(e,t,n){var r=e.abs();if(r.t<=0)return;var o=this.abs();if(o.t<r.t){t!=null&&t.fromInt(0),n!=null&&this.copyTo(n);return}n==null&&(n=s());var u=s(),a=this.s,f=e.s,l=this.DB-N(r.data[r.t-1]);l>0?(r.lShiftTo(l,u),o.lShiftTo(l,n)):(r.copyTo(u),o.copyTo(n));var c=u.t,h=u.data[c-1];if(h==0)return;var p=h*(1<<this.F1)+(c>1?u.data[c-2]>>this.F2:0),d=this.FV/p,v=(1<<this.F1)/p,m=1<<this.F2,g=n.t,y=g-c,b=t==null?s():t;u.dlShiftTo(y,b),n.compareTo(b)>=0&&(n.data[n.t++]=1,n.subTo(b,n)),i.ONE.dlShiftTo(c,b),b.subTo(u,u);while(u.t<c)u.data[u.t++]=0;while(--y>=0){var w=n.data[--g]==h?this.DM:Math.floor(n.data[g]*d+(n.data[g-1]+m)*v);if((n.data[g]+=u.am(0,w,n,y,0,c))<w){u.dlShiftTo(y,b),n.subTo(b,n);while(n.data[g]<--w)n.subTo(b,n)}}t!=null&&(n.drShiftTo(c,t),a!=f&&i.ZERO.subTo(t,t)),n.t=c,n.clamp(),l>0&&n.rShiftTo(l,n),a<0&&i.ZERO.subTo(n,n)}function H(e){var t=s();return this.abs().divRemTo(e,null,t),this.s<0&&t.compareTo(i.ZERO)>0&&e.subTo(t,t),t}function B(e){this.m=e}function j(e){return e.s<0||e.compareTo(this.m)>=0?e.mod(this.m):e}function F(e){return e}function I(e){e.divRemTo(this.m,null,e)}function q(e,t,n){e.multiplyTo(t,n),this.reduce(n)}function R(e,t){e.squareTo(t),this.reduce(t)}function U(){if(this.t<1)return 0;var e=this.data[0];if((e&1)==0)return 0;var t=e&3;return t=t*(2-(e&15)*t)&15,t=t*(2-(e&255)*t)&255,t=t*(2-((e&65535)*t&65535))&65535,t=t*(2-e*t%this.DV)%this.DV,t>0?this.DV-t:-t}function z(e){this.m=e,this.mp=e.invDigit(),this.mpl=this.mp&32767,this.mph=this.mp>>15,this.um=(1<<e.DB-15)-1,this.mt2=2*e.t}function W(e){var t=s();return e.abs().dlShiftTo(this.m.t,t),t.divRemTo(this.m,null,t),e.s<0&&t.compareTo(i.ZERO)>0&&this.m.subTo(t,t),t}function X(e){var t=s();return e.copyTo(t),this.reduce(t),t}function V(e){while(e.t<=this.mt2)e.data[e.t++]=0;for(var t=0;t<this.m.t;++t){var n=e.data[t]&32767,r=n*this.mpl+((n*this.mph+(e.data[t]>>15)*this.mpl&this.um)<<15)&e.DM;n=t+this.m.t,e.data[n]+=this.m.am(0,r,e,t,0,this.m.t);while(e.data[n]>=e.DV)e.data[n]-=e.DV,e.data[++n]++}e.clamp(),e.drShiftTo(this.m.t,e),e.compareTo(this.m)>=0&&e.subTo(this.m,e)}function $(e,t){e.squareTo(t),this.reduce(t)}function J(e,t,n){e.multiplyTo(t,n),this.reduce(n)}function K(){return(this.t>0?this.data[0]&1:this.s)==0}function Q(e,t){if(e>4294967295||e<1)return i.ONE;var n=s(),r=s(),o=t.convert(this),u=N(e)-1;o.copyTo(n);while(--u>=0){t.sqrTo(n,r);if((e&1<<u)>0)t.mulTo(r,o,n);else{var a=n;n=r,r=a}}return t.revert(n)}function G(e,t){var n;return e<256||t.isEven()?n=new B(t):n=new z(t),this.exp(e,n)}function Y(){var e=s();return this.copyTo(e),e}function Z(){if(this.s<0){if(this.t==1)return this.data[0]-this.DV;if(this.t==0)return-1}else{if(this.t==1)return this.data[0];if(this.t==0)return 0}return(this.data[1]&(1<<32-this.DB)-1)<<this.DB|this.data[0]}function et(){return this.t==0?this.s:this.data[0]<<24>>24}function tt(){return this.t==0?this.s:this.data[0]<<16>>16}function nt(e){return Math.floor(Math.LN2*this.DB/Math.log(e))}function rt(){return this.s<0?-1:this.t<=0||this.t==1&&this.data[0]<=0?0:1}function it(e){e==null&&(e=10);if(this.signum()==0||e<2||e>36)return"0";var t=this.chunkSize(e),n=Math.pow(e,t),r=y(n),i=s(),o=s(),u="";this.divRemTo(r,i,o);while(i.signum()>0)u=(n+o.intValue()).toString(e).substr(1)+u,i.divRemTo(r,i,o);return o.intValue().toString(e)+u}function st(e,t){this.fromInt(0),t==null&&(t=10);var n=this.chunkSize(t),r=Math.pow(t,n),s=!1,o=0,u=0;for(var a=0;a<e.length;++a){var f=v(e,a);if(f<0){e.charAt(a)=="-"&&this.signum()==0&&(s=!0);continue}u=t*u+f,++o>=n&&(this.dMultiply(r),this.dAddOffset(u,0),o=0,u=0)}o>0&&(this.dMultiply(Math.pow(t,o)),this.dAddOffset(u,0)),s&&i.ZERO.subTo(this,this)}function ot(e,t,n){if("number"==typeof t)if(e<2)this.fromInt(1);else{this.fromNumber(e,n),this.testBit(e-1)||this.bitwiseTo(i.ONE.shiftLeft(e-1),dt,this),this.isEven()&&this.dAddOffset(1,0);while(!this.isProbablePrime(t))this.dAddOffset(2,0),this.bitLength()>e&&this.subTo(i.ONE.shiftLeft(e-1),this)}else{var r=new Array,s=e&7;r.length=(e>>3)+1,t.nextBytes(r),s>0?r[0]&=(1<<s)-1:r[0]=0,this.fromString(r,256)}}function ut(){var e=this.t,t=new Array;t[0]=this.s;var n=this.DB-e*this.DB%8,r,i=0;if(e-->0){n<this.DB&&(r=this.data[e]>>n)!=(this.s&this.DM)>>n&&(t[i++]=r|this.s<<this.DB-n);while(e>=0){n<8?(r=(this.data[e]&(1<<n)-1)<<8-n,r|=this.data[--e]>>(n+=this.DB-8)):(r=this.data[e]>>(n-=8)&255,n<=0&&(n+=this.DB,--e)),(r&128)!=0&&(r|=-256),i==0&&(this.s&128)!=(r&128)&&++i;if(i>0||r!=this.s)t[i++]=r}}return t}function at(e){return this.compareTo(e)==0}function ft(e){return this.compareTo(e)<0?this:e}function lt(e){return this.compareTo(e)>0?this:e}function ct(e,t,n){var r,i,s=Math.min(e.t,this.t);for(r=0;r<s;++r)n.data[r]=t(this.data[r],e.data[r]);if(e.t<this.t){i=e.s&this.DM;for(r=s;r<this.t;++r)n.data[r]=t(this.data[r],i);n.t=this.t}else{i=this.s&this.DM;for(r=s;r<e.t;++r)n.data[r]=t(i,e.data[r]);n.t=e.t}n.s=t(this.s,e.s),n.clamp()}function ht(e,t){return e&t}function pt(e){var t=s();return this.bitwiseTo(e,ht,t),t}function dt(e,t){return e|t}function vt(e){var t=s();return this.bitwiseTo(e,dt,t),t}function mt(e,t){return e^t}function gt(e){var t=s();return this.bitwiseTo(e,mt,t),t}function yt(e,t){return e&~t}function bt(e){var t=s();return this.bitwiseTo(e,yt,t),t}function wt(){var e=s();for(var t=0;t<this.t;++t)e.data[t]=this.DM&~this.data[t];return e.t=this.t,e.s=~this.s,e}function Et(e){var t=s();return e<0?this.rShiftTo(-e,t):this.lShiftTo(e,t),t}function St(e){var t=s();return e<0?this.lShiftTo(-e,t):this.rShiftTo(e,t),t}function xt(e){if(e==0)return-1;var t=0;return(e&65535)==0&&(e>>=16,t+=16),(e&255)==0&&(e>>=8,t+=8),(e&15)==0&&(e>>=4,t+=4),(e&3)==0&&(e>>=2,t+=2),(e&1)==0&&++t,t}function Tt(){for(var e=0;e<this.t;++e)if(this.data[e]!=0)return e*this.DB+xt(this.data[e]);return this.s<0?this.t*this.DB:-1}function Nt(e){var t=0;while(e!=0)e&=e-1,++t;return t}function Ct(){var e=0,t=this.s&this.DM;for(var n=0;n<this.t;++n)e+=Nt(this.data[n]^t);return e}function kt(e){var t=Math.floor(e/this.DB);return t>=this.t?this.s!=0:(this.data[t]&1<<e%this.DB)!=0}function Lt(e,t){var n=i.ONE.shiftLeft(e);return this.bitwiseTo(n,t,n),n}function At(e){return this.changeBit(e,dt)}function Ot(e){return this.changeBit(e,yt)}function Mt(e){return this.changeBit(e,mt)}function _t(e,t){var n=0,r=0,i=Math.min(e.t,this.t);while(n<i)r+=this.data[n]+e.data[n],t.data[n++]=r&this.DM,r>>=this.DB;if(e.t<this.t){r+=e.s;while(n<this.t)r+=this.data[n],t.data[n++]=r&this.DM,r>>=this.DB;r+=this.s}else{r+=this.s;while(n<e.t)r+=e.data[n],t.data[n++]=r&this.DM,r>>=this.DB;r+=e.s}t.s=r<0?-1:0,r>0?t.data[n++]=r:r<-1&&(t.data[n++]=this.DV+r),t.t=n,t.clamp()}function Dt(e){var t=s();return this.addTo(e,t),t}function Pt(e){var t=s();return this.subTo(e,t),t}function Ht(e){var t=s();return this.multiplyTo(e,t),t}function Bt(e){var t=s();return this.divRemTo(e,t,null),t}function jt(e){var t=s();return this.divRemTo(e,null,t),t}function Ft(e){var t=s(),n=s();return this.divRemTo(e,t,n),new Array(t,n)}function It(e){this.data[this.t]=this.am(0,e-1,this,0,0,this.t),++this.t,this.clamp()}function qt(e,t){if(e==0)return;while(this.t<=t)this.data[this.t++]=0;this.data[t]+=e;while(this.data[t]>=this.DV)this.data[t]-=this.DV,++t>=this.t&&(this.data[this.t++]=0),++this.data[t]}function Rt(){}function Ut(e){return e}function zt(e,t,n){e.multiplyTo(t,n)}function Wt(e,t){e.squareTo(t)}function Xt(e){return this.exp(e,new Rt)}function Vt(e,t,n){var r=Math.min(this.t+e.t,t);n.s=0,n.t=r;while(r>0)n.data[--r]=0;var i;for(i=n.t-this.t;r<i;++r)n.data[r+this.t]=this.am(0,e.data[r],n,r,0,this.t);for(i=Math.min(e.t,t);r<i;++r)this.am(0,e.data[r],n,r,0,t-r);n.clamp()}function $t(e,t,n){--t;var r=n.t=this.t+e.t-t;n.s=0;while(--r>=0)n.data[r]=0;for(r=Math.max(t-this.t,0);r<e.t;++r)n.data[this.t+r-t]=this.am(t-r,e.data[r],n,0,0,this.t+r-t);n.clamp(),n.drShiftTo(1,n)}function Jt(e){this.r2=s(),this.q3=s(),i.ONE.dlShiftTo(2*e.t,this.r2),this.mu=this.r2.divide(e),this.m=e}function Kt(e){if(e.s<0||e.t>2*this.m.t)return e.mod(this.m);if(e.compareTo(this.m)<0)return e;var t=s();return e.copyTo(t),this.reduce(t),t}function Qt(e){return e}function Gt(e){e.drShiftTo(this.m.t-1,this.r2),e.t>this.m.t+1&&(e.t=this.m.t+1,e.clamp()),this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3),this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);while(e.compareTo(this.r2)<0)e.dAddOffset(1,this.m.t+1);e.subTo(this.r2,e);while(e.compareTo(this.m)>=0)e.subTo(this.m,e)}function Yt(e,t){e.squareTo(t),this.reduce(t)}function Zt(e,t,n){e.multiplyTo(t,n),this.reduce(n)}function en(e,t){var n=e.bitLength(),r,i=y(1),o;if(n<=0)return i;n<18?r=1:n<48?r=3:n<144?r=4:n<768?r=5:r=6,n<8?o=new B(t):t.isEven()?o=new Jt(t):o=new z(t);var u=new Array,a=3,f=r-1,l=(1<<r)-1;u[1]=o.convert(this);if(r>1){var c=s();o.sqrTo(u[1],c);while(a<=l)u[a]=s(),o.mulTo(c,u[a-2],u[a]),a+=2}var h=e.t-1,p,d=!0,v=s(),m;n=N(e.data[h])-1;while(h>=0){n>=f?p=e.data[h]>>n-f&l:(p=(e.data[h]&(1<<n+1)-1)<<f-n,h>0&&(p|=e.data[h-1]>>this.DB+n-f)),a=r;while((p&1)==0)p>>=1,--a;(n-=a)<0&&(n+=this.DB,--h);if(d)u[p].copyTo(i),d=!1;else{while(a>1)o.sqrTo(i,v),o.sqrTo(v,i),a-=2;a>0?o.sqrTo(i,v):(m=i,i=v,v=m),o.mulTo(v,u[p],i)}while(h>=0&&(e.data[h]&1<<n)==0)o.sqrTo(i,v),m=i,i=v,v=m,--n<0&&(n=this.DB-1,--h)}return o.revert(i)}function tn(e){var t=this.s<0?this.negate():this.clone(),n=e.s<0?e.negate():e.clone();if(t.compareTo(n)<0){var r=t;t=n,n=r}var i=t.getLowestSetBit(),s=n.getLowestSetBit();if(s<0)return t;i<s&&(s=i),s>0&&(t.rShiftTo(s,t),n.rShiftTo(s,n));while(t.signum()>0)(i=t.getLowestSetBit())>0&&t.rShiftTo(i,t),(i=n.getLowestSetBit())>0&&n.rShiftTo(i,n),t.compareTo(n)>=0?(t.subTo(n,t),t.rShiftTo(1,t)):(n.subTo(t,n),n.rShiftTo(1,n));return s>0&&n.lShiftTo(s,n),n}function nn(e){if(e<=0)return 0;var t=this.DV%e,n=this.s<0?e-1:0;if(this.t>0)if(t==0)n=this.data[0]%e;else for(var r=this.t-1;r>=0;--r)n=(t*n+this.data[r])%e;return n}function rn(e){var t=e.isEven();if(this.isEven()&&t||e.signum()==0)return i.ZERO;var n=e.clone(),r=this.clone(),s=y(1),o=y(0),u=y(0),a=y(1);while(n.signum()!=0){while(n.isEven()){n.rShiftTo(1,n);if(t){if(!s.isEven()||!o.isEven())s.addTo(this,s),o.subTo(e,o);s.rShiftTo(1,s)}else o.isEven()||o.subTo(e,o);o.rShiftTo(1,o)}while(r.isEven()){r.rShiftTo(1,r);if(t){if(!u.isEven()||!a.isEven())u.addTo(this,u),a.subTo(e,a);u.rShiftTo(1,u)}else a.isEven()||a.subTo(e,a);a.rShiftTo(1,a)}n.compareTo(r)>=0?(n.subTo(r,n),t&&s.subTo(u,s),o.subTo(a,o)):(r.subTo(n,r),t&&u.subTo(s,u),a.subTo(o,a))}return r.compareTo(i.ONE)!=0?i.ZERO:a.compareTo(e)>=0?a.subtract(e):a.signum()<0?(a.addTo(e,a),a.signum()<0?a.add(e):a):a}function un(e){var t,n=this.abs();if(n.t==1&&n.data[0]<=sn[sn.length-1]){for(t=0;t<sn.length;++t)if(n.data[0]==sn[t])return!0;return!1}if(n.isEven())return!1;t=1;while(t<sn.length){var r=sn[t],i=t+1;while(i<sn.length&&r<on)r*=sn[i++];r=n.modInt(r);while(t<i)if(r%sn[t++]==0)return!1}return n.millerRabin(e)}function an(e){var t=this.subtract(i.ONE),n=t.getLowestSetBit();if(n<=0)return!1;var r=t.shiftRight(n),s=fn(),o;for(var u=0;u<e;++u){do o=new i(this.bitLength(),s);while(o.compareTo(i.ONE)<=0||o.compareTo(t)>=0);var a=o.modPow(r,this);if(a.compareTo(i.ONE)!=0&&a.compareTo(t)!=0){var f=1;while(f++<n&&a.compareTo(t)!=0){a=a.modPowInt(2,this);if(a.compareTo(i.ONE)==0)return!1}if(a.compareTo(t)!=0)return!1}}return!0}function fn(){return{nextBytes:function(e){for(var t=0;t<e.length;++t)e[t]=Math.floor(Math.random()*256)}}}var t,n=0xdeadbeefcafe,r=(n&16777215)==15715070;typeof navigator=="undefined"?(i.prototype.am=a,t=28):r&&navigator.appName=="Microsoft Internet Explorer"?(i.prototype.am=u,t=30):r&&navigator.appName!="Netscape"?(i.prototype.am=o,t=26):(i.prototype.am=a,t=28),i.prototype.DB=t,i.prototype.DM=(1<<t)-1,i.prototype.DV=1<<t;var f=52;i.prototype.FV=Math.pow(2,f),i.prototype.F1=f-t,i.prototype.F2=2*t-f;var l="0123456789abcdefghijklmnopqrstuvwxyz",c=new Array,h,p;h="0".charCodeAt(0);for(p=0;p<=9;++p)c[h++]=p;h="a".charCodeAt(0);for(p=10;p<36;++p)c[h++]=p;h="A".charCodeAt(0);for(p=10;p<36;++p)c[h++]=p;B.prototype.convert=j,B.prototype.revert=F,B.prototype.reduce=I,B.prototype.mulTo=q,B.prototype.sqrTo=R,z.prototype.convert=W,z.prototype.revert=X,z.prototype.reduce=V,z.prototype.mulTo=J,z.prototype.sqrTo=$,i.prototype.copyTo=m,i.prototype.fromInt=g,i.prototype.fromString=b,i.prototype.clamp=w,i.prototype.dlShiftTo=k,i.prototype.drShiftTo=L,i.prototype.lShiftTo=A,i.prototype.rShiftTo=O,i.prototype.subTo=M,i.prototype.multiplyTo=_,i.prototype.squareTo=D,i.prototype.divRemTo=P,i.prototype.invDigit=U,i.prototype.isEven=K,i.prototype.exp=Q,i.prototype.toString=E,i.prototype.negate=S,i.prototype.abs=x,i.prototype.compareTo=T,i.prototype.bitLength=C,i.prototype.mod=H,i.prototype.modPowInt=G,i.ZERO=y(0),i.ONE=y(1),Rt.prototype.convert=Ut,Rt.prototype.revert=Ut,Rt.prototype.mulTo=zt,Rt.prototype.sqrTo=Wt,Jt.prototype.convert=Kt,Jt.prototype.revert=Qt,Jt.prototype.reduce=Gt,Jt.prototype.mulTo=Zt,Jt.prototype.sqrTo=Yt;var sn=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509],on=(1<<26)/sn[sn.length-1];i.prototype.chunkSize=nt,i.prototype.toRadix=it,i.prototype.fromRadix=st,i.prototype.fromNumber=ot,i.prototype.bitwiseTo=ct,i.prototype.changeBit=Lt,i.prototype.addTo=_t,i.prototype.dMultiply=It,i.prototype.dAddOffset=qt,i.prototype.multiplyLowerTo=Vt,i.prototype.multiplyUpperTo=$t,i.prototype.modInt=nn,i.prototype.millerRabin=an,i.prototype.clone=Y,i.prototype.intValue=Z,i.prototype.byteValue=et,i.prototype.shortValue=tt,i.prototype.signum=rt,i.prototype.toByteArray=ut,i.prototype.equals=at,i.prototype.min=ft,i.prototype.max=lt,i.prototype.and=pt,i.prototype.or=vt,i.prototype.xor=gt,i.prototype.andNot=bt,i.prototype.not=wt,i.prototype.shiftLeft=Et,i.prototype.shiftRight=St,i.prototype.getLowestSetBit=Tt,i.prototype.bitCount=Ct,i.prototype.testBit=kt,i.prototype.setBit=At,i.prototype.clearBit=Ot,i.prototype.flipBit=Mt,i.prototype.add=Dt,i.prototype.subtract=Pt,i.prototype.multiply=Ht,i.prototype.divide=Bt,i.prototype.remainder=jt,i.prototype.divideAndRemainder=Ft,i.prototype.modPow=en,i.prototype.modInverse=rn,i.prototype.pow=Xt,i.prototype.gcd=tn,i.prototype.isProbablePrime=un,e.jsbn=e.jsbn||{},e.jsbn.BigInteger=i}var r="jsbn";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/jsbn",["require","module"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function n(t,n,r){r||(r=e.md.sha1.create());var i="",s=Math.ceil(n/r.digestLength);for(var o=0;o<s;++o){var u=String.fromCharCode(o>>24&255,o>>16&255,o>>8&255,o&255);r.start(),r.update(t+u),i+=r.digest().getBytes()}return i.substring(0,n)}var t=e.pkcs1=e.pkcs1||{};t.encode_rsa_oaep=function(t,r,i){var s,o,u,a;typeof i=="string"?(s=i,o=arguments[3]||undefined,u=arguments[4]||undefined):i&&(s=i.label||undefined,o=i.seed||undefined,u=i.md||undefined,i.mgf1&&i.mgf1.md&&(a=i.mgf1.md)),u?u.start():u=e.md.sha1.create(),a||(a=u);var f=Math.ceil(t.n.bitLength()/8),l=f-2*u.digestLength-2;if(r.length>l){var c=new Error("RSAES-OAEP input message length is too long.");throw c.length=r.length,c.maxLength=l,c}s||(s=""),u.update(s,"raw");var h=u.digest(),p="",d=l-r.length;for(var v=0;v<d;v++)p+="\0";var m=h.getBytes()+p+""+r;if(!o)o=e.random.getBytes(u.digestLength);else if(o.length!==u.digestLength){var c=new Error("Invalid RSAES-OAEP seed. The seed length must match the digest length.");throw c.seedLength=o.length,c.digestLength=u.digestLength,c}var g=n(o,f-u.digestLength-1,a),y=e.util.xorBytes(m,g,m.length),b=n(y,u.digestLength,a),w=e.util.xorBytes(o,b,o.length);return"\0"+w+y},t.decode_rsa_oaep=function(t,r,i){var s,o,u;typeof i=="string"?(s=i,o=arguments[3]||undefined):i&&(s=i.label||undefined,o=i.md||undefined,i.mgf1&&i.mgf1.md&&(u=i.mgf1.md));var a=Math.ceil(t.n.bitLength()/8);if(r.length!==a){var f=new Error("RSAES-OAEP encoded message length is invalid.");throw f.length=r.length,f.expectedLength=a,f}o===undefined?o=e.md.sha1.create():o.start(),u||(u=o);if(a<2*o.digestLength+2)throw new Error("RSAES-OAEP key is too short for the hash function.");s||(s=""),o.update(s,"raw");var l=o.digest().getBytes(),c=r.charAt(0),h=r.substring(1,o.digestLength+1),p=r.substring(1+o.digestLength),d=n(p,o.digestLength,u),v=e.util.xorBytes(h,d,h.length),m=n(v,a-o.digestLength-1,u),g=e.util.xorBytes(p,m,p.length),y=g.substring(0,o.digestLength),f=c!=="\0";for(var b=0;b<o.digestLength;++b)f|=l.charAt(b)!==y.charAt(b);var w=1,E=o.digestLength;for(var S=o.digestLength;S<g.length;S++){var x=g.charCodeAt(S),T=x&1^1,N=w?65534:0;f|=x&N,w&=T,E+=w}if(f||g.charCodeAt(E)!==1)throw new Error("Invalid RSAES-OAEP padding.");return g.substring(E+1)}}var r="pkcs1";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/pkcs1",["require","module","./util","./random","./sha1"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function o(e,t,n,r){return"workers"in n?a(e,t,n,r):u(e,t,n,r)}function u(t,n,i,s){var o=f(t,n),a=0,c=l(o.bitLength());"millerRabinTests"in i&&(c=i.millerRabinTests);var h=10;"maxBlockTime"in i&&(h=i.maxBlockTime);var p=+(new Date);do{o.bitLength()>t&&(o=f(t,n));if(o.isProbablePrime(c))return s(null,o);o.dAddOffset(r[a++%8],0)}while(h<0||+(new Date)-p<h);e.util.setImmediate(function(){u(t,n,i,s)})}function a(t,r,i,s){function p(){function d(i){if(p)return;--u;var a=i.data;if(a.found){for(var h=0;h<e.length;++h)e[h].terminate();return p=!0,s(null,new n(a.prime,16))}o.bitLength()>t&&(o=f(t,r));var d=o.toString(16);i.target.postMessage({hex:d,workLoad:l}),o.dAddOffset(c,0)}a=Math.max(1,a);var e=[];for(var i=0;i<a;++i)e[i]=new Worker(h);var u=a;for(var i=0;i<a;++i)e[i].addEventListener("message",d);var p=!1}if(typeof Worker=="undefined")return u(t,r,i,s);var o=f(t,r),a=i.workers,l=i.workLoad||100,c=l*30/8,h=i.workerScript||"forge/prime.worker.js";if(a===-1)return e.util.estimateCores(function(e,t){e&&(t=2),a=t-1,p()});p()}function f(e,t){var r=new n(e,t),o=e-1;return r.testBit(o)||r.bitwiseTo(n.ONE.shiftLeft(o),s,r),r.dAddOffset(31-r.mod(i).byteValue(),0),r}function l(e){return e<=100?27:e<=150?18:e<=200?15:e<=250?12:e<=300?9:e<=350?8:e<=400?7:e<=500?6:e<=600?5:e<=800?4:e<=1250?3:2}if(e.prime)return;var t=e.prime=e.prime||{},n=e.jsbn.BigInteger,r=[6,4,2,4,2,4,6,2],i=new n(null);i.fromInt(30);var s=function(e,t){return e|t};t.generateProbablePrime=function(t,n,r){typeof n=="function"&&(r=n,n={}),n=n||{};var i=n.algorithm||"PRIMEINC";typeof i=="string"&&(i={name:i}),i.options=i.options||{};var s=n.prng||e.random,u={nextBytes:function(e){var t=s.getBytesSync(e.length);for(var n=0;n<e.length;++n)e[n]=t.charCodeAt(n)}};if(i.name==="PRIMEINC")return o(t,u,i.options,r);throw new Error("Invalid prime generation algorithm: "+i.name)}}var r="prime";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/prime",["require","module","./util","./jsbn","./random"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function c(t,n,r){var i=e.util.createBuffer(),s=Math.ceil(n.n.bitLength()/8);if(t.length>s-11){var o=new Error("Message is too long for PKCS#1 v1.5 padding.");throw o.length=t.length,o.max=s-11,o}i.putByte(0),i.putByte(r);var u=s-3-t.length,a;if(r===0||r===1){a=r===0?0:255;for(var f=0;f<u;++f)i.putByte(a)}else while(u>0){var l=0,c=e.random.getBytes(u);for(var f=0;f<u;++f)a=c.charCodeAt(f),a===0?++l:i.putByte(a);u=l}return i.putByte(0),i.putBytes(t),i}function h(t,n,r,i){var s=Math.ceil(n.n.bitLength()/8),o=e.util.createBuffer(t),u=o.getByte(),a=o.getByte();if(u!==0||r&&a!==0&&a!==1||!r&&a!=2||r&&a===0&&typeof i=="undefined")throw new Error("Encryption block is invalid.");var f=0;if(a===0){f=s-3-i;for(var l=0;l<f;++l)if(o.getByte()!==0)throw new Error("Encryption block is invalid.")}else if(a===1){f=0;while(o.length()>1){if(o.getByte()!==255){--o.read;break}++f}}else if(a===2){f=0;while(o.length()>1){if(o.getByte()===0){--o.read;break}++f}}var c=o.getByte();if(c!==0||f!==s-3-o.length())throw new Error("Encryption block is invalid.");return o.getBytes()}function p(n,i,s){function u(){a(n.pBits,function(e,t){if(e)return s(e);n.p=t;if(n.q!==null)return f(e,n.q);a(n.qBits,f)})}function a(t,n){e.prime.generateProbablePrime(t,o,n)}function f(e,i){if(e)return s(e);n.q=i;if(n.p.compareTo(n.q)<0){var o=n.p;n.p=n.q,n.q=o}if(n.p.subtract(t.ONE).gcd(n.e).compareTo(t.ONE)!==0){n.p=null,u();return}if(n.q.subtract(t.ONE).gcd(n.e).compareTo(t.ONE)!==0){n.q=null,a(n.qBits,f);return}n.p1=n.p.subtract(t.ONE),n.q1=n.q.subtract(t.ONE),n.phi=n.p1.multiply(n.q1);if(n.phi.gcd(n.e).compareTo(t.ONE)!==0){n.p=n.q=null,u();return}n.n=n.p.multiply(n.q);if(n.n.bitLength()!==n.bits){n.q=null,a(n.qBits,f);return}var l=n.e.modInverse(n.phi);n.keys={privateKey:r.rsa.setPrivateKey(n.n,n.e,l,n.p,n.q,l.mod(n.p1),l.mod(n.q1),n.q.modInverse(n.p)),publicKey:r.rsa.setPublicKey(n.n,n.e)},s(null,n.keys)}typeof i=="function"&&(s=i,i={}),i=i||{};var o={algorithm:{name:i.algorithm||"PRIMEINC",options:{workers:i.workers||2,workLoad:i.workLoad||100,workerScript:i.workerScript}}};"prng"in i&&(o.prng=i.prng),u()}function d(t){var n=t.toString(16);return n[0]>="8"&&(n="00"+n),e.util.hexToBytes(n)}function v(e){return e<=100?27:e<=150?18:e<=200?15:e<=250?12:e<=300?9:e<=350?8:e<=400?7:e<=500?6:e<=600?5:e<=800?4:e<=1250?3:2}if(typeof t=="undefined")var t=e.jsbn.BigInteger;var n=e.asn1;e.pki=e.pki||{},e.pki.rsa=e.rsa=e.rsa||{};var r=e.pki,i=[6,4,2,4,2,4,6,2],s={name:"PrivateKeyInfo",tagClass:n.Class.UNIVERSAL,type:n.Type.SEQUENCE,constructed:!0,value:[{name:"PrivateKeyInfo.version",tagClass:n.Class.UNIVERSAL,type:n.Type.INTEGER,constructed:!1,capture:"privateKeyVersion"},{name:"PrivateKeyInfo.privateKeyAlgorithm",tagClass:n.Class.UNIVERSAL,type:n.Type.SEQUENCE,constructed:!0,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:n.Class.UNIVERSAL,type:n.Type.OID,constructed:!1,capture:"privateKeyOid"}]},{name:"PrivateKeyInfo",tagClass:n.Class.UNIVERSAL,type:n.Type.OCTETSTRING,constructed:!1,capture:"privateKey"}]},o={name:"RSAPrivateKey",tagClass:n.Class.UNIVERSAL,type:n.Type.SEQUENCE,constructed:!0,value:[{name:"RSAPrivateKey.version",tagClass:n.Class.UNIVERSAL,type:n.Type.INTEGER,constructed:!1,capture:"privateKeyVersion"},{name:"RSAPrivateKey.modulus",tagClass:n.Class.UNIVERSAL,type:n.Type.INTEGER,constructed:!1,capture:"privateKeyModulus"},{name:"RSAPrivateKey.publicExponent",tagClass:n.Class.UNIVERSAL,type:n.Type.INTEGER,constructed:!1,capture:"privateKeyPublicExponent"},{name:"RSAPrivateKey.privateExponent",tagClass:n.Class.UNIVERSAL,type:n.Type.INTEGER,constructed:!1,capture:"privateKeyPrivateExponent"},{name:"RSAPrivateKey.prime1",tagClass:n.Class.UNIVERSAL,type:n.Type.INTEGER,constructed:!1,capture:"privateKeyPrime1"},{name:"RSAPrivateKey.prime2",tagClass:n.Class.UNIVERSAL,type:n.Type.INTEGER,constructed:!1,capture:"privateKeyPrime2"},{name:"RSAPrivateKey.exponent1",tagClass:n.Class.UNIVERSAL,type:n.Type.INTEGER,constructed:!1,capture:"privateKeyExponent1"},{name:"RSAPrivateKey.exponent2",tagClass:n.Class.UNIVERSAL,type:n.Type.INTEGER,constructed:!1,capture:"privateKeyExponent2"},{name:"RSAPrivateKey.coefficient",tagClass:n.Class.UNIVERSAL,type:n.Type.INTEGER,constructed:!1,capture:"privateKeyCoefficient"}]},u={name:"RSAPublicKey",tagClass:n.Class.UNIVERSAL,type:n.Type.SEQUENCE,constructed:!0,value:[{name:"RSAPublicKey.modulus",tagClass:n.Class.UNIVERSAL,type:n.Type.INTEGER,constructed:!1,capture:"publicKeyModulus"},{name:"RSAPublicKey.exponent",tagClass:n.Class.UNIVERSAL,type:n.Type.INTEGER,constructed:!1,capture:"publicKeyExponent"}]},a=e.pki.rsa.publicKeyValidator={name:"SubjectPublicKeyInfo",tagClass:n.Class.UNIVERSAL,type:n.Type.SEQUENCE,constructed:!0,captureAsn1:"subjectPublicKeyInfo",value:[{name:"SubjectPublicKeyInfo.AlgorithmIdentifier",tagClass:n.Class.UNIVERSAL,type:n.Type.SEQUENCE,constructed:!0,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:n.Class.UNIVERSAL,type:n.Type.OID,constructed:!1,capture:"publicKeyOid"}]},{name:"SubjectPublicKeyInfo.subjectPublicKey",tagClass:n.Class.UNIVERSAL,type:n.Type.BITSTRING,constructed:!1,value:[{name:"SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey",tagClass:n.Class.UNIVERSAL,type:n.Type.SEQUENCE,constructed:!0,optional:!0,captureAsn1:"rsaPublicKey"}]}]},f=function(e){var t;if(e.algorithm in r.oids){t=r.oids[e.algorithm];var s=n.oidToDer(t).getBytes(),o=n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[]),u=n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[]);u.value.push(n.create(n.Class.UNIVERSAL,n.Type.OID,!1,s)),u.value.push(n.create(n.Class.UNIVERSAL,n.Type.NULL,!1,""));var a=n.create(n.Class.UNIVERSAL,n.Type.OCTETSTRING,!1,e.digest().getBytes());return o.value.push(u),o.value.push(a),n.toDer(o).getBytes()}var i=new Error("Unknown message digest algorithm.");throw i.algorithm=e.algorithm,i},l=function(n,r,i){if(i)return n.modPow(r.e,r.n);if(!r.p||!r.q)return n.modPow(r.d,r.n);r.dP||(r.dP=r.d.mod(r.p.subtract(t.ONE))),r.dQ||(r.dQ=r.d.mod(r.q.subtract(t.ONE))),r.qInv||(r.qInv=r.q.modInverse(r.p));var s;do s=(new t(e.util.bytesToHex(e.random.getBytes(r.n.bitLength()/8)),16)).mod(r.n);while(s.equals(t.ZERO));n=n.multiply(s.modPow(r.e,r.n)).mod(r.n);var o=n.mod(r.p).modPow(r.dP,r.p),u=n.mod(r.q).modPow(r.dQ,r.q);while(o.compareTo(u)<0)o=o.add(r.p);var a=o.subtract(u).multiply(r.qInv).mod(r.p).multiply(r.q).add(u);return a=a.multiply(s.modInverse(r.n)).mod(r.n),a};r.rsa.encrypt=function(n,r,i){var s=i,o,u=Math.ceil(r.n.bitLength()/8);i!==!1&&i!==!0?(s=i===2,o=c(n,r,i)):(o=e.util.createBuffer(),o.putBytes(n));var a=new t(o.toHex(),16),f=l(a,r,s),h=f.toString(16),p=e.util.createBuffer(),d=u-Math.ceil(h.length/2);while(d>0)p.putByte(0),--d;return p.putBytes(e.util.hexToBytes(h)),p.getBytes()},r.rsa.decrypt=function(n,r,i,s){var o=Math.ceil(r.n.bitLength()/8);if(n.length!==o){var u=new Error("Encrypted message length is invalid.");throw u.length=n.length,u.expected=o,u}var a=new t(e.util.createBuffer(n).toHex(),16);if(a.compareTo(r.n)>=0)throw new Error("Encrypted message is invalid.");var f=l(a,r,i),c=f.toString(16),p=e.util.createBuffer(),d=o-Math.ceil(c.length/2);while(d>0)p.putByte(0),--d;return p.putBytes(e.util.hexToBytes(c)),s!==!1?h(p.getBytes(),r,i):p.getBytes()},r.rsa.createKeyPairGenerationState=function(n,r,i){typeof n=="string"&&(n=parseInt(n,10)),n=n||2048,i=i||{};var s=i.prng||e.random,o={nextBytes:function(e){var t=s.getBytesSync(e.length);for(var n=0;n<e.length;++n)e[n]=t.charCodeAt(n)}},u=i.algorithm||"PRIMEINC",a;if(u!=="PRIMEINC")throw new Error("Invalid key generation algorithm: "+u);return a={algorithm:u,state:0,bits:n,rng:o,eInt:r||65537,e:new t(null),p:null,q:null,qBits:n>>1,pBits:n-(n>>1),pqState:0,num:null,keys:null},a.e.fromInt(a.eInt),a},r.rsa.stepKeyPairGenerationState=function(e,n){"algorithm"in e||(e.algorithm="PRIMEINC");var s=new t(null);s.fromInt(30);var o=0,u=function(e,t){return e|t},a=+(new Date),f,l=0;while(e.keys===null&&(n<=0||l<n)){if(e.state===0){var c=e.p===null?e.pBits:e.qBits,h=c-1;e.pqState===0?(e.num=new t(c,e.rng),e.num.testBit(h)||e.num.bitwiseTo(t.ONE.shiftLeft(h),u,e.num),e.num.dAddOffset(31-e.num.mod(s).byteValue(),0),o=0,++e.pqState):e.pqState===1?e.num.bitLength()>c?e.pqState=0:e.num.isProbablePrime(v(e.num.bitLength()))?++e.pqState:e.num.dAddOffset(i[o++%8],0):e.pqState===2?e.pqState=e.num.subtract(t.ONE).gcd(e.e).compareTo(t.ONE)===0?3:0:e.pqState===3&&(e.pqState=0,e.p===null?e.p=e.num:e.q=e.num,e.p!==null&&e.q!==null&&++e.state,e.num=null)}else if(e.state===1)e.p.compareTo(e.q)<0&&(e.num=e.p,e.p=e.q,e.q=e.num),++e.state;else if(e.state===2)e.p1=e.p.subtract(t.ONE),e.q1=e.q.subtract(t.ONE),e.phi=e.p1.multiply(e.q1),++e.state;else if(e.state===3)e.phi.gcd(e.e).compareTo(t.ONE)===0?++e.state:(e.p=null,e.q=null,e.state=0);else if(e.state===4)e.n=e.p.multiply(e.q),e.n.bitLength()===e.bits?++e.state:(e.q=null,e.state=0);else if(e.state===5){var p=e.e.modInverse(e.phi);e.keys={privateKey:r.rsa.setPrivateKey(e.n,e.e,p,e.p,e.q,p.mod(e.p1),p.mod(e.q1),e.q.modInverse(e.p)),publicKey:r.rsa.setPublicKey(e.n,e.e)}}f=+(new Date),l+=f-a,a=f}return e.keys!==null},r.rsa.generateKeyPair=function(e,t,n,i){arguments.length===1?typeof e=="object"?(n=e,e=undefined):typeof e=="function"&&(i=e,e=undefined):arguments.length===2?typeof e=="number"?typeof t=="function"?(i=t,t=undefined):typeof t!="number"&&(n=t,t=undefined):(n=e,i=t,e=undefined,t=undefined):arguments.length===3&&(typeof t=="number"?typeof n=="function"&&(i=n,n=undefined):(i=n,n=t,t=undefined)),n=n||{},e===undefined&&(e=n.bits||2048),t===undefined&&(t=n.e||65537);var s=r.rsa.createKeyPairGenerationState(e,t,n);if(!i)return r.rsa.stepKeyPairGenerationState(s,0),s.keys;p(s,n,i)},r.setRsaPublicKey=r.rsa.setPublicKey=function(t,i){var s={n:t,e:i};return s.encrypt=function(t,n,i){typeof n=="string"?n=n.toUpperCase():n===undefined&&(n="RSAES-PKCS1-V1_5");if(n==="RSAES-PKCS1-V1_5")n={encode:function(e,t,n){return c(e,t,2).getBytes()}};else if(n==="RSA-OAEP"||n==="RSAES-OAEP")n={encode:function(t,n){return e.pkcs1.encode_rsa_oaep(n,t,i)}};else if(["RAW","NONE","NULL",null].indexOf(n)!==-1)n={encode:function(e){return e}};else if(typeof n=="string")throw new Error('Unsupported encryption scheme: "'+n+'".');var o=n.encode(t,s,!0);return r.rsa.encrypt(o,s,!0)},s.verify=function(e,t,i){typeof i=="string"?i=i.toUpperCase():i===undefined&&(i="RSASSA-PKCS1-V1_5");if(i==="RSASSA-PKCS1-V1_5")i={verify:function(e,t){t=h(t,s,!0);var r=n.fromDer(t);return e===r.value[1].value}};else if(i==="NONE"||i==="NULL"||i===null)i={verify:function(e,t){return t=h(t,s,!0),e===t}};var o=r.rsa.decrypt(t,s,!0,!1);return i.verify(e,o,s.n.bitLength())},s},r.setRsaPrivateKey=r.rsa.setPrivateKey=function(t,n,i,s,o,u,a,l){var c={n:t,e:n,d:i,p:s,q:o,dP:u,dQ:a,qInv:l};return c.decrypt=function(t,n,i){typeof n=="string"?n=n.toUpperCase():n===undefined&&(n="RSAES-PKCS1-V1_5");var s=r.rsa.decrypt(t,c,!1,!1);if(n==="RSAES-PKCS1-V1_5")n={decode:h};else if(n==="RSA-OAEP"||n==="RSAES-OAEP")n={decode:function(t,n){return e.pkcs1.decode_rsa_oaep(n,t,i)}};else{if(["RAW","NONE","NULL",null].indexOf(n)===-1)throw new Error('Unsupported encryption scheme: "'+n+'".');n={decode:function(e){return e}}}return n.decode(s,c,!1)},c.sign=function(e,t){var n=!1;typeof t=="string"&&(t=t.toUpperCase());if(t===undefined||t==="RSASSA-PKCS1-V1_5")t={encode:f},n=1;else if(t==="NONE"||t==="NULL"||t===null)t={encode:function(){return e}},n=1;var i=t.encode(e,c.n.bitLength());return r.rsa.encrypt(i,c,n)},c},r.wrapRsaPrivateKey=function(e){return n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[n.create(n.Class.UNIVERSAL,n.Type.INTEGER,!1,n.integerToDer(0).getBytes()),n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[n.create(n.Class.UNIVERSAL,n.Type.OID,!1,n.oidToDer(r.oids.rsaEncryption).getBytes()),n.create(n.Class.UNIVERSAL,n.Type.NULL,!1,"")]),n.create(n.Class.UNIVERSAL,n.Type.OCTETSTRING,!1,n.toDer(e).getBytes())])},r.privateKeyFromAsn1=function(i){var u={},a=[];n.validate(i,s,u,a)&&(i=n.fromDer(e.util.createBuffer(u.privateKey))),u={},a=[];if(!n.validate(i,o,u,a)){var f=new Error("Cannot read private key. ASN.1 object does not contain an RSAPrivateKey.");throw f.errors=a,f}var l,c,h,p,d,v,m,g;return l=e.util.createBuffer(u.privateKeyModulus).toHex(),c=e.util.createBuffer(u.privateKeyPublicExponent).toHex(),h=e.util.createBuffer(u.privateKeyPrivateExponent).toHex(),p=e.util.createBuffer(u.privateKeyPrime1).toHex(),d=e.util.createBuffer(u.privateKeyPrime2).toHex(),v=e.util.createBuffer(u.privateKeyExponent1).toHex(),m=e.util.createBuffer(u.privateKeyExponent2).toHex(),g=e.util.createBuffer(u.privateKeyCoefficient).toHex(),r.setRsaPrivateKey(new t(l,16),new t(c,16),new t(h,16),new t(p,16),new t(d,16),new t(v,16),new t(m,16),new t(g,16))},r.privateKeyToAsn1=r.privateKeyToRSAPrivateKey=function(e){return n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[n.create(n.Class.UNIVERSAL,n.Type.INTEGER,!1,n.integerToDer(0).getBytes()),n.create(n.Class.UNIVERSAL,n.Type.INTEGER,!1,d(e.n)),n.create(n.Class.UNIVERSAL,n.Type.INTEGER,!1,d(e.e)),n.create(n.Class.UNIVERSAL,n.Type.INTEGER,!1,d(e.d)),n.create(n.Class.UNIVERSAL,n.Type.INTEGER,!1,d(e.p)),n.create(n.Class.UNIVERSAL,n.Type.INTEGER,!1,d(e.q)),n.create(n.Class.UNIVERSAL,n.Type.INTEGER,!1,d(e.dP)),n.create(n.Class.UNIVERSAL,n.Type.INTEGER,!1,d(e.dQ)),n.create(n.Class.UNIVERSAL,n.Type.INTEGER,!1,d(e.qInv))])},r.publicKeyFromAsn1=function(i){var s={},o=[];if(n.validate(i,a,s,o)){var f=n.derToOid(s.publicKeyOid);if(f!==r.oids.rsaEncryption){var l=new Error("Cannot read public key. Unknown OID.");throw l.oid=f,l}i=s.rsaPublicKey}o=[];if(!n.validate(i,u,s,o)){var l=new Error("Cannot read public key. ASN.1 object does not contain an RSAPublicKey.");throw l.errors=o,l}var c=e.util.createBuffer(s.publicKeyModulus).toHex(),h=e.util.createBuffer(s.publicKeyExponent).toHex();return r.setRsaPublicKey(new t(c,16),new t(h,16))},r.publicKeyToAsn1=r.publicKeyToSubjectPublicKeyInfo=function(e){return n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[n.create(n.Class.UNIVERSAL,n.Type.OID,!1,n.oidToDer(r.oids.rsaEncryption).getBytes()),n.create(n.Class.UNIVERSAL,n.Type.NULL,!1,"")]),n.create(n.Class.UNIVERSAL,n.Type.BITSTRING,!1,[r.publicKeyToRSAPublicKey(e)])])},r.publicKeyToRSAPublicKey=function(e){return n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[n.create(n.Class.UNIVERSAL,n.Type.INTEGER,!1,d(e.n)),n.create(n.Class.UNIVERSAL,n.Type.INTEGER,!1,d(e.e))])}}var r="rsa";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/rsa",["require","module","./asn1","./jsbn","./oids","./pkcs1","./prime","./random","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function a(e,t){return e.start().update(t).digest().getBytes()}if(typeof t=="undefined")var t=e.jsbn.BigInteger;var n=e.asn1,r=e.pki=e.pki||{};r.pbe=e.pbe=e.pbe||{};var i=r.oids,s={name:"EncryptedPrivateKeyInfo",tagClass:n.Class.UNIVERSAL,type:n.Type.SEQUENCE,constructed:!0,value:[{name:"EncryptedPrivateKeyInfo.encryptionAlgorithm",tagClass:n.Class.UNIVERSAL,type:n.Type.SEQUENCE,constructed:!0,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:n.Class.UNIVERSAL,type:n.Type.OID,constructed:!1,capture:"encryptionOid"},{name:"AlgorithmIdentifier.parameters",tagClass:n.Class.UNIVERSAL,type:n.Type.SEQUENCE,constructed:!0,captureAsn1:"encryptionParams"}]},{name:"EncryptedPrivateKeyInfo.encryptedData",tagClass:n.Class.UNIVERSAL,type:n.Type.OCTETSTRING,constructed:!1,capture:"encryptedData"}]},o={name:"PBES2Algorithms",tagClass:n.Class.UNIVERSAL,type:n.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.keyDerivationFunc",tagClass:n.Class.UNIVERSAL,type:n.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.keyDerivationFunc.oid",tagClass:n.Class.UNIVERSAL,type:n.Type.OID,constructed:!1,capture:"kdfOid"},{name:"PBES2Algorithms.params",tagClass:n.Class.UNIVERSAL,type:n.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.params.salt",tagClass:n.Class.UNIVERSAL,type:n.Type.OCTETSTRING,constructed:!1,capture:"kdfSalt"},{name:"PBES2Algorithms.params.iterationCount",tagClass:n.Class.UNIVERSAL,type:n.Type.INTEGER,onstructed:!0,capture:"kdfIterationCount"}]}]},{name:"PBES2Algorithms.encryptionScheme",tagClass:n.Class.UNIVERSAL,type:n.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.encryptionScheme.oid",tagClass:n.Class.UNIVERSAL,type:n.Type.OID,constructed:!1,capture:"encOid"},{name:"PBES2Algorithms.encryptionScheme.iv",tagClass:n.Class.UNIVERSAL,type:n.Type.OCTETSTRING,constructed:!1,capture:"encIv"}]}]},u={name:"pkcs-12PbeParams",tagClass:n.Class.UNIVERSAL,type:n.Type.SEQUENCE,constructed:!0,value:[{name:"pkcs-12PbeParams.salt",tagClass:n.Class.UNIVERSAL,type:n.Type.OCTETSTRING,constructed:!1,capture:"salt"},{name:"pkcs-12PbeParams.iterations",tagClass:n.Class.UNIVERSAL,type:n.Type.INTEGER,constructed:!1,capture:"iterations"}]};r.encryptPrivateKeyInfo=function(t,s,o){o=o||{},o.saltSize=o.saltSize||8,o.count=o.count||2048,o.algorithm=o.algorithm||"aes128";var u=e.random.getBytesSync(o.saltSize),a=o.count,f=n.integerToDer(a),l,c,h;if(o.algorithm.indexOf("aes")===0||o.algorithm==="des"){var p,d,v;switch(o.algorithm){case"aes128":l=16,p=16,d=i["aes128-CBC"],v=e.aes.createEncryptionCipher;break;case"aes192":l=24,p=16,d=i["aes192-CBC"],v=e.aes.createEncryptionCipher;break;case"aes256":l=32,p=16,d=i["aes256-CBC"],v=e.aes.createEncryptionCipher;break;case"des":l=8,p=8,d=i.desCBC,v=e.des.createEncryptionCipher;break;default:var m=new Error("Cannot encrypt private key. Unknown encryption algorithm.");throw m.algorithm=o.algorithm,m}var g=e.pkcs5.pbkdf2(s,u,a,l),y=e.random.getBytesSync(p),b=v(g);b.start(y),b.update(n.toDer(t)),b.finish(),h=b.output.getBytes(),c=n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[n.create(n.Class.UNIVERSAL,n.Type.OID,!1,n.oidToDer(i.pkcs5PBES2).getBytes()),n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[n.create(n.Class.UNIVERSAL,n.Type.OID,!1,n.oidToDer(i.pkcs5PBKDF2).getBytes()),n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[n.create(n.Class.UNIVERSAL,n.Type.OCTETSTRING,!1,u),n.create(n.Class.UNIVERSAL,n.Type.INTEGER,!1,f.getBytes())])]),n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[n.create(n.Class.UNIVERSAL,n.Type.OID,!1,n.oidToDer(d).getBytes()),n.create(n.Class.UNIVERSAL,n.Type.OCTETSTRING,!1,y)])])])}else{if(o.algorithm!=="3des"){var m=new Error("Cannot encrypt private key. Unknown encryption algorithm.");throw m.algorithm=o.algorithm,m}l=24;var w=new e.util.ByteBuffer(u),g=r.pbe.generatePkcs12Key(s,w,1,a,l),y=r.pbe.generatePkcs12Key(s,w,2,a,l),b=e.des.createEncryptionCipher(g);b.start(y),b.update(n.toDer(t)),b.finish(),h=b.output.getBytes(),c=n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[n.create(n.Class.UNIVERSAL,n.Type.OID,!1,n.oidToDer(i["pbeWithSHAAnd3-KeyTripleDES-CBC"]).getBytes()),n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[n.create(n.Class.UNIVERSAL,n.Type.OCTETSTRING,!1,u),n.create(n.Class.UNIVERSAL,n.Type.INTEGER,!1,f.getBytes())])])}var E=n.create(n.Class.UNIVERSAL,n.Type.SEQUENCE,!0,[c,n.create(n.Class.UNIVERSAL,n.Type.OCTETSTRING,!1,h)]);return E},r.decryptPrivateKeyInfo=function(t,i){var o=null,u={},a=[];if(!n.validate(t,s,u,a)){var f=new Error("Cannot read encrypted private key. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");throw f.errors=a,f}var l=n.derToOid(u.encryptionOid),c=r.pbe.getCipher(l,u.encryptionParams,i),h=e.util.createBuffer(u.encryptedData);return c.update(h),c.finish()&&(o=n.fromDer(c.output)),o},r.encryptedPrivateKeyToPem=function(t,r){var i={type:"ENCRYPTED PRIVATE KEY",body:n.toDer(t).getBytes()};return e.pem.encode(i,{maxline:r})},r.encryptedPrivateKeyFromPem=function(t){var r=e.pem.decode(t)[0];if(r.type!=="ENCRYPTED PRIVATE KEY"){var i=new Error('Could not convert encrypted private key from PEM; PEM header type is "ENCRYPTED PRIVATE KEY".');throw i.headerType=r.type,i}if(r.procType&&r.procType.type==="ENCRYPTED")throw new Error("Could not convert encrypted private key from PEM; PEM is encrypted.");return n.fromDer(r.body)},r.encryptRsaPrivateKey=function(t,i,s){s=s||{};if(!s.legacy){var o=r.wrapRsaPrivateKey(r.privateKeyToAsn1(t));return o=r.encryptPrivateKeyInfo(o,i,s),r.encryptedPrivateKeyToPem(o)}var u,a,f,l;switch(s.algorithm){case"aes128":u="AES-128-CBC",f=16,a=e.random.getBytesSync(16),l=e.aes.createEncryptionCipher;break;case"aes192":u="AES-192-CBC",f=24,a=e.random.getBytesSync(16),l=e.aes.createEncryptionCipher;break;case"aes256":u="AES-256-CBC",f=32,a=e.random.getBytesSync(16),l=e.aes.createEncryptionCipher;break;case"3des":u="DES-EDE3-CBC",f=24,a=e.random.getBytesSync(8),l=e.des.createEncryptionCipher;break;case"des":u="DES-CBC",f=8,a=e.random.getBytesSync(8),l=e.des.createEncryptionCipher;break;default:var c=new Error('Could not encrypt RSA private key; unsupported encryption algorithm "'+s.algorithm+'".');throw c.algorithm=s.algorithm,c}var h=e.pbe.opensslDeriveBytes(i,a.substr(0,8),f),p=l(h);p.start(a),p.update(n.toDer(r.privateKeyToAsn1(t))),p.finish();var d={type:"RSA PRIVATE KEY",procType:{version:"4",type:"ENCRYPTED"},dekInfo:{algorithm:u,parameters:e.util.bytesToHex(a).toUpperCase()},body:p.output.getBytes()};return e.pem.encode(d)},r.decryptRsaPrivateKey=function(t,i){var s=null,o=e.pem.decode(t)[0];if(o.type!=="ENCRYPTED PRIVATE KEY"&&o.type!=="PRIVATE KEY"&&o.type!=="RSA PRIVATE KEY"){var u=new Error('Could not convert private key from PEM; PEM header type is not "ENCRYPTED PRIVATE KEY", "PRIVATE KEY", or "RSA PRIVATE KEY".');throw u.headerType=u,u}if(o.procType&&o.procType.type==="ENCRYPTED"){var a,f;switch(o.dekInfo.algorithm){case"DES-CBC":a=8,f=e.des.createDecryptionCipher;break;case"DES-EDE3-CBC":a=24,f=e.des.createDecryptionCipher;break;case"AES-128-CBC":a=16,f=e.aes.createDecryptionCipher;break;case"AES-192-CBC":a=24,f=e.aes.createDecryptionCipher;break;case"AES-256-CBC":a=32,f=e.aes.createDecryptionCipher;break;case"RC2-40-CBC":a=5,f=function(t){return e.rc2.createDecryptionCipher(t,40)};break;case"RC2-64-CBC":a=8,f=function(t){return e.rc2.createDecryptionCipher(t,64)};break;case"RC2-128-CBC":a=16,f=function(t){return e.rc2.createDecryptionCipher(t,128)};break;default:var u=new Error('Could not decrypt private key; unsupported encryption algorithm "'+o.dekInfo.algorithm+'".');throw u.algorithm=o.dekInfo.algorithm,u}var l=e.util.hexToBytes(o.dekInfo.parameters),c=e.pbe.opensslDeriveBytes(i,l.substr(0,8),a),h=f(c);h.start(l),h.update(e.util.createBuffer(o.body));if(!h.finish())return s;s=h.output.getBytes()}else s=o.body;return o.type==="ENCRYPTED PRIVATE KEY"?s=r.decryptPrivateKeyInfo(n.fromDer(s),i):s=n.fromDer(s),s!==null&&(s=r.privateKeyFromAsn1(s)),s},r.pbe.generatePkcs12Key=function(t,n,r,i,s,o){var u,a;if(typeof o=="undefined"||o===null)o=e.md.sha1.create();var f=o.digestLength,l=o.blockLength,c=new e.util.ByteBuffer,h=new e.util.ByteBuffer;if(t!==null&&t!==undefined){for(a=0;a<t.length;a++)h.putInt16(t.charCodeAt(a));h.putInt16(0)}var p=h.length(),d=n.length(),v=new e.util.ByteBuffer;v.fillWithByte(r,l);var m=l*Math.ceil(d/l),g=new e.util.ByteBuffer;for(a=0;a<m;a++)g.putByte(n.at(a%d));var y=l*Math.ceil(p/l),b=new e.util.ByteBuffer;for(a=0;a<y;a++)b.putByte(h.at(a%p));var w=g;w.putBuffer(b);var E=Math.ceil(s/f);for(var S=1;S<=E;S++){var x=new e.util.ByteBuffer;x.putBytes(v.bytes()),x.putBytes(w.bytes());for(var T=0;T<i;T++)o.start(),o.update(x.getBytes()),x=o.digest();var N=new e.util.ByteBuffer;for(a=0;a<l;a++)N.putByte(x.at(a%f));var C=Math.ceil(d/l)+Math.ceil(p/l),k=new e.util.ByteBuffer;for(u=0;u<C;u++){var L=new e.util.ByteBuffer(w.getBytes(l)),A=511;for(a=N.length()-1;a>=0;a--)A>>=8,A+=N.at(a)+L.at(a),L.setAt(a,A&255);k.putBuffer(L)}w=k,c.putBuffer(x)}return c.truncate(c.length()-s),c},r.pbe.getCipher=function(e,t,n){switch(e){case r.oids.pkcs5PBES2:return r.pbe.getCipherForPBES2(e,t,n);case r.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:case r.oids["pbewithSHAAnd40BitRC2-CBC"]:return r.pbe.getCipherForPKCS12PBE(e,t,n);default:var i=new Error("Cannot read encrypted PBE data block. Unsupported OID.");throw i.oid=e,i.supportedOids=["pkcs5PBES2","pbeWithSHAAnd3-KeyTripleDES-CBC","pbewithSHAAnd40BitRC2-CBC"],i}},r.pbe.getCipherForPBES2=function(t,i,s){var u={},a=[];if(!n.validate(i,o,u,a)){var f=new Error("Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");throw f.errors=a,f}t=n.derToOid(u.kdfOid);if(t!==r.oids.pkcs5PBKDF2){var f=new Error("Cannot read encrypted private key. Unsupported key derivation function OID.");throw f.oid=t,f.supportedOids=["pkcs5PBKDF2"],f}t=n.derToOid(u.encOid);if(t!==r.oids["aes128-CBC"]&&t!==r.oids["aes192-CBC"]&&t!==r.oids["aes256-CBC"]&&t!==r.oids["des-EDE3-CBC"]&&t!==r.oids.desCBC){var f=new Error("Cannot read encrypted private key. Unsupported encryption scheme OID.");throw f.oid=t,f.supportedOids=["aes128-CBC","aes192-CBC","aes256-CBC","des-EDE3-CBC","desCBC"],f}var l=u.kdfSalt,c=e.util.createBuffer(u.kdfIterationCount);c=c.getInt(c.length()<<3);var h,p;switch(r.oids[t]){case"aes128-CBC":h=16,p=e.aes.createDecryptionCipher;break;case"aes192-CBC":h=24,p=e.aes.createDecryptionCipher;break;case"aes256-CBC":h=32,p=e.aes.createDecryptionCipher;break;case"des-EDE3-CBC":h=24,p=e.des.createDecryptionCipher;break;case"desCBC":h=8,p=e.des.createDecryptionCipher}var d=e.pkcs5.pbkdf2(s,l,c,h),v=u.encIv,m=p(d);return m.start(v),m},r.pbe.getCipherForPKCS12PBE=function(t,i,s){var o={},a=[];if(!n.validate(i,u,o,a)){var f=new Error("Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");throw f.errors=a,f}var l=e.util.createBuffer(o.salt),c=e.util.createBuffer(o.iterations);c=c.getInt(c.length()<<3);var h,p,d;switch(t){case r.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:h=24,p=8,d=e.des.startDecrypting;break;case r.oids["pbewithSHAAnd40BitRC2-CBC"]:h=5,p=8,d=function(t,n){var r=e.rc2.createDecryptionCipher(t,40);return r.start(n,null),r};break;default:var f=new Error("Cannot read PKCS #12 PBE data block. Unsupported OID.");throw f.oid=t,f}var v=r.pbe.generatePkcs12Key(s,l,1,c,h),m=r.pbe.generatePkcs12Key(s,l,2,c,p);return d(v,m)},r.pbe.opensslDeriveBytes=function(t,n,r,i){if(typeof i=="undefined"||i===null)i=e.md.md5.create();n===null&&(n="");var s=[a(i,t+n)];for(var o=16,u=1;o<r;++u,o+=16)s.push(a(i,s[u-1]+t+n));return s.join("").substr(0,r)}}var r="pbe";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/pbe",["require","module","./aes","./asn1","./des","./md","./oids","./pem","./pbkdf2","./random","./rc2","./rsa","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){var t=e.asn1,n=e.pkcs7asn1=e.pkcs7asn1||{};e.pkcs7=e.pkcs7||{},e.pkcs7.asn1=n;var r={name:"ContentInfo",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"ContentInfo.ContentType",tagClass:t.Class.UNIVERSAL,type:t.Type.OID,constructed:!1,capture:"contentType"},{name:"ContentInfo.content",tagClass:t.Class.CONTEXT_SPECIFIC,type:0,constructed:!0,optional:!0,captureAsn1:"content"}]};n.contentInfoValidator=r;var i={name:"EncryptedContentInfo",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"EncryptedContentInfo.contentType",tagClass:t.Class.UNIVERSAL,type:t.Type.OID,constructed:!1,capture:"contentType"},{name:"EncryptedContentInfo.contentEncryptionAlgorithm",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"EncryptedContentInfo.contentEncryptionAlgorithm.algorithm",tagClass:t.Class.UNIVERSAL,type:t.Type.OID,constructed:!1,capture:"encAlgorithm"},{name:"EncryptedContentInfo.contentEncryptionAlgorithm.parameter",tagClass:t.Class.UNIVERSAL,captureAsn1:"encParameter"}]},{name:"EncryptedContentInfo.encryptedContent",tagClass:t.Class.CONTEXT_SPECIFIC,type:0,capture:"encryptedContent",captureAsn1:"encryptedContentAsn1"}]};n.envelopedDataValidator={name:"EnvelopedData",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"EnvelopedData.Version",tagClass:t.Class.UNIVERSAL,type:t.Type.INTEGER,constructed:!1,capture:"version"},{name:"EnvelopedData.RecipientInfos",tagClass:t.Class.UNIVERSAL,type:t.Type.SET,constructed:!0,captureAsn1:"recipientInfos"}].concat(i)},n.encryptedDataValidator={name:"EncryptedData",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"EncryptedData.Version",tagClass:t.Class.UNIVERSAL,type:t.Type.INTEGER,constructed:!1,capture:"version"}].concat(i)};var s={name:"SignerInfo",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"SignerInfo.version",tagClass:t.Class.UNIVERSAL,type:t.Type.INTEGER,constructed:!1},{name:"SignerInfo.issuerAndSerialNumber",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"SignerInfo.issuerAndSerialNumber.issuer",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,captureAsn1:"issuer"},{name:"SignerInfo.issuerAndSerialNumber.serialNumber",tagClass:t.Class.UNIVERSAL,type:t.Type.INTEGER,constructed:!1,capture:"serial"}]},{name:"SignerInfo.digestAlgorithm",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"SignerInfo.digestAlgorithm.algorithm",tagClass:t.Class.UNIVERSAL,type:t.Type.OID,constructed:!1,capture:"digestAlgorithm"},{name:"SignerInfo.digestAlgorithm.parameter",tagClass:t.Class.UNIVERSAL,constructed:!1,captureAsn1:"digestParameter",optional:!0}]},{name:"SignerInfo.authenticatedAttributes",tagClass:t.Class.CONTEXT_SPECIFIC,type:0,constructed:!0,optional:!0,capture:"authenticatedAttributes"},{name:"SignerInfo.digestEncryptionAlgorithm",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,capture:"signatureAlgorithm"},{name:"SignerInfo.encryptedDigest",tagClass:t.Class.UNIVERSAL,type:t.Type.OCTETSTRING,constructed:!1,capture:"signature"},{name:"SignerInfo.unauthenticatedAttributes",tagClass:t.Class.CONTEXT_SPECIFIC,type:1,constructed:!0,optional:!0,capture:"unauthenticatedAttributes"}]};n.signedDataValidator={name:"SignedData",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"SignedData.Version",tagClass:t.Class.UNIVERSAL,type:t.Type.INTEGER,constructed:!1,capture:"version"},{name:"SignedData.DigestAlgorithms",tagClass:t.Class.UNIVERSAL,type:t.Type.SET,constructed:!0,captureAsn1:"digestAlgorithms"},r,{name:"SignedData.Certificates",tagClass:t.Class.CONTEXT_SPECIFIC,type:0,optional:!0,captureAsn1:"certificates"},{name:"SignedData.CertificateRevocationLists",tagClass:t.Class.CONTEXT_SPECIFIC,type:1,optional:!0,captureAsn1:"crls"},{name:"SignedData.SignerInfos",tagClass:t.Class.UNIVERSAL,type:t.Type.SET,capture:"signerInfos",optional:!0,value:[s]}]},n.recipientInfoValidator={name:"RecipientInfo",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"RecipientInfo.version",tagClass:t.Class.UNIVERSAL,type:t.Type.INTEGER,constructed:!1,capture:"version"},{name:"RecipientInfo.issuerAndSerial",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"RecipientInfo.issuerAndSerial.issuer",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,captureAsn1:"issuer"},{name:"RecipientInfo.issuerAndSerial.serialNumber",tagClass:t.Class.UNIVERSAL,type:t.Type.INTEGER,constructed:!1,capture:"serial"}]},{name:"RecipientInfo.keyEncryptionAlgorithm",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"RecipientInfo.keyEncryptionAlgorithm.algorithm",tagClass:t.Class.UNIVERSAL,type:t.Type.OID,constructed:!1,capture:"encAlgorithm"},{name:"RecipientInfo.keyEncryptionAlgorithm.parameter",tagClass:t.Class.UNIVERSAL,constructed:!1,captureAsn1:"encParameter"}]},{name:"RecipientInfo.encryptedKey",tagClass:t.Class.UNIVERSAL,type:t.Type.OCTETSTRING,constructed:!1,capture:"encKey"}]}}var r="pkcs7asn1";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/pkcs7asn1",["require","module","./asn1","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){e.mgf=e.mgf||{};var t=e.mgf.mgf1=e.mgf1=e.mgf1||{};t.create=function(t){var n={generate:function(n,r){var i=new e.util.ByteBuffer,s=Math.ceil(r/t.digestLength);for(var o=0;o<s;o++){var u=new e.util.ByteBuffer;u.putInt32(o),t.start(),t.update(n+u.getBytes()),i.putBuffer(t.digest())}return i.truncate(i.length()-r),i.getBytes()}};return n}}var r="mgf1";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/mgf1",["require","module","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){e.mgf=e.mgf||{},e.mgf.mgf1=e.mgf1}var r="mgf";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/mgf",["require","module","./mgf1"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){var t=e.pss=e.pss||{};t.create=function(t){arguments.length===3&&(t={md:arguments[0],mgf:arguments[1],saltLength:arguments[2]});var n=t.md,r=t.mgf,i=n.digestLength,s=t.salt||null;typeof s=="string"&&(s=e.util.createBuffer(s));var o;if("saltLength"in t)o=t.saltLength;else{if(s===null)throw new Error("Salt length not specified or specific salt not given.");o=s.length()}if(s!==null&&s.length()!==o)throw new Error("Given salt length does not match length of given salt.");var u=t.prng||e.random,a={};return a.encode=function(t,a){var f,l=a-1,c=Math.ceil(l/8),h=t.digest().getBytes();if(c<i+o+2)throw new Error("Message is too long to encrypt.");var p;s===null?p=u.getBytesSync(o):p=s.bytes();var d=new e.util.ByteBuffer;d.fillWithByte(0,8),d.putBytes(h),d.putBytes(p),n.start(),n.update(d.getBytes());var v=n.digest().getBytes(),m=new e.util.ByteBuffer;m.fillWithByte(0,c-o-i-2),m.putByte(1),m.putBytes(p);var g=m.getBytes(),y=c-i-1,b=r.generate(v,y),w="";for(f=0;f<y;f++)w+=String.fromCharCode(g.charCodeAt(f)^b.charCodeAt(f));var E=65280>>8*c-l&255;return w=String.fromCharCode(w.charCodeAt(0)&~E)+w.substr(1),w+v+String.fromCharCode(188)},a.verify=function(t,s,u){var a,f=u-1,l=Math.ceil(f/8);s=s.substr(-l);if(l<i+o+2)throw new Error("Inconsistent parameters to PSS signature verification.");if(s.charCodeAt(l-1)!==188)throw new Error("Encoded message does not end in 0xBC.");var c=l-i-1,h=s.substr(0,c),p=s.substr(c,i),d=65280>>8*l-f&255;if((h.charCodeAt(0)&d)!==0)throw new Error("Bits beyond keysize not zero as expected.");var v=r.generate(p,c),m="";for(a=0;a<c;a++)m+=String.fromCharCode(h.charCodeAt(a)^v.charCodeAt(a));m=String.fromCharCode(m.charCodeAt(0)&~d)+m.substr(1);var g=l-i-o-2;for(a=0;a<g;a++)if(m.charCodeAt(a)!==0)throw new Error("Leftmost octets not zero as expected");if(m.charCodeAt(g)!==1)throw new Error("Inconsistent PSS signature, 0x01 marker not found");var y=m.substr(-o),b=new e.util.ByteBuffer;b.fillWithByte(0,8),b.putBytes(t),b.putBytes(y),n.start(),n.update(b.getBytes());var w=n.digest().getBytes();return p===w},a}}var r="pss";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/pss",["require","module","./random","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function l(e,t){typeof t=="string"&&(t={shortName:t});var n=null,r;for(var i=0;n===null&&i<e.attributes.length;++i)r=e.attributes[i],t.type&&t.type===r.type?n=r:t.name&&t.name===r.name?n=r:t.shortName&&t.shortName===r.shortName&&(n=r);return n}function h(n){var r=t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[]),i,s,o=n.attributes;for(var u=0;u<o.length;++u){i=o[u];var a=i.value,f=t.Type.PRINTABLESTRING;"valueTagClass"in i&&(f=i.valueTagClass,f===t.Type.UTF8&&(a=e.util.encodeUtf8(a))),s=t.create(t.Class.UNIVERSAL,t.Type.SET,!0,[t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(i.type).getBytes()),t.create(t.Class.UNIVERSAL,f,!1,a)])]),r.value.push(s)}return r}function p(n){var r={};for(var i=0;i<n.length;++i){var s=n[i];if(s.shortName&&(s.valueTagClass===t.Type.UTF8||s.valueTagClass===t.Type.PRINTABLESTRING||s.valueTagClass===t.Type.IA5STRING)){var o=s.value;s.valueTagClass===t.Type.UTF8&&(o=e.util.encodeUtf8(s.value)),s.shortName in r?e.util.isArray(r[s.shortName])?r[s.shortName].push(o):r[s.shortName]=[r[s.shortName],o]:r[s.shortName]=o}}return r}function d(e){var s;for(var o=0;o<e.length;++o){s=e[o],typeof s.name=="undefined"&&(s.type&&s.type in n.oids?s.name=n.oids[s.type]:s.shortName&&s.shortName in i&&(s.name=n.oids[i[s.shortName]]));if(typeof s.type=="undefined"){if(!(s.name&&s.name in n.oids)){var u=new Error("Attribute type not specified.");throw u.attribute=s,u}s.type=n.oids[s.name]}typeof s.shortName=="undefined"&&s.name&&s.name in i&&(s.shortName=i[s.name]);if(s.type===r.extensionRequest){s.valueConstructed=!0,s.valueTagClass=t.Type.SEQUENCE;if(!s.value&&s.extensions){s.value=[];for(var a=0;a<s.extensions.length;++a)s.value.push(n.certificateExtensionToAsn1(v(s.extensions[a])))}}if(typeof s.value=="undefined"){var u=new Error("Attribute value not specified.");throw u.attribute=s,u}}}function v(i,s){s=s||{},typeof i.name=="undefined"&&i.id&&i.id in n.oids&&(i.name=n.oids[i.id]);if(typeof i.id=="undefined"){if(!(i.name&&i.name in n.oids)){var o=new Error("Extension ID not specified.");throw o.extension=i,o}i.id=n.oids[i.name]}if(typeof i.value!="undefined")return i;if(i.name==="keyUsage"){var u=0,a=0,f=0;i.digitalSignature&&(a|=128,u=7),i.nonRepudiation&&(a|=64,u=6),i.keyEncipherment&&(a|=32,u=5),i.dataEncipherment&&(a|=16,u=4),i.keyAgreement&&(a|=8,u=3),i.keyCertSign&&(a|=4,u=2),i.cRLSign&&(a|=2,u=1),i.encipherOnly&&(a|=1,u=0),i.decipherOnly&&(f|=128,u=7);var l=String.fromCharCode(u);f!==0?l+=String.fromCharCode(a)+String.fromCharCode(f):a!==0&&(l+=String.fromCharCode(a)),i.value=t.create(t.Class.UNIVERSAL,t.Type.BITSTRING,!1,l)}else if(i.name==="basicConstraints")i.value=t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[]),i.cA&&i.value.value.push(t.create(t.Class.UNIVERSAL,t.Type.BOOLEAN,!1,String.fromCharCode(255))),"pathLenConstraint"in i&&i.value.value.push(t.create(t.Class.UNIVERSAL,t.Type.INTEGER,!1,t.integerToDer(i.pathLenConstraint).getBytes()));else if(i.name==="extKeyUsage"){i.value=t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[]);var c=i.value.value;for(var h in i){if(i[h]!==!0)continue;h in r?c.push(t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(r[h]).getBytes())):h.indexOf(".")!==-1&&c.push(t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(h).getBytes()))}}else if(i.name==="nsCertType"){var u=0,a=0;i.client&&(a|=128,u=7),i.server&&(a|=64,u=6),i.email&&(a|=32,u=5),i.objsign&&(a|=16,u=4),i.reserved&&(a|=8,u=3),i.sslCA&&(a|=4,u=2),i.emailCA&&(a|=2,u=1),i.objCA&&(a|=1,u=0);var l=String.fromCharCode(u);a!==0&&(l+=String.fromCharCode(a)),i.value=t.create(t.Class.UNIVERSAL,t.Type.BITSTRING,!1,l)}else if(i.name==="subjectAltName"||i.name==="issuerAltName"){i.value=t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[]);var p;for(var d=0;d<i.altNames.length;++d){p=i.altNames[d];var l=p.value;if(p.type===7&&p.ip){l=e.util.bytesFromIP(p.ip);if(l===null){var o=new Error('Extension "ip" value is not a valid IPv4 or IPv6 address.');throw o.extension=i,o}}else p.type===8&&(p.oid?l=t.oidToDer(t.oidToDer(p.oid)):l=t.oidToDer(l));i.value.value.push(t.create(t.Class.CONTEXT_SPECIFIC,p.type,!1,l))}}else if(i.name==="subjectKeyIdentifier"&&s.cert){var v=s.cert.generateSubjectKeyIdentifier();i.subjectKeyIdentifier=v.toHex(),i.value=t.create(t.Class.UNIVERSAL,t.Type.OCTETSTRING,!1,v.getBytes())}if(typeof i.value=="undefined"){var o=new Error("Extension value not specified.");throw o.extension=i,o}return i}function m(e,n){switch(e){case r["RSASSA-PSS"]:var i=[];return n.hash.algorithmOid!==undefined&&i.push(t.create(t.Class.CONTEXT_SPECIFIC,0,!0,[t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(n.hash.algorithmOid).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.NULL,!1,"")])])),n.mgf.algorithmOid!==undefined&&i.push(t.create(t.Class.CONTEXT_SPECIFIC,1,!0,[t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(n.mgf.algorithmOid).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(n.mgf.hash.algorithmOid).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.NULL,!1,"")])])])),n.saltLength!==undefined&&i.push(t.create(t.Class.CONTEXT_SPECIFIC,2,!0,[t.create(t.Class.UNIVERSAL,t.Type.INTEGER,!1,t.integerToDer(n.saltLength).getBytes())])),t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,i);default:return t.create(t.Class.UNIVERSAL,t.Type.NULL,!1,"")}}function g(n){var r=t.create(t.Class.CONTEXT_SPECIFIC,0,!0,[]);if(n.attributes.length===0)return r;var i=n.attributes;for(var s=0;s<i.length;++s){var o=i[s],u=o.value,a=t.Type.UTF8;"valueTagClass"in o&&(a=o.valueTagClass),a===t.Type.UTF8&&(u=e.util.encodeUtf8(u));var f=!1;"valueConstructed"in o&&(f=o.valueConstructed);var l=t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(o.type).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.SET,!0,[t.create(t.Class.UNIVERSAL,a,f,u)])]);r.value.push(l)}return r}var t=e.asn1,n=e.pki=e.pki||{},r=n.oids,i={};i.CN=r.commonName,i.commonName="CN",i.C=r.countryName,i.countryName="C",i.L=r.localityName,i.localityName="L",i.ST=r.stateOrProvinceName,i.stateOrProvinceName="ST",i.O=r.organizationName,i.organizationName="O",i.OU=r.organizationalUnitName,i.organizationalUnitName="OU",i.E=r.emailAddress,i.emailAddress="E";var s=e.pki.rsa.publicKeyValidator,o={name:"Certificate",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"Certificate.TBSCertificate",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,captureAsn1:"tbsCertificate",value:[{name:"Certificate.TBSCertificate.version",tagClass:t.Class.CONTEXT_SPECIFIC,type:0,constructed:!0,optional:!0,value:[{name:"Certificate.TBSCertificate.version.integer",tagClass:t.Class.UNIVERSAL,type:t.Type.INTEGER,constructed:!1,capture:"certVersion"}]},{name:"Certificate.TBSCertificate.serialNumber",tagClass:t.Class.UNIVERSAL,type:t.Type.INTEGER,constructed:!1,capture:"certSerialNumber"},{name:"Certificate.TBSCertificate.signature",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"Certificate.TBSCertificate.signature.algorithm",tagClass:t.Class.UNIVERSAL,type:t.Type.OID,constructed:!1,capture:"certinfoSignatureOid"},{name:"Certificate.TBSCertificate.signature.parameters",tagClass:t.Class.UNIVERSAL,optional:!0,captureAsn1:"certinfoSignatureParams"}]},{name:"Certificate.TBSCertificate.issuer",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,captureAsn1:"certIssuer"},{name:"Certificate.TBSCertificate.validity",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"Certificate.TBSCertificate.validity.notBefore (utc)",tagClass:t.Class.UNIVERSAL,type:t.Type.UTCTIME,constructed:!1,optional:!0,capture:"certValidity1UTCTime"},{name:"Certificate.TBSCertificate.validity.notBefore (generalized)",tagClass:t.Class.UNIVERSAL,type:t.Type.GENERALIZEDTIME,constructed:!1,optional:!0,capture:"certValidity2GeneralizedTime"},{name:"Certificate.TBSCertificate.validity.notAfter (utc)",tagClass:t.Class.UNIVERSAL,type:t.Type.UTCTIME,constructed:!1,optional:!0,capture:"certValidity3UTCTime"},{name:"Certificate.TBSCertificate.validity.notAfter (generalized)",tagClass:t.Class.UNIVERSAL,type:t.Type.GENERALIZEDTIME,constructed:!1,optional:!0,capture:"certValidity4GeneralizedTime"}]},{name:"Certificate.TBSCertificate.subject",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,captureAsn1:"certSubject"},s,{name:"Certificate.TBSCertificate.issuerUniqueID",tagClass:t.Class.CONTEXT_SPECIFIC,type:1,constructed:!0,optional:!0,value:[{name:"Certificate.TBSCertificate.issuerUniqueID.id",tagClass:t.Class.UNIVERSAL,type:t.Type.BITSTRING,constructed:!1,capture:"certIssuerUniqueId"}]},{name:"Certificate.TBSCertificate.subjectUniqueID",tagClass:t.Class.CONTEXT_SPECIFIC,type:2,constructed:!0,optional:!0,value:[{name:"Certificate.TBSCertificate.subjectUniqueID.id",tagClass:t.Class.UNIVERSAL,type:t.Type.BITSTRING,constructed:!1,capture:"certSubjectUniqueId"}]},{name:"Certificate.TBSCertificate.extensions",tagClass:t.Class.CONTEXT_SPECIFIC,type:3,constructed:!0,captureAsn1:"certExtensions",optional:!0}]},{name:"Certificate.signatureAlgorithm",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"Certificate.signatureAlgorithm.algorithm",tagClass:t.Class.UNIVERSAL,type:t.Type.OID,constructed:!1,capture:"certSignatureOid"},{name:"Certificate.TBSCertificate.signature.parameters",tagClass:t.Class.UNIVERSAL,optional:!0,captureAsn1:"certSignatureParams"}]},{name:"Certificate.signatureValue",tagClass:t.Class.UNIVERSAL,type:t.Type.BITSTRING,constructed:!1,capture:"certSignature"}]},u={name:"rsapss",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"rsapss.hashAlgorithm",tagClass:t.Class.CONTEXT_SPECIFIC,type:0,constructed:!0,value:[{name:"rsapss.hashAlgorithm.AlgorithmIdentifier",tagClass:t.Class.UNIVERSAL,type:t.Class.SEQUENCE,constructed:!0,optional:!0,value:[{name:"rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm",tagClass:t.Class.UNIVERSAL,type:t.Type.OID,constructed:!1,capture:"hashOid"}]}]},{name:"rsapss.maskGenAlgorithm",tagClass:t.Class.CONTEXT_SPECIFIC,type:1,constructed:!0,value:[{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier",tagClass:t.Class.UNIVERSAL,type:t.Class.SEQUENCE,constructed:!0,optional:!0,value:[{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm",tagClass:t.Class.UNIVERSAL,type:t.Type.OID,constructed:!1,capture:"maskGenOid"},{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier.params",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm",tagClass:t.Class.UNIVERSAL,type:t.Type.OID,constructed:!1,capture:"maskGenHashOid"}]}]}]},{name:"rsapss.saltLength",tagClass:t.Class.CONTEXT_SPECIFIC,type:2,optional:!0,value:[{name:"rsapss.saltLength.saltLength",tagClass:t.Class.UNIVERSAL,type:t.Class.INTEGER,constructed:!1,capture:"saltLength"}]},{name:"rsapss.trailerField",tagClass:t.Class.CONTEXT_SPECIFIC,type:3,optional:!0,value:[{name:"rsapss.trailer.trailer",tagClass:t.Class.UNIVERSAL,type:t.Class.INTEGER,constructed:!1,capture:"trailer"}]}]},a={name:"CertificationRequestInfo",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,captureAsn1:"certificationRequestInfo",value:[{name:"CertificationRequestInfo.integer",tagClass:t.Class.UNIVERSAL,type:t.Type.INTEGER,constructed:!1,capture:"certificationRequestInfoVersion"},{name:"CertificationRequestInfo.subject",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,captureAsn1:"certificationRequestInfoSubject"},s,{name:"CertificationRequestInfo.attributes",tagClass:t.Class.CONTEXT_SPECIFIC,type:0,constructed:!0,optional:!0,capture:"certificationRequestInfoAttributes",value:[{name:"CertificationRequestInfo.attributes",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"CertificationRequestInfo.attributes.type",tagClass:t.Class.UNIVERSAL,type:t.Type.OID,constructed:!1},{name:"CertificationRequestInfo.attributes.value",tagClass:t.Class.UNIVERSAL,type:t.Type.SET,constructed:!0}]}]}]},f={name:"CertificationRequest",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,captureAsn1:"csr",value:[a,{name:"CertificationRequest.signatureAlgorithm",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"CertificationRequest.signatureAlgorithm.algorithm",tagClass:t.Class.UNIVERSAL,type:t.Type.OID,constructed:!1,capture:"csrSignatureOid"},{name:"CertificationRequest.signatureAlgorithm.parameters",tagClass:t.Class.UNIVERSAL,optional:!0,captureAsn1:"csrSignatureParams"}]},{name:"CertificationRequest.signature",tagClass:t.Class.UNIVERSAL,type:t.Type.BITSTRING,constructed:!1,capture:"csrSignature"}]};n.RDNAttributesAsArray=function(e,n){var s=[],o,u,a;for(var f=0;f<e.value.length;++f){o=e.value[f];for(var l=0;l<o.value.length;++l)a={},u=o.value[l],a.type=t.derToOid(u.value[0].value),a.value=u.value[1].value,a.valueTagClass=u.value[1].type,a.type in r&&(a.name=r[a.type],a.name in i&&(a.shortName=i[a.name])),n&&(n.update(a.type),n.update(a.value)),s.push(a)}return s},n.CRIAttributesAsArray=function(e){var s=[];for(var o=0;o<e.length;++o){var u=e[o],a=t.derToOid(u.value[0].value),f=u.value[1].value;for(var l=0;l<f.length;++l){var c={};c.type=a,c.value=f[l].value,c.valueTagClass=f[l].type,c.type in r&&(c.name=r[c.type],c.name in i&&(c.shortName=i[c.name]));if(c.type===r.extensionRequest){c.extensions=[];for(var h=0;h<c.value.length;++h)c.extensions.push(n.certificateExtensionFromAsn1(c.value[h]))}s.push(c)}}return s};var c=function(e,n,i){var s={};if(e!==r["RSASSA-PSS"])return s;i&&(s={hash:{algorithmOid:r.sha1},mgf:{algorithmOid:r.mgf1,hash:{algorithmOid:r.sha1}},saltLength:20});var o={},a=[];if(!t.validate(n,u,o,a)){var f=new Error("Cannot read RSASSA-PSS parameter block.");throw f.errors=a,f}return o.hashOid!==undefined&&(s.hash=s.hash||{},s.hash.algorithmOid=t.derToOid(o.hashOid)),o.maskGenOid!==undefined&&(s.mgf=s.mgf||{},s.mgf.algorithmOid=t.derToOid(o.maskGenOid),s.mgf.hash=s.mgf.hash||{},s.mgf.hash.algorithmOid=t.derToOid(o.maskGenHashOid)),o.saltLength!==undefined&&(s.saltLength=o.saltLength.charCodeAt(0)),s};n.certificateFromPem=function(r,i,s){var o=e.pem.decode(r)[0];if(o.type!=="CERTIFICATE"&&o.type!=="X509 CERTIFICATE"&&o.type!=="TRUSTED CERTIFICATE"){var u=new Error('Could not convert certificate from PEM; PEM header type is not "CERTIFICATE", "X509 CERTIFICATE", or "TRUSTED CERTIFICATE".');throw u.headerType=o.type,u}if(o.procType&&o.procType.type==="ENCRYPTED")throw new Error("Could not convert certificate from PEM; PEM is encrypted.");var a=t.fromDer(o.body,s);return n.certificateFromAsn1(a,i)},n.certificateToPem=function(r,i){var s={type:"CERTIFICATE",body:t.toDer(n.certificateToAsn1(r)).getBytes()};return e.pem.encode(s,{maxline:i})},n.publicKeyFromPem=function(r){var i=e.pem.decode(r)[0];if(i.type!=="PUBLIC KEY"&&i.type!=="RSA PUBLIC KEY"){var s=new Error('Could not convert public key from PEM; PEM header type is not "PUBLIC KEY" or "RSA PUBLIC KEY".');throw s.headerType=i.type,s}if(i.procType&&i.procType.type==="ENCRYPTED")throw new Error("Could not convert public key from PEM; PEM is encrypted.");var o=t.fromDer(i.body);return n.publicKeyFromAsn1(o)},n.publicKeyToPem=function(r,i){var s={type:"PUBLIC KEY",body:t.toDer(n.publicKeyToAsn1(r)).getBytes()};return e.pem.encode(s,{maxline:i})},n.publicKeyToRSAPublicKeyPem=function(r,i){var s={type:"RSA PUBLIC KEY",body:t.toDer(n.publicKeyToRSAPublicKey(r)).getBytes()};return e.pem.encode(s,{maxline:i})},n.getPublicKeyFingerprint=function(r,i){i=i||{};var s=i.md||e.md.sha1.create(),o=i.type||"RSAPublicKey",u;switch(o){case"RSAPublicKey":u=t.toDer(n.publicKeyToRSAPublicKey(r)).getBytes();break;case"SubjectPublicKeyInfo":u=t.toDer(n.publicKeyToAsn1(r)).getBytes();break;default:throw new Error('Unknown fingerprint type "'+i.type+'".')}s.start(),s.update(u);var a=s.digest();if(i.encoding==="hex"){var f=a.toHex();return i.delimiter?f.match(/.{2}/g).join(i.delimiter):f}if(i.encoding==="binary")return a.getBytes();if(i.encoding)throw new Error('Unknown encoding "'+i.encoding+'".');return a},n.certificationRequestFromPem=function(r,i,s){var o=e.pem.decode(r)[0];if(o.type!=="CERTIFICATE REQUEST"){var u=new Error('Could not convert certification request from PEM; PEM header type is not "CERTIFICATE REQUEST".');throw u.headerType=o.type,u}if(o.procType&&o.procType.type==="ENCRYPTED")throw new Error("Could not convert certification request from PEM; PEM is encrypted.");var a=t.fromDer(o.body,s);return n.certificationRequestFromAsn1(a,i)},n.certificationRequestToPem=function(r,i){var s={type:"CERTIFICATE REQUEST",body:t.toDer(n.certificationRequestToAsn1(r)).getBytes()};return e.pem.encode(s,{maxline:i})},n.createCertificate=function(){var i={};return i.version=2,i.serialNumber="00",i.signatureOid=null,i.signature=null,i.siginfo={},i.siginfo.algorithmOid=null,i.validity={},i.validity.notBefore=new Date,i.validity.notAfter=new Date,i.issuer={},i.issuer.getField=function(e){return l(i.issuer,e)},i.issuer.addField=function(e){d([e]),i.issuer.attributes.push(e)},i.issuer.attributes=[],i.issuer.hash=null,i.subject={},i.subject.getField=function(e){return l(i.subject,e)},i.subject.addField=function(e){d([e]),i.subject.attributes.push(e)},i.subject.attributes=[],i.subject.hash=null,i.extensions=[],i.publicKey=null,i.md=null,i.setSubject=function(e,t){d(e),i.subject.attributes=e,delete i.subject.uniqueId,t&&(i.subject.uniqueId=t),i.subject.hash=null},i.setIssuer=function(e,t){d(e),i.issuer.attributes=e,delete i.issuer.uniqueId,t&&(i.issuer.uniqueId=t),i.issuer.hash=null},i.setExtensions=function(e){for(var t=0;t<e.length;++t)v(e[t],{cert:i});i.extensions=e},i.getExtension=function(e){typeof e=="string"&&(e={name:e});var t=null,n;for(var r=0;t===null&&r<i.extensions.length;++r)n=i.extensions[r],e.id&&n.id===e.id?t=n:e.name&&n.name===e.name&&(t=n);return t},i.sign=function(s,o){i.md=o||e.md.sha1.create();var u=r[i.md.algorithm+"WithRSAEncryption"];if(!u){var a=new Error("Could not compute certificate digest. Unknown message digest algorithm OID.");throw a.algorithm=i.md.algorithm,a}i.signatureOid=i.siginfo.algorithmOid=u,i.tbsCertificate=n.getTBSCertificate(i);var f=t.toDer(i.tbsCertificate);i.md.update(f.getBytes()),i.signature=s.sign(i.md)},i.verify=function(s){var o=!1;if(!i.issued(s)){var u=s.issuer,a=i.subject,f=new Error("The parent certificate did not issue the given child certificate; the child certificate's issuer does not match the parent's subject.");throw f.expectedIssuer=u.attributes,f.actualIssuer=a.attributes,f}var l=s.md;if(l===null){if(s.signatureOid in r){var c=r[s.signatureOid];switch(c){case"sha1WithRSAEncryption":l=e.md.sha1.create();break;case"md5WithRSAEncryption":l=e.md.md5.create();break;case"sha256WithRSAEncryption":l=e.md.sha256.create();break;case"RSASSA-PSS":l=e.md.sha256.create()}}if(l===null){var f=new Error("Could not compute certificate digest. Unknown signature OID.");throw f.signatureOid=s.signatureOid,f}var h=s.tbsCertificate||n.getTBSCertificate(s),p=t.toDer(h);l.update(p.getBytes())}if(l!==null){var d;switch(s.signatureOid){case r.sha1WithRSAEncryption:d=undefined;break;case r["RSASSA-PSS"]:var v,m;v=r[s.signatureParameters.mgf.hash.algorithmOid];if(v===undefined||e.md[v]===undefined){var f=new Error("Unsupported MGF hash function.");throw f.oid=s.signatureParameters.mgf.hash.algorithmOid,f.name=v,f}m=r[s.signatureParameters.mgf.algorithmOid];if(m===undefined||e.mgf[m]===undefined){var f=new Error("Unsupported MGF function.");throw f.oid=s.signatureParameters.mgf.algorithmOid,f.name=m,f}m=e.mgf[m].create(e.md[v].create()),v=r[s.signatureParameters.hash.algorithmOid];if(v===undefined||e.md[v]===undefined)throw{message:"Unsupported RSASSA-PSS hash function.",oid:s.signatureParameters.hash.algorithmOid,name:v};d=e.pss.create(e.md[v].create(),m,s.signatureParameters.saltLength)}o=i.publicKey.verify(l.digest().getBytes(),s.signature,d)}return o},i.isIssuer=function(e){var t=!1,n=i.issuer,r=e.subject;if(n.hash&&r.hash)t=n.hash===r.hash;else if(n.attributes.length===r.attributes.length){t=!0;var s,o;for(var u=0;t&&u<n.attributes.length;++u){s=n.attributes[u],o=r.attributes[u];if(s.type!==o.type||s.value!==o.value)t=!1}}return t},i.issued=function(e){return e.isIssuer(i)},i.generateSubjectKeyIdentifier=function(){return n.getPublicKeyFingerprint(i.publicKey,{type:"RSAPublicKey"})},i.verifySubjectKeyIdentifier=function(){var t=r.subjectKeyIdentifier;for(var n=0;n<i.extensions.length;++n){var s=i.extensions[n];if(s.id===t){var o=i.generateSubjectKeyIdentifier().getBytes();return e.util.hexToBytes(s.subjectKeyIdentifier)===o}}return!1},i},n.certificateFromAsn1=function(i,s){var u={},a=[];if(!t.validate(i,o,u,a)){var f=new Error("Cannot read X.509 certificate. ASN.1 object is not an X509v3 Certificate.");throw f.errors=a,f}if(typeof u.certSignature!="string"){var h="\0";for(var p=0;p<u.certSignature.length;++p)h+=t.toDer(u.certSignature[p]).getBytes();u.certSignature=h}var v=t.derToOid(u.publicKeyOid);if(v!==n.oids.rsaEncryption)throw new Error("Cannot read public key. OID is not RSA.");var m=n.createCertificate();m.version=u.certVersion?u.certVersion.charCodeAt(0):0;var g=e.util.createBuffer(u.certSerialNumber);m.serialNumber=g.toHex(),m.signatureOid=e.asn1.derToOid(u.certSignatureOid),m.signatureParameters=c(m.signatureOid,u.certSignatureParams,!0),m.siginfo.algorithmOid=e.asn1.derToOid(u.certinfoSignatureOid),m.siginfo.parameters=c(m.siginfo.algorithmOid,u.certinfoSignatureParams,!1);var y=e.util.createBuffer(u.certSignature);++y.read,m.signature=y.getBytes();var b=[];u.certValidity1UTCTime!==undefined&&b.push(t.utcTimeToDate(u.certValidity1UTCTime)),u.certValidity2GeneralizedTime!==undefined&&b.push(t.generalizedTimeToDate(u.certValidity2GeneralizedTime)),u.certValidity3UTCTime!==undefined&&b.push(t.utcTimeToDate(u.certValidity3UTCTime)),u.certValidity4GeneralizedTime!==undefined&&b.push(t.generalizedTimeToDate(u.certValidity4GeneralizedTime));if(b.length>2)throw new Error("Cannot read notBefore/notAfter validity times; more than two times were provided in the certificate.");if(b.length<2)throw new Error("Cannot read notBefore/notAfter validity times; they were not provided as either UTCTime or GeneralizedTime.");m.validity.notBefore=b[0],m.validity.notAfter=b[1],m.tbsCertificate=u.tbsCertificate;if(s){m.md=null;if(m.signatureOid in r){var v=r[m.signatureOid];switch(v){case"sha1WithRSAEncryption":m.md=e.md.sha1.create();break;case"md5WithRSAEncryption":m.md=e.md.md5.create();break;case"sha256WithRSAEncryption":m.md=e.md.sha256.create();break;case"RSASSA-PSS":m.md=e.md.sha256.create()}}if(m.md===null){var f=new Error("Could not compute certificate digest. Unknown signature OID.");throw f.signatureOid=m.signatureOid,f}var w=t.toDer(m.tbsCertificate);m.md.update(w.getBytes())}var E=e.md.sha1.create();m.issuer.getField=function(e){return l(m.issuer,e)},m.issuer.addField=function(e){d([e]),m.issuer.attributes.push(e)},m.issuer.attributes=n.RDNAttributesAsArray(u.certIssuer,E),u.certIssuerUniqueId&&(m.issuer.uniqueId=u.certIssuerUniqueId),m.issuer.hash=E.digest().toHex();var S=e.md.sha1.create();return m.subject.getField=function(e){return l(m.subject,e)},m.subject.addField=function(e){d([e]),m.subject.attributes.push(e)},m.subject.attributes=n.RDNAttributesAsArray(u.certSubject,S),u.certSubjectUniqueId&&(m.subject.uniqueId=u.certSubjectUniqueId),m.subject.hash=S.digest().toHex(),u.certExtensions?m.extensions=n.certificateExtensionsFromAsn1(u.certExtensions):m.extensions=[],m.publicKey=n.publicKeyFromAsn1(u.subjectPublicKeyInfo),m},n.certificateExtensionsFromAsn1=function(e){var t=[];for(var r=0;r<e.value.length;++r){var i=e.value[r];for(var s=0;s<i.value.length;++s)t.push(n.certificateExtensionFromAsn1(i.value[s]))}return t},n.certificateExtensionFromAsn1=function(n){var i={};i.id=t.derToOid(n.value[0].value),i.critical=!1,n.value[1].type===t.Type.BOOLEAN?(i.critical=n.value[1].value.charCodeAt(0)!==0,i.value=n.value[2].value):i.value=n.value[1].value;if(i.id in r){i.name=r[i.id];if(i.name==="keyUsage"){var s=t.fromDer(i.value),o=0,u=0;s.value.length>1&&(o=s.value.charCodeAt(1),u=s.value.length>2?s.value.charCodeAt(2):0),i.digitalSignature=(o&128)===128,i.nonRepudiation=(o&64)===64,i.keyEncipherment=(o&32)===32,i.dataEncipherment=(o&16)===16,i.keyAgreement=(o&8)===8,i.keyCertSign=(o&4)===4,i.cRLSign=(o&2)===2,i.encipherOnly=(o&1)===1,i.decipherOnly=(u&128)===128}else if(i.name==="basicConstraints"){var s=t.fromDer(i.value);s.value.length>0&&s.value[0].type===t.Type.BOOLEAN?i.cA=s.value[0].value.charCodeAt(0)!==0:i.cA=!1;var a=null;s.value.length>0&&s.value[0].type===t.Type.INTEGER?a=s.value[0].value:s.value.length>1&&(a=s.value[1].value),a!==null&&(i.pathLenConstraint=t.derToInteger(a))}else if(i.name==="extKeyUsage"){var s=t.fromDer(i.value);for(var f=0;f<s.value.length;++f){var l=t.derToOid(s.value[f].value);l in r?i[r[l]]=!0:i[l]=!0}}else if(i.name==="nsCertType"){var s=t.fromDer(i.value),o=0;s.value.length>1&&(o=s.value.charCodeAt(1)),i.client=(o&128)===128,i.server=(o&64)===64,i.email=(o&32)===32,i.objsign=(o&16)===16,i.reserved=(o&8)===8,i.sslCA=(o&4)===4,i.emailCA=(o&2)===2,i.objCA=(o&1)===1}else if(i.name==="subjectAltName"||i.name==="issuerAltName"){i.altNames=[];var c,s=t.fromDer(i.value);for(var h=0;h<s.value.length;++h){c=s.value[h];var p={type:c.type,value:c.value};i.altNames.push(p);switch(c.type){case 1:case 2:case 6:break;case 7:p.ip=e.util.bytesToIP(c.value);break;case 8:p.oid=t.derToOid(c.value);break;default:}}}else if(i.name==="subjectKeyIdentifier"){var s=t.fromDer(i.value);i.subjectKeyIdentifier=e.util.bytesToHex(s.value)}}return i},n.certificationRequestFromAsn1=function(i,s){var o={},u=[];if(!t.validate(i,f,o,u)){var a=new Error("Cannot read PKCS#10 certificate request. ASN.1 object is not a PKCS#10 CertificationRequest.");throw a.errors=u,a}if(typeof o.csrSignature!="string"){var h="\0";for(var p=0;p<o.csrSignature.length;++p)h+=t.toDer(o.csrSignature[p]).getBytes();o.csrSignature=h}var v=t.derToOid(o.publicKeyOid);if(v!==n.oids.rsaEncryption)throw new Error("Cannot read public key. OID is not RSA.");var m=n.createCertificationRequest();m.version=o.csrVersion?o.csrVersion.charCodeAt(0):0,m.signatureOid=e.asn1.derToOid(o.csrSignatureOid),m.signatureParameters=c(m.signatureOid,o.csrSignatureParams,!0),m.siginfo.algorithmOid=e.asn1.derToOid(o.csrSignatureOid),m.siginfo.parameters=c(m.siginfo.algorithmOid,o.csrSignatureParams,!1);var g=e.util.createBuffer(o.csrSignature);++g.read,m.signature=g.getBytes(),m.certificationRequestInfo=o.certificationRequestInfo;if(s){m.md=null;if(m.signatureOid in r){var v=r[m.signatureOid];switch(v){case"sha1WithRSAEncryption":m.md=e.md.sha1.create();break;case"md5WithRSAEncryption":m.md=e.md.md5.create();break;case"sha256WithRSAEncryption":m.md=e.md.sha256.create();break;case"RSASSA-PSS":m.md=e.md.sha256.create()}}if(m.md===null){var a=new Error("Could not compute certification request digest. Unknown signature OID.");throw a.signatureOid=m.signatureOid,a}var y=t.toDer(m.certificationRequestInfo);m.md.update(y.getBytes())}var b=e.md.sha1.create();return m.subject.getField=function(e){return l(m.subject,e)},m.subject.addField=function(e){d([e]),m.subject.attributes.push(e)},m.subject.attributes=n.RDNAttributesAsArray(o.certificationRequestInfoSubject,b),m.subject.hash=b.digest().toHex(),m.publicKey=n.publicKeyFromAsn1(o.subjectPublicKeyInfo),m.getAttribute=function(e){return l(m,e)},m.addAttribute=function(e){d([e]),m.attributes.push(e)},m.attributes=n.CRIAttributesAsArray(o.certificationRequestInfoAttributes||[]),m},n.createCertificationRequest=function(){var i={};return i.version=0,i.signatureOid=null,i.signature=null,i.siginfo={},i.siginfo.algorithmOid=null,i.subject={},i.subject.getField=function(e){return l(i.subject,e)},i.subject.addField=function(e){d([e]),i.subject.attributes.push(e)},i.subject.attributes=[],i.subject.hash=null,i.publicKey=null,i.attributes=[],i.getAttribute=function(e){return l(i,e)},i.addAttribute=function(e){d([e]),i.attributes.push(e)},i.md=null,i.setSubject=function(e){d(e),i.subject.attributes=e,i.subject.hash=null},i.setAttributes=function(e){d(e),i.attributes=e},i.sign=function(s,o){i.md=o||e.md.sha1.create();var u=r[i.md.algorithm+"WithRSAEncryption"];if(!u){var a=new Error("Could not compute certification request digest. Unknown message digest algorithm OID.");throw a.algorithm=i.md.algorithm,a}i.signatureOid=i.siginfo.algorithmOid=u,i.certificationRequestInfo=n.getCertificationRequestInfo(i);var f=t.toDer(i.certificationRequestInfo);i.md.update(f.getBytes()),i.signature=s.sign(i.md)},i.verify=function(){var s=!1,o=i.md;if(o===null){if(i.signatureOid in r){var u=r[i.signatureOid];switch(u){case"sha1WithRSAEncryption":o=e.md.sha1.create();break;case"md5WithRSAEncryption":o=e.md.md5.create();break;case"sha256WithRSAEncryption":o=e.md.sha256.create();break;case"RSASSA-PSS":o=e.md.sha256.create()}}if(o===null){var a=new Error("Could not compute certification request digest. Unknown signature OID.");throw a.signatureOid=i.signatureOid,a}var f=i.certificationRequestInfo||n.getCertificationRequestInfo(i),l=t.toDer(f);o.update(l.getBytes())}if(o!==null){var c;switch(i.signatureOid){case r.sha1WithRSAEncryption:break;case r["RSASSA-PSS"]:var h,p;h=r[i.signatureParameters.mgf.hash.algorithmOid];if(h===undefined||e.md[h]===undefined){var a=new Error("Unsupported MGF hash function.");throw a.oid=i.signatureParameters.mgf.hash.algorithmOid,a.name=h,a}p=r[i.signatureParameters.mgf.algorithmOid];if(p===undefined||e.mgf[p]===undefined){var a=new Error("Unsupported MGF function.");throw a.oid=i.signatureParameters.mgf.algorithmOid,a.name=p,a}p=e.mgf[p].create(e.md[h].create()),h=r[i.signatureParameters.hash.algorithmOid];if(h===undefined||e.md[h]===undefined){var a=new Error("Unsupported RSASSA-PSS hash function.");throw a.oid=i.signatureParameters.hash.algorithmOid,a.name=h,a}c=e.pss.create(e.md[h].create(),p,i.signatureParameters.saltLength)}s=i.publicKey.verify(o.digest().getBytes(),i.signature,c)}return s},i},n.getTBSCertificate=function(r){var i=t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.CONTEXT_SPECIFIC,0,!0,[t.create(t.Class.UNIVERSAL,t.Type.INTEGER,!1,t.integerToDer(r.version).getBytes())]),t.create(t.Class.UNIVERSAL,t.Type.INTEGER,!1,e.util.hexToBytes(r.serialNumber)),t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(r.siginfo.algorithmOid).getBytes()),m(r.siginfo.algorithmOid,r.siginfo.parameters)]),h(r.issuer),t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.UTCTIME,!1,t.dateToUtcTime(r.validity.notBefore)),t.create(t.Class.UNIVERSAL,t.Type.UTCTIME,!1,t.dateToUtcTime(r.validity.notAfter))]),h(r.subject),n.publicKeyToAsn1(r.publicKey)]);return r.issuer.uniqueId&&i.value.push(t.create(t.Class.CONTEXT_SPECIFIC,1,!0,[t.create(t.Class.UNIVERSAL,t.Type.BITSTRING,!1,String.fromCharCode(0)+r.issuer.uniqueId)])),r.subject.uniqueId&&i.value.push(t.create(t.Class.CONTEXT_SPECIFIC,2,!0,[t.create(t.Class.UNIVERSAL,t.Type.BITSTRING,!1,String.fromCharCode(0)+r.subject.uniqueId)])),r.extensions.length>0&&i.value.push(n.certificateExtensionsToAsn1(r.extensions)),i},n.getCertificationRequestInfo=function(e){var r=t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.INTEGER,!1,t.integerToDer(e.version).getBytes()),h(e.subject),n.publicKeyToAsn1(e.publicKey),g(e)]);return r},n.distinguishedNameToAsn1=function(e){return h(e)},n.certificateToAsn1=function(e){var r=e.tbsCertificate||n.getTBSCertificate(e);return t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[r,t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(e.signatureOid).getBytes()),m(e.signatureOid,e.signatureParameters)]),t.create(t.Class.UNIVERSAL,t.Type.BITSTRING,!1,String.fromCharCode(0)+e.signature)])},n.certificateExtensionsToAsn1=function(e){var r=t.create(t.Class.CONTEXT_SPECIFIC,3,!0,[]),i=t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[]);r.value.push(i);for(var s=0;s<e.length;++s)i.value.push(n.certificateExtensionToAsn1(e[s]));return r},n.certificateExtensionToAsn1=function(e){var n=t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[]);n.value.push(t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(e.id).getBytes())),e.critical&&n.value.push(t.create(t.Class.UNIVERSAL,t.Type.BOOLEAN,!1,String.fromCharCode(255)));var r=e.value;return typeof e.value!="string"&&(r=t.toDer(r).getBytes()),n.value.push(t.create(t.Class.UNIVERSAL,t.Type.OCTETSTRING,!1,r)),n},n.certificationRequestToAsn1=function(e){var r=e.certificationRequestInfo||n.getCertificationRequestInfo(e);return t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[r,t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(e.signatureOid).getBytes()),m(e.signatureOid,e.signatureParameters)]),t.create(t.Class.UNIVERSAL,t.Type.BITSTRING,!1,String.fromCharCode(0)+e.signature)])},n.createCaStore=function(r){function s(t){if(!t.hash){var r=e.md.sha1.create();t.attributes=n.RDNAttributesAsArray(h(t),r),t.hash=r.digest().toHex()}return i.certs[t.hash]||null}var i={certs:{}};i.getIssuer=function(e){var t=s(e.issuer);return t},i.addCertificate=function(t){typeof t=="string"&&(t=e.pki.certificateFromPem(t));if(!t.subject.hash){var r=e.md.sha1.create();t.subject.attributes=n.RDNAttributesAsArray(h(t.subject),r),t.subject.hash=r.digest().toHex()}if(t.subject.hash in i.certs){var s=i.certs[t.subject.hash];e.util.isArray(s)||(s=[s]),s.push(t)}else i.certs[t.subject.hash]=t},i.hasCertificate=function(r){var i=s(r.subject);if(!i)return!1;e.util.isArray(i)||(i=[i]);var o=t.toDer(n.certificateToAsn1(r)).getBytes();for(var u=0;u<i.length;++u){var a=t.toDer(n.certificateToAsn1(i[u])).getBytes();if(o===a)return!0}return!1};if(r)for(var o=0;o<r.length;++o){var u=r[o];i.addCertificate(u)}return i},n.certificateError={bad_certificate:"forge.pki.BadCertificate",unsupported_certificate:"forge.pki.UnsupportedCertificate",certificate_revoked:"forge.pki.CertificateRevoked",certificate_expired:"forge.pki.CertificateExpired",certificate_unknown:"forge.pki.CertificateUnknown",unknown_ca:"forge.pki.UnknownCertificateAuthority"},n.verifyCertificateChain=function(t,r,i){r=r.slice(0);var s=r.slice(0),o=new Date,u=!0,a=null,f=0;do{var l=r.shift(),c=null,h=!1;if(o<l.validity.notBefore||o>l.validity.notAfter)a={message:"Certificate is not valid yet or has expired.",error:n.certificateError.certificate_expired,notBefore:l.validity.notBefore,notAfter:l.validity.notAfter,now:o};if(a===null){c=r[0]||t.getIssuer(l),c===null&&l.isIssuer(l)&&(h=!0,c=l);if(c){var p=c;e.util.isArray(p)||(p=[p]);var d=!1;while(!d&&p.length>0){c=p.shift();try{d=c.verify(l)}catch(v){}}d||(a={message:"Certificate signature is invalid.",error:n.certificateError.bad_certificate})}a===null&&(!c||h)&&!t.hasCertificate(l)&&(a={message:"Certificate is not trusted.",error:n.certificateError.unknown_ca})}a===null&&c&&!l.isIssuer(c)&&(a={message:"Certificate issuer is invalid.",error:n.certificateError.bad_certificate});if(a===null){var m={keyUsage:!0,basicConstraints:!0};for(var g=0;a===null&&g<l.extensions.length;++g){var y=l.extensions[g];y.critical&&!(y.name in m)&&(a={message:"Certificate has an unsupported critical extension.",error:n.certificateError.unsupported_certificate})}}if(a===null&&(!u||r.length===0&&(!c||h))){var b=l.getExtension("basicConstraints"),w=l.getExtension("keyUsage");w!==null&&(!w.keyCertSign||b===null)&&(a={message:"Certificate keyUsage or basicConstraints conflict or indicate that the certificate is not a CA. If the certificate is the only one in the chain or isn't the first then the certificate must be a valid CA.",error:n.certificateError.bad_certificate}),a===null&&b!==null&&!b.cA&&(a={message:"Certificate basicConstraints indicates the certificate is not a CA.",error:n.certificateError.bad_certificate});if(a===null&&w!==null&&"pathLenConstraint"in b){var E=f-1;E>b.pathLenConstraint&&(a={message:"Certificate basicConstraints pathLenConstraint violated.",error:n.certificateError.bad_certificate})}}var S=a===null?!0:a.error,x=i?i(S,f,s):S;if(x!==!0){S===!0&&(a={message:"The application rejected the certificate.",error:n.certificateError.bad_certificate});if(x||x===0)typeof x=="object"&&!e.util.isArray(x)?(x.message&&(a.message=x.message),x.error&&(a.error=x.error)):typeof x=="string"&&(a.error=x);throw a}a=null,u=!1,++f}while(r.length>0);return!0}}var r="x509";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n.pki}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/x509",["require","module","./aes","./asn1","./des","./md","./mgf","./oids","./pem","./pss","./rsa","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function f(e,t,n,r){var i=[];for(var s=0;s<e.length;s++)for(var o=0;o<e[s].safeBags.length;o++){var u=e[s].safeBags[o];if(r!==undefined&&u.type!==r)continue;if(t===null){i.push(u);continue}u.attributes[t]!==undefined&&u.attributes[t].indexOf(n)>=0&&i.push(u)}return i}function l(t){if(t.composed||t.constructed){var n=e.util.createBuffer();for(var r=0;r<t.value.length;++r)n.putBytes(t.value[r].value);t.composed=t.constructed=!1,t.value=n.getBytes()}return t}function c(e,r,s,o){r=t.fromDer(r,s);if(r.tagClass!==t.Class.UNIVERSAL||r.type!==t.Type.SEQUENCE||r.constructed!==!0)throw new Error("PKCS#12 AuthenticatedSafe expected to be a SEQUENCE OF ContentInfo");for(var u=0;u<r.value.length;u++){var a=r.value[u],f={},c=[];if(!t.validate(a,i,f,c)){var d=new Error("Cannot read ContentInfo.");throw d.errors=c,d}var v={encrypted:!1},m=null,g=f.content.value[0];switch(t.derToOid(f.contentType)){case n.oids.data:if(g.tagClass!==t.Class.UNIVERSAL||g.type!==t.Type.OCTETSTRING)throw new Error("PKCS#12 SafeContents Data is not an OCTET STRING.");m=l(g).value;break;case n.oids.encryptedData:m=h(g,o),v.encrypted=!0;break;default:var d=new Error("Unsupported PKCS#12 contentType.");throw d.contentType=t.derToOid(f.contentType),d}v.safeBags=p(m,s,o),e.safeContents.push(v)}}function h(r,i){var s={},o=[];if(!t.validate(r,e.pkcs7.asn1.encryptedDataValidator,s,o)){var u=new Error("Cannot read EncryptedContentInfo.");throw u.errors=o,u}var a=t.derToOid(s.contentType);if(a!==n.oids.data){var u=new Error("PKCS#12 EncryptedContentInfo ContentType is not Data.");throw u.oid=a,u}a=t.derToOid(s.encAlgorithm);var f=n.pbe.getCipher(a,s.encParameter,i),c=l(s.encryptedContentAsn1),h=e.util.createBuffer(c.value);f.update(h);if(!f.finish())throw new Error("Failed to decrypt PKCS#12 SafeContents.");return f.output.getBytes()}function p(e,r,i){if(!r&&e.length===0)return[];e=t.fromDer(e,r);if(e.tagClass!==t.Class.UNIVERSAL||e.type!==t.Type.SEQUENCE||e.constructed!==!0)throw new Error("PKCS#12 SafeContents expected to be a SEQUENCE OF SafeBag.");var s=[];for(var u=0;u<e.value.length;u++){var f=e.value[u],l={},c=[];if(!t.validate(f,o,l,c)){var h=new Error("Cannot read SafeBag.");throw h.errors=c,h}var p={type:t.derToOid(l.bagId),attributes:d(l.bagAttributes)};s.push(p);var v,m,g=l.bagValue.value[0];switch(p.type){case n.oids.pkcs8ShroudedKeyBag:g=n.decryptPrivateKeyInfo(g,i);if(g===null)throw new Error("Unable to decrypt PKCS#8 ShroudedKeyBag, wrong password?");case n.oids.keyBag:try{p.key=n.privateKeyFromAsn1(g)}catch(y){p.key=null,p.asn1=g}continue;case n.oids.certBag:v=a,m=function(){if(t.derToOid(l.certId)!==n.oids.x509Certificate){var e=new Error("Unsupported certificate type, only X.509 supported.");throw e.oid=t.derToOid(l.certId),e}var i=t.fromDer(l.cert,r);try{p.cert=n.certificateFromAsn1(i,!0)}catch(s){p.cert=null,p.asn1=i}};break;default:var h=new Error("Unsupported PKCS#12 SafeBag type.");throw h.oid=p.type,h}if(v!==undefined&&!t.validate(g,v,l,c)){var h=new Error("Cannot read PKCS#12 "+v.name);throw h.errors=c,h}m()}return s}function d(e){var r={};if(e!==undefined)for(var i=0;i<e.length;++i){var s={},o=[];if(!t.validate(e[i],u,s,o)){var a=new Error("Cannot read PKCS#12 BagAttribute.");throw a.errors=o,a}var f=t.derToOid(s.oid);if(n.oids[f]===undefined)continue;r[n.oids[f]]=[];for(var l=0;l<s.values.length;++l)r[n.oids[f]].push(s.values[l].value)}return r}var t=e.asn1,n=e.pki,r=e.pkcs12=e.pkcs12||{},i={name:"ContentInfo",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"ContentInfo.contentType",tagClass:t.Class.UNIVERSAL,type:t.Type.OID,constructed:!1,capture:"contentType"},{name:"ContentInfo.content",tagClass:t.Class.CONTEXT_SPECIFIC,constructed:!0,captureAsn1:"content"}]},s={name:"PFX",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"PFX.version",tagClass:t.Class.UNIVERSAL,type:t.Type.INTEGER,constructed:!1,capture:"version"},i,{name:"PFX.macData",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,optional:!0,captureAsn1:"mac",value:[{name:"PFX.macData.mac",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"PFX.macData.mac.digestAlgorithm",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"PFX.macData.mac.digestAlgorithm.algorithm",tagClass:t.Class.UNIVERSAL,type:t.Type.OID,constructed:!1,capture:"macAlgorithm"},{name:"PFX.macData.mac.digestAlgorithm.parameters",tagClass:t.Class.UNIVERSAL,captureAsn1:"macAlgorithmParameters"}]},{name:"PFX.macData.mac.digest",tagClass:t.Class.UNIVERSAL,type:t.Type.OCTETSTRING,constructed:!1,capture:"macDigest"}]},{name:"PFX.macData.macSalt",tagClass:t.Class.UNIVERSAL,type:t.Type.OCTETSTRING,constructed:!1,capture:"macSalt"},{name:"PFX.macData.iterations",tagClass:t.Class.UNIVERSAL,type:t.Type.INTEGER,constructed:!1,optional:!0,capture:"macIterations"}]}]},o={name:"SafeBag",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"SafeBag.bagId",tagClass:t.Class.UNIVERSAL,type:t.Type.OID,constructed:!1,capture:"bagId"},{name:"SafeBag.bagValue",tagClass:t.Class.CONTEXT_SPECIFIC,constructed:!0,captureAsn1:"bagValue"},{name:"SafeBag.bagAttributes",tagClass:t.Class.UNIVERSAL,type:t.Type.SET,constructed:!0,optional:!0,capture:"bagAttributes"}]},u={name:"Attribute",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"Attribute.attrId",tagClass:t.Class.UNIVERSAL,type:t.Type.OID,constructed:!1,capture:"oid"},{name:"Attribute.attrValues",tagClass:t.Class.UNIVERSAL,type:t.Type.SET,constructed:!0,capture:"values"}]},a={name:"CertBag",tagClass:t.Class.UNIVERSAL,type:t.Type.SEQUENCE,constructed:!0,value:[{name:"CertBag.certId",tagClass:t.Class.UNIVERSAL,type:t.Type.OID,constructed:!1,capture:"certId"},{name:"CertBag.certValue",tagClass:t.Class.CONTEXT_SPECIFIC,constructed:!0,value:[{name:"CertBag.certValue[0]",tagClass:t.Class.UNIVERSAL,type:t.Class.OCTETSTRING,constructed:!1,capture:"cert"}]}]};r.pkcs12FromAsn1=function(i,o,u){typeof o=="string"?(u=o,o=!0):o===undefined&&(o=!0);var a={},h=[];if(!t.validate(i,s,a,h)){var p=new Error("Cannot read PKCS#12 PFX. ASN.1 object is not an PKCS#12 PFX.");throw p.errors=p,p}var d={version:a.version.charCodeAt(0),safeContents:[],getBags:function(t){var n={},r;return"localKeyId"in t?r=t.localKeyId:"localKeyIdHex"in t&&(r=e.util.hexToBytes(t.localKeyIdHex)),r===undefined&&!("friendlyName"in t)&&"bagType"in t&&(n[t.bagType]=f(d.safeContents,null,null,t.bagType)),r!==undefined&&(n.localKeyId=f(d.safeContents,"localKeyId",r,t.bagType)),"friendlyName"in t&&(n.friendlyName=f(d.safeContents,"friendlyName",t.friendlyName,t.bagType)),n},getBagsByFriendlyName:function(e,t){return f(d.safeContents,"friendlyName",e,t)},getBagsByLocalKeyId:function(e,t){return f(d.safeContents,"localKeyId",e,t)}};if(a.version.charCodeAt(0)!==3){var p=new Error("PKCS#12 PFX of version other than 3 not supported.");throw p.version=a.version.charCodeAt(0),p}if(t.derToOid(a.contentType)!==n.oids.data){var p=new Error("Only PKCS#12 PFX in password integrity mode supported.");throw p.oid=t.derToOid(a.contentType),p}var v=a.content.value[0];if(v.tagClass!==t.Class.UNIVERSAL||v.type!==t.Type.OCTETSTRING)throw new Error("PKCS#12 authSafe content data is not an OCTET STRING.");v=l(v);if(a.mac){var m=null,g=0,y=t.derToOid(a.macAlgorithm);switch(y){case n.oids.sha1:m=e.md.sha1.create(),g=20;break;case n.oids.sha256:m=e.md.sha256.create(),g=32;break;case n.oids.sha384:m=e.md.sha384.create(),g=48;break;case n.oids.sha512:m=e.md.sha512.create(),g=64;break;case n.oids.md5:m=e.md.md5.create(),g=16}if(m===null)throw new Error("PKCS#12 uses unsupported MAC algorithm: "+y);var b=new e.util.ByteBuffer(a.macSalt),w="macIterations"in a?parseInt(e.util.bytesToHex(a.macIterations),16):1,E=r.generateKey(u,b,3,w,g,m),S=e.hmac.create();S.start(m,E),S.update(v.value);var x=S.getMac();if(x.getBytes()!==a.macDigest)throw new Error("PKCS#12 MAC could not be verified. Invalid password?")}return c(d,v.value,o,u),d},r.toPkcs12Asn1=function(i,s,o,u){u=u||{},u.saltSize=u.saltSize||8,u.count=u.count||2048,u.algorithm=u.algorithm||u.encAlgorithm||"aes128","useMac"in u||(u.useMac=!0),"localKeyId"in u||(u.localKeyId=null),"generateLocalKeyId"in u||(u.generateLocalKeyId=!0);var a=u.localKeyId,f;if(a!==null)a=e.util.hexToBytes(a);else if(u.generateLocalKeyId)if(s){var l=e.util.isArray(s)?s[0]:s;typeof l=="string"&&(l=n.certificateFromPem(l));var c=e.md.sha1.create();c.update(t.toDer(n.certificateToAsn1(l)).getBytes()),a=c.digest().getBytes()}else a=e.random.getBytes(20);var h=[];a!==null&&h.push(t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(n.oids.localKeyId).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.SET,!0,[t.create(t.Class.UNIVERSAL,t.Type.OCTETSTRING,!1,a)])])),"friendlyName"in u&&h.push(t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(n.oids.friendlyName).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.SET,!0,[t.create(t.Class.UNIVERSAL,t.Type.BMPSTRING,!1,u.friendlyName)])])),h.length>0&&(f=t.create(t.Class.UNIVERSAL,t.Type.SET,!0,h));var p=[],d=[];s!==null&&(e.util.isArray(s)?d=s:d=[s]);var v=[];for(var m=0;m<d.length;++m){s=d[m],typeof s=="string"&&(s=n.certificateFromPem(s));var g=m===0?f:undefined,y=n.certificateToAsn1(s),b=t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(n.oids.certBag).getBytes()),t.create(t.Class.CONTEXT_SPECIFIC,0,!0,[t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(n.oids.x509Certificate).getBytes()),t.create(t.Class.CONTEXT_SPECIFIC,0,!0,[t.create(t.Class.UNIVERSAL,t.Type.OCTETSTRING,!1,t.toDer(y).getBytes())])])]),g]);v.push(b)}if(v.length>0){var w=t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,v),E=t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(n.oids.data).getBytes()),t.create(t.Class.CONTEXT_SPECIFIC,0,!0,[t.create(t.Class.UNIVERSAL,t.Type.OCTETSTRING,!1,t.toDer(w).getBytes())])]);p.push(E)}var S=null;if(i!==null){var x=n.wrapRsaPrivateKey(n.privateKeyToAsn1(i));o===null?S=t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(n.oids.keyBag).getBytes()),t.create(t.Class.CONTEXT_SPECIFIC,0,!0,[x]),f]):S=t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(n.oids.pkcs8ShroudedKeyBag).getBytes()),t.create(t.Class.CONTEXT_SPECIFIC,0,!0,[n.encryptPrivateKeyInfo(x,o,u)]),f]);var T=t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[S]),N=t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(n.oids.data).getBytes()),t.create(t.Class.CONTEXT_SPECIFIC,0,!0,[t.create(t.Class.UNIVERSAL,t.Type.OCTETSTRING,!1,t.toDer(T).getBytes())])]);p.push(N)}var C=t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,p),k;if(u.useMac){var c=e.md.sha1.create(),L=new e.util.ByteBuffer(e.random.getBytes(u.saltSize)),A=u.count,i=r.generateKey(o,L,3,A,20),O=e.hmac.create();O.start(c,i),O.update(t.toDer(C).getBytes());var M=O.getMac();k=t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(n.oids.sha1).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.NULL,!1,"")]),t.create(t.Class.UNIVERSAL,t.Type.OCTETSTRING,!1,M.getBytes())]),t.create(t.Class.UNIVERSAL,t.Type.OCTETSTRING,!1,L.getBytes()),t.create(t.Class.UNIVERSAL,t.Type.INTEGER,!1,t.integerToDer(A).getBytes())])}return t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.INTEGER,!1,t.integerToDer(3).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(n.oids.data).getBytes()),t.create(t.Class.CONTEXT_SPECIFIC,0,!0,[t.create(t.Class.UNIVERSAL,t.Type.OCTETSTRING,!1,t.toDer(C).getBytes())])]),k])},r.generateKey=e.pbe.generatePkcs12Key}var r="pkcs12";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/pkcs12",["require","module","./asn1","./hmac","./oids","./pkcs7asn1","./pbe","./random","./rsa","./sha1","./util","./x509"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){var t=e.asn1,n=e.pki=e.pki||{};n.pemToDer=function(t){var n=e.pem.decode(t)[0];if(n.procType&&n.procType.type==="ENCRYPTED")throw new Error("Could not convert PEM to DER; PEM is encrypted.");return e.util.createBuffer(n.body)},n.privateKeyFromPem=function(r){var i=e.pem.decode(r)[0];if(i.type!=="PRIVATE KEY"&&i.type!=="RSA PRIVATE KEY"){var s=new Error('Could not convert private key from PEM; PEM header type is not "PRIVATE KEY" or "RSA PRIVATE KEY".');throw s.headerType=i.type,s}if(i.procType&&i.procType.type==="ENCRYPTED")throw new Error("Could not convert private key from PEM; PEM is encrypted.");var o=t.fromDer(i.body);return n.privateKeyFromAsn1(o)},n.privateKeyToPem=function(r,i){var s={type:"RSA PRIVATE KEY",body:t.toDer(n.privateKeyToAsn1(r)).getBytes()};return e.pem.encode(s,{maxline:i})},n.privateKeyInfoToPem=function(n,r){var i={type:"PRIVATE KEY",body:t.toDer(n).getBytes()};return e.pem.encode(i,{maxline:r})}}var r="pki";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/pki",["require","module","./asn1","./oids","./pbe","./pem","./pbkdf2","./pkcs12","./pss","./rsa","./util","./x509"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){var t=function(t,n,r,i){var s=e.util.createBuffer(),o=t.length>>1,u=o+(t.length&1),a=t.substr(0,u),f=t.substr(o,u),l=e.util.createBuffer(),c=e.hmac.create();r=n+r;var h=Math.ceil(i/16),p=Math.ceil(i/20);c.start("MD5",a);var d=e.util.createBuffer();l.putBytes(r);for(var v=0;v<h;++v)c.start(null,null),c.update(l.getBytes()),l.putBuffer(c.digest()),c.start(null,null),c.update(l.bytes()+r),d.putBuffer(c.digest());c.start("SHA1",f);var m=e.util.createBuffer();l.clear(),l.putBytes(r);for(var v=0;v<p;++v)c.start(null,null),c.update(l.getBytes()),l.putBuffer(c.digest()),c.start(null,null),c.update(l.bytes()+r),m.putBuffer(c.digest());return s.putBytes(e.util.xorBytes(d.getBytes(),m.getBytes(),i)),s},n=function(e,t,n,r){},r=function(t,n,r){var i=e.hmac.create();i.start("SHA1",t);var s=e.util.createBuffer();return s.putInt32(n[0]),s.putInt32(n[1]),s.putByte(r.type),s.putByte(r.version.major),s.putByte(r.version.minor),s.putInt16(r.length),s.putBytes(r.fragment.bytes()),i.update(s.getBytes()),i.digest().getBytes()},i=function(t,n,r){var i=!1;try{var s=t.deflate(n.fragment.getBytes());n.fragment=e.util.createBuffer(s),n.length=s.length,i=!0}catch(o){}return i},s=function(t,n,r){var i=!1;try{var s=t.inflate(n.fragment.getBytes());n.fragment=e.util.createBuffer(s),n.length=s.length,i=!0}catch(o){}return i},o=function(t,n){var r=0;switch(n){case 1:r=t.getByte();break;case 2:r=t.getInt16();break;case 3:r=t.getInt24();break;case 4:r=t.getInt32()}return e.util.createBuffer(t.getBytes(r))},u=function(e,t,n){e.putInt(n.length(),t<<3),e.putBuffer(n)},a={};a.Versions={TLS_1_0:{major:3,minor:1},TLS_1_1:{major:3,minor:2},TLS_1_2:{major:3,minor:3}},a.SupportedVersions=[a.Versions.TLS_1_1,a.Versions.TLS_1_0],a.Version=a.SupportedVersions[0],a.MaxFragment=15360,a.ConnectionEnd={server:0,client:1},a.PRFAlgorithm={tls_prf_sha256:0},a.BulkCipherAlgorithm={none:null,rc4:0,des3:1,aes:2},a.CipherType={stream:0,block:1,aead:2},a.MACAlgorithm={none:null,hmac_md5:0,hmac_sha1:1,hmac_sha256:2,hmac_sha384:3,hmac_sha512:4},a.CompressionMethod={none:0,deflate:1},a.ContentType={change_cipher_spec:20,alert:21,handshake:22,application_data:23,heartbeat:24},a.HandshakeType={hello_request:0,client_hello:1,server_hello:2,certificate:11,server_key_exchange:12,certificate_request:13,server_hello_done:14,certificate_verify:15,client_key_exchange:16,finished:20},a.Alert={},a.Alert.Level={warning:1,fatal:2},a.Alert.Description={close_notify:0,unexpected_message:10,bad_record_mac:20,decryption_failed:21,record_overflow:22,decompression_failure:30,handshake_failure:40,bad_certificate:42,unsupported_certificate:43,certificate_revoked:44,certificate_expired:45,certificate_unknown:46,illegal_parameter:47,unknown_ca:48,access_denied:49,decode_error:50,decrypt_error:51,export_restriction:60,protocol_version:70,insufficient_security:71,internal_error:80,user_canceled:90,no_renegotiation:100},a.HeartbeatMessageType={heartbeat_request:1,heartbeat_response:2},a.CipherSuites={},a.getCipherSuite=function(e){var t=null;for(var n in a.CipherSuites){var r=a.CipherSuites[n];if(r.id[0]===e.charCodeAt(0)&&r.id[1]===e.charCodeAt(1)){t=r;break}}return t},a.handleUnexpected=function(e,t){var n=!e.open&&e.entity===a.ConnectionEnd.client;n||e.error(e,{message:"Unexpected message. Received TLS record out of order.",send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.unexpected_message}})},a.handleHelloRequest=function(e,t,n){!e.handshaking&&e.handshakes>0&&(a.queue(e,a.createAlert(e,{level:a.Alert.Level.warning,description:a.Alert.Description.no_renegotiation})),a.flush(e)),e.process()},a.parseHelloMessage=function(t,n,r){var i=null,s=t.entity===a.ConnectionEnd.client;if(r<38)t.error(t,{message:s?"Invalid ServerHello message. Message too short.":"Invalid ClientHello message. Message too short.",send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.illegal_parameter}});else{var u=n.fragment,f=u.length();i={version:{major:u.getByte(),minor:u.getByte()},random:e.util.createBuffer(u.getBytes(32)),session_id:o(u,1),extensions:[]},s?(i.cipher_suite=u.getBytes(2),i.compression_method=u.getByte()):(i.cipher_suites=o(u,2),i.compression_methods=o(u,1)),f=r-(f-u.length());if(f>0){var l=o(u,2);while(l.length()>0)i.extensions.push({type:[l.getByte(),l.getByte()],data:o(l,2)});if(!s)for(var c=0;c<i.extensions.length;++c){var h=i.extensions[c];if(h.type[0]===0&&h.type[1]===0){var p=o(h.data,2);while(p.length()>0){var d=p.getByte();if(d!==0)break;t.session.extensions.server_name.serverNameList.push(o(p,2).getBytes())}}}}if(t.session.version)if(i.version.major!==t.session.version.major||i.version.minor!==t.session.version.minor)return t.error(t,{message:"TLS version change is disallowed during renegotiation.",send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.protocol_version}});if(s)t.session.cipherSuite=a.getCipherSuite(i.cipher_suite);else{var v=e.util.createBuffer(i.cipher_suites.bytes());while(v.length()>0){t.session.cipherSuite=a.getCipherSuite(v.getBytes(2));if(t.session.cipherSuite!==null)break}}if(t.session.cipherSuite===null)return t.error(t,{message:"No cipher suites in common.",send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.handshake_failure},cipherSuite:e.util.bytesToHex(i.cipher_suite)});s?t.session.compressionMethod=i.compression_method:t.session.compressionMethod=a.CompressionMethod.none}return i},a.createSecurityParameters=function(e,t){var n=e.entity===a.ConnectionEnd.client,r=t.random.bytes(),i=n?e.session.sp.client_random:r,s=n?r:a.createRandom().getBytes();e.session.sp={entity:e.entity,prf_algorithm:a.PRFAlgorithm.tls_prf_sha256,bulk_cipher_algorithm:null,cipher_type:null,enc_key_length:null,block_length:null,fixed_iv_length:null,record_iv_length:null,mac_algorithm:null,mac_length:null,mac_key_length:null,compression_algorithm:e.session.compressionMethod,pre_master_secret:null,master_secret:null,client_random:i,server_random:s}},a.handleServerHello=function(e,t,n){var r=a.parseHelloMessage(e,t,n);if(e.fail)return;if(!(r.version.minor<=e.version.minor))return e.error(e,{message:"Incompatible TLS version.",send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.protocol_version}});e.version.minor=r.version.minor,e.session.version=e.version;var i=r.session_id.bytes();i.length>0&&i===e.session.id?(e.expect=d,e.session.resuming=!0,e.session.sp.server_random=r.random.bytes()):(e.expect=l,e.session.resuming=!1,a.createSecurityParameters(e,r)),e.session.id=i,e.process()},a.handleClientHello=function(t,n,r){var i=a.parseHelloMessage(t,n,r);if(t.fail)return;var s=i.session_id.bytes(),o=null;if(t.sessionCache){o=t.sessionCache.getSession(s);if(o===null)s="";else if(o.version.major!==i.version.major||o.version.minor>i.version.minor)o=null,s=""}s.length===0&&(s=e.random.getBytes(32)),t.session.id=s,t.session.clientHelloVersion=i.version,t.session.sp={};if(o)t.version=t.session.version=o.version,t.session.sp=o.sp;else{var u;for(var f=1;f<a.SupportedVersions.length;++f){u=a.SupportedVersions[f];if(u.minor<=i.version.minor)break}t.version={major:u.major,minor:u.minor},t.session.version=t.version}o!==null?(t.expect=S,t.session.resuming=!0,t.session.sp.client_random=i.random.bytes()):(t.expect=t.verifyClient!==!1?b:w,t.session.resuming=!1,a.createSecurityParameters(t,i)),t.open=!0,a.queue(t,a.createRecord(t,{type:a.ContentType.handshake,data:a.createServerHello(t)})),t.session.resuming?(a.queue(t,a.createRecord(t,{type:a.ContentType.change_cipher_spec,data:a.createChangeCipherSpec()})),t.state.pending=a.createConnectionState(t),t.state.current.write=t.state.pending.write,a.queue(t,a.createRecord(t,{type:a.ContentType.handshake,data:a.createFinished(t)}))):(a.queue(t,a.createRecord(t,{type:a.ContentType.handshake,data:a.createCertificate(t)})),t.fail||(a.queue(t,a.createRecord(t,{type:a.ContentType.handshake,data:a.createServerKeyExchange(t)})),t.verifyClient!==!1&&a.queue(t,a.createRecord(t,{type:a.ContentType.handshake,data:a.createCertificateRequest(t)})),a.queue(t,a.createRecord(t,{type:a.ContentType.handshake,data:a.createServerHelloDone(t)})))),a.flush(t),t.process()},a.handleCertificate=function(t,n,r){if(r<3)return t.error(t,{message:"Invalid Certificate message. Message too short.",send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.illegal_parameter}});var i=n.fragment,s={certificate_list:o(i,3)},u,f,l=[];try{while(s.certificate_list.length()>0)u=o(s.certificate_list,3),f=e.asn1.fromDer(u),u=e.pki.certificateFromAsn1(f,!0),l.push(u)}catch(h){return t.error(t,{message:"Could not parse certificate list.",cause:h,send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.bad_certificate}})}var p=t.entity===a.ConnectionEnd.client;!p&&t.verifyClient!==!0||l.length!==0?l.length===0?t.expect=p?c:w:(p?t.session.serverCertificate=l[0]:t.session.clientCertificate=l[0],a.verifyCertificateChain(t,l)&&(t.expect=p?c:w)):t.error(t,{message:p?"No server certificate provided.":"No client certificate provided.",send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.illegal_parameter}}),t.process()},a.handleServerKeyExchange=function(e,t,n){if(n>0)return e.error(e,{message:"Invalid key parameters. Only RSA is supported.",send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.unsupported_certificate}});e.expect=h,e.process()},a.handleClientKeyExchange=function(t,n,r){if(r<48)return t.error(t,{message:"Invalid key parameters. Only RSA is supported.",send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.unsupported_certificate}});var i=n.fragment,s={enc_pre_master_secret:o(i,2).getBytes()},u=null;if(t.getPrivateKey)try{u=t.getPrivateKey(t,t.session.serverCertificate),u=e.pki.privateKeyFromPem(u)}catch(f){t.error(t,{message:"Could not get private key.",cause:f,send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.internal_error}})}if(u===null)return t.error(t,{message:"No private key set.",send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.internal_error}});try{var l=t.session.sp;l.pre_master_secret=u.decrypt(s.enc_pre_master_secret);var c=t.session.clientHelloVersion;if(c.major!==l.pre_master_secret.charCodeAt(0)||c.minor!==l.pre_master_secret.charCodeAt(1))throw new Error("TLS version rollback attack detected.")}catch(f){l.pre_master_secret=e.random.getBytes(48)}t.expect=S,t.session.clientCertificate!==null&&(t.expect=E),t.process()},a.handleCertificateRequest=function(e,t,n){if(n<3)return e.error(e,{message:"Invalid CertificateRequest. Message too short.",send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.illegal_parameter}});var r=t.fragment,i={certificate_types:o(r,1),certificate_authorities:o(r,2)};e.session.certificateRequest=i,e.expect=p,e.process()},a.handleCertificateVerify=function(t,n,r){if(r<2)return t.error(t,{message:"Invalid CertificateVerify. Message too short.",send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.illegal_parameter}});var i=n.fragment;i.read-=4;var s=i.bytes();i.read+=4;var u={signature:o(i,2).getBytes()},f=e.util.createBuffer();f.putBuffer(t.session.md5.digest()),f.putBuffer(t.session.sha1.digest()),f=f.getBytes();try{var l=t.session.clientCertificate;if(!l.publicKey.verify(f,u.signature,"NONE"))throw new Error("CertificateVerify signature does not match.");t.session.md5.update(s),t.session.sha1.update(s)}catch(c){return t.error(t,{message:"Bad signature in CertificateVerify.",send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.handshake_failure}})}t.expect=S,t.process()},a.handleServerHelloDone=function(t,n,r){if(r>0)return t.error(t,{message:"Invalid ServerHelloDone message. Invalid length.",send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.record_overflow}});if(t.serverCertificate===null){var i={message:"No server certificate provided. Not enough security.",send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.insufficient_security}},s=0,o=t.verify(t,i.alert.description,s,[]);if(o!==!0){if(o||o===0)typeof o=="object"&&!e.util.isArray(o)?(o.message&&(i.message=o.message),o.alert&&(i.alert.description=o.alert)):typeof o=="number"&&(i.alert.description=o);return t.error(t,i)}}t.session.certificateRequest!==null&&(n=a.createRecord(t,{type:a.ContentType.handshake,data:a.createCertificate(t)}),a.queue(t,n)),n=a.createRecord(t,{type:a.ContentType.handshake,data:a.createClientKeyExchange(t)}),a.queue(t,n),t.expect=g;var u=function(e,t){e.session.certificateRequest!==null&&e.session.clientCertificate!==null&&a.queue(e,a.createRecord(e,{type:a.ContentType.handshake,data:a.createCertificateVerify(e,t)})),a.queue(e,a.createRecord(e,{type:a.ContentType.change_cipher_spec,data:a.createChangeCipherSpec()})),e.state.pending=a.createConnectionState(e),e.state.current.write=e.state.pending.write,a.queue(e,a.createRecord(e,{type:a.ContentType.handshake,data:a.createFinished(e)})),e.expect=d,a.flush(e),e.process()};if(t.session.certificateRequest===null||t.session.clientCertificate===null)return u(t,null);a.getClientSignature(t,u)},a.handleChangeCipherSpec=function(e,t){if(t.fragment.getByte()!==1)return e.error(e,{message:"Invalid ChangeCipherSpec message received.",send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.illegal_parameter}});var n=e.entity===a.ConnectionEnd.client;if(e.session.resuming&&n||!e.session.resuming&&!n)e.state.pending=a.createConnectionState(e);e.state.current.read=e.state.pending.read;if(!e.session.resuming&&n||e.session.resuming&&!n)e.state.pending=null;e.expect=n?v:x,e.process()},a.handleFinished=function(n,r,i){var s=r.fragment;s.read-=4;var o=s.bytes();s.read+=4;var u=r.fragment.getBytes();s=e.util.createBuffer(),s.putBuffer(n.session.md5.digest()),s.putBuffer(n.session.sha1.digest());var f=n.entity===a.ConnectionEnd.client,l=f?"server finished":"client finished",c=n.session.sp,h=12,p=t;s=p(c.master_secret,l,s.getBytes(),h);if(s.getBytes()!==u)return n.error(n,{message:"Invalid verify_data in Finished message.",send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.decrypt_error}});n.session.md5.update(o),n.session.sha1.update(o);if(n.session.resuming&&f||!n.session.resuming&&!f)a.queue(n,a.createRecord(n,{type:a.ContentType.change_cipher_spec,data:a.createChangeCipherSpec()})),n.state.current.write=n.state.pending.write,n.state.pending=null,a.queue(n,a.createRecord(n,{type:a.ContentType.handshake,data:a.createFinished(n)}));n.expect=f?m:T,n.handshaking=!1,++n.handshakes,n.peerCertificate=f?n.session.serverCertificate:n.session.clientCertificate,a.flush(n),n.isConnected=!0,n.connected(n),n.process()},a.handleAlert=function(e,t){var n=t.fragment,r={level:n.getByte(),description:n.getByte()},i;switch(r.description){case a.Alert.Description.close_notify:i="Connection closed.";break;case a.Alert.Description.unexpected_message:i="Unexpected message.";break;case a.Alert.Description.bad_record_mac:i="Bad record MAC.";break;case a.Alert.Description.decryption_failed:i="Decryption failed.";break;case a.Alert.Description.record_overflow:i="Record overflow.";break;case a.Alert.Description.decompression_failure:i="Decompression failed.";break;case a.Alert.Description.handshake_failure:i="Handshake failure.";break;case a.Alert.Description.bad_certificate:i="Bad certificate.";break;case a.Alert.Description.unsupported_certificate:i="Unsupported certificate.";break;case a.Alert.Description.certificate_revoked:i="Certificate revoked.";break;case a.Alert.Description.certificate_expired:i="Certificate expired.";break;case a.Alert.Description.certificate_unknown:i="Certificate unknown.";break;case a.Alert.Description.illegal_parameter:i="Illegal parameter.";break;case a.Alert.Description.unknown_ca:i="Unknown certificate authority.";break;case a.Alert.Description.access_denied:i="Access denied.";break;case a.Alert.Description.decode_error:i="Decode error.";break;case a.Alert.Description.decrypt_error:i="Decrypt error.";break;case a.Alert.Description.export_restriction:i="Export restriction.";break;case a.Alert.Description.protocol_version:i="Unsupported protocol version.";break;case a.Alert.Description.insufficient_security:i="Insufficient security.";break;case a.Alert.Description.internal_error:i="Internal error.";break;case a.Alert.Description.user_canceled:i="User canceled.";break;case a.Alert.Description.no_renegotiation:i="Renegotiation not supported.";break;default:i="Unknown error."}if(r.description===a.Alert.Description.close_notify)return e.close();e.error(e,{message:i,send:!1,origin:e.entity===a.ConnectionEnd.client?"server":"client",alert:r}),e.process()},a.handleHandshake=function(t,n){var r=n.fragment,i=r.getByte(),s=r.getInt24();if(s>r.length())return t.fragmented=n,n.fragment=e.util.createBuffer(),r.read-=4,t.process();t.fragmented=null,r.read-=4;var o=r.bytes(s+4);r.read+=4,i in q[t.entity][t.expect]?(t.entity===a.ConnectionEnd.server&&!t.open&&!t.fail&&(t.handshaking=!0,t.session={version:null,extensions:{server_name:{serverNameList:[]}},cipherSuite:null,compressionMethod:null,serverCertificate:null,clientCertificate:null,md5:e.md.md5.create(),sha1:e.md.sha1.create()}),i!==a.HandshakeType.hello_request&&i!==a.HandshakeType.certificate_verify&&i!==a.HandshakeType.finished&&(t.session.md5.update(o),t.session.sha1.update(o)),q[t.entity][t.expect][i](t,n,s)):a.handleUnexpected(t,n)},a.handleApplicationData=function(e,t){e.data.putBuffer(t.fragment),e.dataReady(e),e.process()},a.handleHeartbeat=function(t,n){var r=n.fragment,i=r.getByte(),s=r.getInt16(),o=r.getBytes(s);if(i===a.HeartbeatMessageType.heartbeat_request){if(t.handshaking||s>o.length)return t.process();a.queue(t,a.createRecord(t,{type:a.ContentType.heartbeat,data:a.createHeartbeat(a.HeartbeatMessageType.heartbeat_response,o)})),a.flush(t)}else if(i===a.HeartbeatMessageType.heartbeat_response){if(o!==t.expectedHeartbeatPayload)return t.process();t.heartbeatReceived&&t.heartbeatReceived(t,e.util.createBuffer(o))}t.process()};var f=0,l=1,c=2,h=3,p=4,d=5,v=6,m=7,g=8,y=0,b=1,w=2,E=3,S=4,x=5,T=6,N=7,C=a.handleUnexpected,k=a.handleChangeCipherSpec,L=a.handleAlert,A=a.handleHandshake,O=a.handleApplicationData,M=a.handleHeartbeat,_=[];_[a.ConnectionEnd.client]=[[C,L,A,C,M],[C,L,A,C,M],[C,L,A,C,M],[C,L,A,C,M],[C,L,A,C,M],[k,L,C,C,M],[C,L,A,C,M],[C,L,A,O,M],[C,L,A,C,M]],_[a.ConnectionEnd.server]=[[C,L,A,C,M],[C,L,A,C,M],[C,L,A,C,M],[C,L,A,C,M],[k,L,C,C,M],[C,L,A,C,M],[C,L,A,O,M],[C,L,A,C,M]];var D=a.handleHelloRequest,P=a.handleServerHello,H=a.handleCertificate,B=a.handleServerKeyExchange,j=a.handleCertificateRequest,F=a.handleServerHelloDone,I=a.handleFinished,q=[];q[a.ConnectionEnd.client]=[[C,C,P,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C],[D,C,C,C,C,C,C,C,C,C,C,H,B,j,F,C,C,C,C,C,C],[D,C,C,C,C,C,C,C,C,C,C,C,B,j,F,C,C,C,C,C,C],[D,C,C,C,C,C,C,C,C,C,C,C,C,j,F,C,C,C,C,C,C],[D,C,C,C,C,C,C,C,C,C,C,C,C,C,F,C,C,C,C,C,C],[D,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C],[D,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,I],[D,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C],[D,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C]];var R=a.handleClientHello,U=a.handleClientKeyExchange,z=a.handleCertificateVerify;q[a.ConnectionEnd.server]=[[C,R,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C],[C,C,C,C,C,C,C,C,C,C,C,H,C,C,C,C,C,C,C,C,C],[C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,U,C,C,C,C],[C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,z,C,C,C,C,C],[C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C],[C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,I],[C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C],[C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C]],a.generateKeys=function(e,n){var r=t,i=n.client_random+n.server_random;e.session.resuming||(n.master_secret=r(n.pre_master_secret,"master secret",i,48).bytes(),n.pre_master_secret=null),i=n.server_random+n.client_random;var s=2*n.mac_key_length+2*n.enc_key_length,o=e.version.major===a.Versions.TLS_1_0.major&&e.version.minor===a.Versions.TLS_1_0.minor;o&&(s+=2*n.fixed_iv_length);var u=r(n.master_secret,"key expansion",i,s),f={client_write_MAC_key:u.getBytes(n.mac_key_length),server_write_MAC_key:u.getBytes(n.mac_key_length),client_write_key:u.getBytes(n.enc_key_length),server_write_key:u.getBytes(n.enc_key_length)};return o&&(f.client_write_IV=u.getBytes(n.fixed_iv_length),f.server_write_IV=u.getBytes(n.fixed_iv_length)),f},a.createConnectionState=function(e){var t=e.entity===a.ConnectionEnd.client,n=function(){var e={sequenceNumber:[0,0],macKey:null,macLength:0,macFunction:null,cipherState:null,cipherFunction:function(e){return!0},compressionState:null,compressFunction:function(e){return!0},updateSequenceNumber:function(){e.sequenceNumber[1]===4294967295?(e.sequenceNumber[1]=0,++e.sequenceNumber[0]):++e.sequenceNumber[1]}};return e},r={read:n(),write:n()};r.read.update=function(e,t){return r.read.cipherFunction(t,r.read)?r.read.compressFunction(e,t,r.read)||e.error(e,{message:"Could not decompress record.",send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.decompression_failure}}):e.error(e,{message:"Could not decrypt record or bad MAC.",send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.bad_record_mac}}),!e.fail},r.write.update=function(e,t){return r.write.compressFunction(e,t,r.write)?r.write.cipherFunction(t,r.write)||e.error(e,{message:"Could not encrypt record.",send:!1,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.internal_error}}):e.error(e,{message:"Could not compress record.",send:!1,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.internal_error}}),!e.fail};if(e.session){var o=e.session.sp;e.session.cipherSuite.initSecurityParameters(o),o.keys=a.generateKeys(e,o),r.read.macKey=t?o.keys.server_write_MAC_key:o.keys.client_write_MAC_key,r.write.macKey=t?o.keys.client_write_MAC_key:o.keys.server_write_MAC_key,e.session.cipherSuite.initConnectionState(r,e,o);switch(o.compression_algorithm){case a.CompressionMethod.none:break;case a.CompressionMethod.deflate:r.read.compressFunction=s,r.write.compressFunction=i;break;default:throw new Error("Unsupported compression algorithm.")}}return r},a.createRandom=function(){var t=new Date,n=+t+t.getTimezoneOffset()*6e4,r=e.util.createBuffer();return r.putInt32(n),r.putBytes(e.random.getBytes(28)),r},a.createRecord=function(e,t){if(!t.data)return null;var n={type:t.type,version:{major:e.version.major,minor:e.version.minor},length:t.data.length(),fragment:t.data};return n},a.createAlert=function(t,n){var r=e.util.createBuffer();return r.putByte(n.level),r.putByte(n.description),a.createRecord(t,{type:a.ContentType.alert,data:r})},a.createClientHello=function(t){t.session.clientHelloVersion={major:t.version.major,minor:t.version.minor};var n=e.util.createBuffer();for(var r=0;r<t.cipherSuites.length;++r){var i=t.cipherSuites[r];n.putByte(i.id[0]),n.putByte(i.id[1])}var s=n.length(),o=e.util.createBuffer();o.putByte(a.CompressionMethod.none);var f=o.length(),l=e.util.createBuffer();if(t.virtualHost){var c=e.util.createBuffer();c.putByte(0),c.putByte(0);var h=e.util.createBuffer();h.putByte(0),u(h,2,e.util.createBuffer(t.virtualHost));var p=e.util.createBuffer();u(p,2,h),u(c,2,p),l.putBuffer(c)}var d=l.length();d>0&&(d+=2);var v=t.session.id,m=v.length+1+2+4+28+2+s+1+f+d,g=e.util.createBuffer();return g.putByte(a.HandshakeType.client_hello),g.putInt24(m),g.putByte(t.version.major),g.putByte(t.version.minor),g.putBytes(t.session.sp.client_random),u(g,1,e.util.createBuffer(v)),u(g,2,n),u(g,1,o),d>0&&u(g,2,l),g},a.createServerHello=function(t){var n=t.session.id,r=n.length+1+2+4+28+2+1,i=e.util.createBuffer();return i.putByte(a.HandshakeType.server_hello),i.putInt24(r),i.putByte(t.version.major),i.putByte(t.version.minor),i.putBytes(t.session.sp.server_random),u(i,1,e.util.createBuffer(n)),i.putByte(t.session.cipherSuite.id[0]),i.putByte(t.session.cipherSuite.id[1]),i.putByte(t.session.compressionMethod),i},a.createCertificate=function(t){var n=t.entity===a.ConnectionEnd.client,r=null;if(t.getCertificate){var i;n?i=t.session.certificateRequest:i=t.session.extensions.server_name.serverNameList,r=t.getCertificate(t,i)}var s=e.util.createBuffer();if(r!==null)try{e.util.isArray(r)||(r=[r]);var o=null;for(var f=0;f<r.length;++f){var l=e.pem.decode(r[f])[0];if(l.type!=="CERTIFICATE"&&l.type!=="X509 CERTIFICATE"&&l.type!=="TRUSTED CERTIFICATE"){var c=new Error('Could not convert certificate from PEM; PEM header type is not "CERTIFICATE", "X509 CERTIFICATE", or "TRUSTED CERTIFICATE".');throw c.headerType=l.type,c}if(l.procType&&l.procType.type==="ENCRYPTED")throw new Error("Could not convert certificate from PEM; PEM is encrypted.");var h=e.util.createBuffer(l.body);o===null&&(o=e.asn1.fromDer(h.bytes(),!1));var p=e.util.createBuffer();u(p,3,h),s.putBuffer(p)}r=e.pki.certificateFromAsn1(o),n?t.session.clientCertificate=r:t.session.serverCertificate=r}catch(d){return t.error(t,{message:"Could not send certificate list.",cause:d,send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.bad_certificate}})}var v=3+s.length(),m=e.util.createBuffer();return m.putByte(a.HandshakeType.certificate),m.putInt24(v),u(m,3,s),m},a.createClientKeyExchange=function(t){var n=e.util.createBuffer();n.putByte(t.session.clientHelloVersion.major),n.putByte(t.session.clientHelloVersion.minor),n.putBytes(e.random.getBytes(46));var r=t.session.sp;r.pre_master_secret=n.getBytes();var i=t.session.serverCertificate.publicKey;n=i.encrypt(r.pre_master_secret);var s=n.length+2,o=e.util.createBuffer();return o.putByte(a.HandshakeType.client_key_exchange),o.putInt24(s),o.putInt16(n.length),o.putBytes(n),o},a.createServerKeyExchange=function(t){var n=0,r=e.util.createBuffer();return n>0&&(r.putByte(a.HandshakeType.server_key_exchange),r.putInt24(n)),r},a.getClientSignature=function(t,n){var r=e.util.createBuffer();r.putBuffer(t.session.md5.digest()),r.putBuffer(t.session.sha1.digest()),r=r.getBytes(),t.getSignature=t.getSignature||function(t,n,r){var i=null;if(t.getPrivateKey)try{i=t.getPrivateKey(t,t.session.clientCertificate),i=e.pki.privateKeyFromPem(i)}catch(s){t.error(t,{message:"Could not get private key.",cause:s,send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.internal_error}})}i===null?t.error(t,{message:"No private key set.",send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.internal_error}}):n=i.sign(n,null),r(t,n)},t.getSignature(t,r,n)},a.createCertificateVerify=function(t,n){var r=n.length+2,i=e.util.createBuffer();return i.putByte(a.HandshakeType.certificate_verify),i.putInt24(r),i.putInt16(n.length),i.putBytes(n),i},a.createCertificateRequest=function(t){var n=e.util.createBuffer();n.putByte(1);var r=e.util.createBuffer();for(var i in t.caStore.certs){var s=t.caStore.certs[i],o=e.pki.distinguishedNameToAsn1(s.subject);r.putBuffer(e.asn1.toDer(o))}var f=1+n.length()+2+r.length(),l=e.util.createBuffer();return l.putByte(a.HandshakeType.certificate_request),l.putInt24(f),u(l,1,n),u(l,2,r),l},a.createServerHelloDone=function(t){var n=e.util.createBuffer();return n.putByte(a.HandshakeType.server_hello_done),n.putInt24(0),n},a.createChangeCipherSpec=function(){var t=e.util.createBuffer();return t.putByte(1),t},a.createFinished=function(n){var r=e.util.createBuffer();r.putBuffer(n.session.md5.digest()),r.putBuffer(n.session.sha1.digest());var i=n.entity===a.ConnectionEnd.client,s=n.session.sp,o=12,u=t,f=i?"client finished":"server finished";r=u(s.master_secret,f,r.getBytes(),o);var l=e.util.createBuffer();return l.putByte(a.HandshakeType.finished),l.putInt24(r.length()),l.putBuffer(r),l},a.createHeartbeat=function(t,n,r){typeof r=="undefined"&&(r=n.length);var i=e.util.createBuffer();i.putByte(t),i.putInt16(r),i.putBytes(n);var s=i.length(),o=Math.max(16,s-r-3);return i.putBytes(e.random.getBytes(o)),i},a.queue=function(t,n){if(!n)return;if(n.type===a.ContentType.handshake){var r=n.fragment.bytes();t.session.md5.update(r),t.session.sha1.update(r),r=null}var i;if(n.fragment.length()<=a.MaxFragment)i=[n];else{i=[];var s=n.fragment.bytes();while(s.length>a.MaxFragment)i.push(a.createRecord(t,{type:n.type,data:e.util.createBuffer(s.slice(0,a.MaxFragment))})),s=s.slice(a.MaxFragment);s.length>0&&i.push(a.createRecord(t,{type:n.type,data:e.util.createBuffer(s)}))}for(var o=0;o<i.length&&!t.fail;++o){var u=i[o],f=t.state.current.write;f.update(t,u)&&t.records.push(u)}},a.flush=function(e){for(var t=0;t<e.records.length;++t){var n=e.records[t];e.tlsData.putByte(n.type),e.tlsData.putByte(n.version.major),e.tlsData.putByte(n.version.minor),e.tlsData.putInt16(n.fragment.length()),e.tlsData.putBuffer(e.records[t].fragment)}return e.records=[],e.tlsDataReady(e)};var W=function(t){switch(t){case!0:return!0;case e.pki.certificateError.bad_certificate:return a.Alert.Description.bad_certificate;case e.pki.certificateError.unsupported_certificate:return a.Alert.Description.unsupported_certificate;case e.pki.certificateError.certificate_revoked:return a.Alert.Description.certificate_revoked;case e.pki.certificateError.certificate_expired:return a.Alert.Description.certificate_expired;case e.pki.certificateError.certificate_unknown:return a.Alert.Description.certificate_unknown;case e.pki.certificateError.unknown_ca:return a.Alert.Description.unknown_ca;default:return a.Alert.Description.bad_certificate}},X=function(t){switch(t){case!0:return!0;case a.Alert.Description.bad_certificate:return e.pki.certificateError.bad_certificate;case a.Alert.Description.unsupported_certificate:return e.pki.certificateError.unsupported_certificate;case a.Alert.Description.certificate_revoked:return e.pki.certificateError.certificate_revoked;case a.Alert.Description.certificate_expired:return e.pki.certificateError.certificate_expired;case a.Alert.Description.certificate_unknown:return e.pki.certificateError.certificate_unknown;case a.Alert.Description.unknown_ca:return e.pki.certificateError.unknown_ca;default:return e.pki.certificateError.bad_certificate}};a.verifyCertificateChain=function(t,n){try{e.pki.verifyCertificateChain(t.caStore,n,function(r,i,s){var o=W(r),u=t.verify(t,r,i,s);if(u!==!0){if(typeof u=="object"&&!e.util.isArray(u)){var f=new Error("The application rejected the certificate.");throw f.send=!0,f.alert={level:a.Alert.Level.fatal,description:a.Alert.Description.bad_certificate},u.message&&(f.message=u.message),u.alert&&(f.alert.description=u.alert),f}u!==r&&(u=X(u))}return u})}catch(r){var i=r;if(typeof i!="object"||e.util.isArray(i))i={send:!0,alert:{level:a.Alert.Level.fatal,description:W(r)}};"send"in i||(i.send=!0),"alert"in i||(i.alert={level:a.Alert.Level.fatal,description:W(i.error)}),t.error(t,i)}return!t.fail},a.createSessionCache=function(t,n){var r=null;if(t&&t.getSession&&t.setSession&&t.order)r=t;else{r={},r.cache=t||{},r.capacity=Math.max(n||100,1),r.order=[];for(var i in t)r.order.length<=n?r.order.push(i):delete t[i];r.getSession=function(t){var n=null,i=null;t?i=e.util.bytesToHex(t):r.order.length>0&&(i=r.order[0]);if(i!==null&&i in r.cache){n=r.cache[i],delete r.cache[i];for(var s in r.order)if(r.order[s]===i){r.order.splice(s,1);break}}return n},r.setSession=function(t,n){if(r.order.length===r.capacity){var i=r.order.shift();delete r.cache[i]}var i=e.util.bytesToHex(t);r.order.push(i),r.cache[i]=n}}return r},a.createConnection=function(t){var n=null;t.caStore?e.util.isArray(t.caStore)?n=e.pki.createCaStore(t.caStore):n=t.caStore:n=e.pki.createCaStore();var r=t.cipherSuites||null;if(r===null){r=[];for(var i in a.CipherSuites)r.push(a.CipherSuites[i])}var s=t.server||!1?a.ConnectionEnd.server:a.ConnectionEnd.client,o=t.sessionCache?a.createSessionCache(t.sessionCache):null,u={version:{major:a.Version.major,minor:a.Version.minor},entity:s,sessionId:t.sessionId,caStore:n,sessionCache:o,cipherSuites:r,connected:t.connected,virtualHost:t.virtualHost||null,verifyClient:t.verifyClient||!1,verify:t.verify||function(e,t,n,r){return t},getCertificate:t.getCertificate||null,getPrivateKey:t.getPrivateKey||null,getSignature:t.getSignature||null,input:e.util.createBuffer(),tlsData:e.util.createBuffer(),data:e.util.createBuffer(),tlsDataReady:t.tlsDataReady,dataReady:t.dataReady,heartbeatReceived:t.heartbeatReceived,closed:t.closed,error:function(e,n){n.origin=n.origin||(e.entity===a.ConnectionEnd.client?"client":"server"),n.send&&(a.queue(e,a.createAlert(e,n.alert)),a.flush(e));var r=n.fatal!==!1;r&&(e.fail=!0),t.error(e,n),r&&e.close(!1)},deflate:t.deflate||null,inflate:t.inflate||null};u.reset=function(e){u.version={major:a.Version.major,minor:a.Version.minor},u.record=null,u.session=null,u.peerCertificate=null,u.state={pending:null,current:null},u.expect=u.entity===a.ConnectionEnd.client?f:y,u.fragmented=null,u.records=[],u.open=!1,u.handshakes=0,u.handshaking=!1,u.isConnected=!1,u.fail=!e&&typeof e!="undefined",u.input.clear(),u.tlsData.clear(),u.data.clear(),u.state.current=a.createConnectionState(u)},u.reset();var l=function(e,t){var n=t.type-a.ContentType.change_cipher_spec,r=_[e.entity][e.expect];n in r?r[n](e,t):a.handleUnexpected(e,t)},c=function(t){var n=0,r=t.input,i=r.length();if(i<5)n=5-i;else{t.record={type:r.getByte(),version:{major:r.getByte(),minor:r.getByte()},length:r.getInt16(),fragment:e.util.createBuffer(),ready:!1};var s=t.record.version.major===t.version.major;s&&t.session&&t.session.version&&(s=t.record.version.minor===t.version.minor),s||t.error(t,{message:"Incompatible TLS version.",send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.protocol_version}})}return n},h=function(e){var t=0,n=e.input,r=n.length();if(r<e.record.length)t=e.record.length-r;else{e.record.fragment.putBytes(n.getBytes(e.record.length)),n.compact();var i=e.state.current.read;i.update(e,e.record)&&(e.fragmented!==null&&(e.fragmented.type===e.record.type?(e.fragmented.fragment.putBuffer(e.record.fragment),e.record=e.fragmented):e.error(e,{message:"Invalid fragmented record.",send:!0,alert:{level:a.Alert.Level.fatal,description:a.Alert.Description.unexpected_message}})),e.record.ready=!0)}return t};return u.handshake=function(t){if(u.entity!==a.ConnectionEnd.client)u.error(u,{message:"Cannot initiate handshake as a server.",fatal:!1});else if(u.handshaking)u.error(u,{message:"Handshake already in progress.",fatal:!1});else{u.fail&&!u.open&&u.handshakes===0&&(u.fail=!1),u.handshaking=!0,t=t||"";var n=null;t.length>0&&(u.sessionCache&&(n=u.sessionCache.getSession(t)),n===null&&(t="")),t.length===0&&u.sessionCache&&(n=u.sessionCache.getSession(),n!==null&&(t=n.id)),u.session={id:t,version:null,cipherSuite:null,compressionMethod:null,serverCertificate:null,certificateRequest:null,clientCertificate:null,sp:{},md5:e.md.md5.create(),sha1:e.md.sha1.create()},n&&(u.version=n.version,u.session.sp=n.sp),u.session.sp.client_random=a.createRandom().getBytes(),u.open=!0,a.queue(u,a.createRecord(u,{type:a.ContentType.handshake,data:a.createClientHello(u)})),a.flush(u)}},u.process=function(e){var t=0;return e&&u.input.putBytes(e),u.fail||(u.record!==null&&u.record.ready&&u.record.fragment.isEmpty()&&(u.record=null),u.record===null&&(t=c(u)),!u.fail&&u.record!==null&&!u.record.ready&&(t=h(u)),!u.fail&&u.record!==null&&u.record.ready&&l(u,u.record)),t},u.prepare=function(t){return a.queue(u,a.createRecord(u,{type:a.ContentType.application_data,data:e.util.createBuffer(t)})),a.flush(u)},u.prepareHeartbeatRequest=function(t,n){return t instanceof e.util.ByteBuffer&&(t=t.bytes()),typeof n=="undefined"&&(n=t.length),u.expectedHeartbeatPayload=t,a.queue(u,a.createRecord(u,{type:a.ContentType.heartbeat,data:a.createHeartbeat(a.HeartbeatMessageType.heartbeat_request,t,n)})),a.flush(u)},u.close=function(e){if(!u.fail&&u.sessionCache&&u.session){var t={id:u.session.id,version:u.session.version,sp:u.session.sp};t.sp.keys=null,u.sessionCache.setSession(t.id,t)}if(u.open){u.open=!1,u.input.clear();if(u.isConnected||u.handshaking)u.isConnected=u.handshaking=!1,a.queue(u,a.createAlert(u,{level:a.Alert.Level.warning,description:a.Alert.Description.close_notify})),a.flush(u);u.closed(u)}u.reset(e)},u},e.tls=e.tls||{};for(var V in a)typeof a[V]!="function"&&(e.tls[V]=a[V]);e.tls.prf_tls1=t,e.tls.hmac_sha1=r,e.tls.createSessionCache=a.createSessionCache,e.tls.createConnection=a.createConnection}var r="tls";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/tls",["require","module","./asn1","./hmac","./md","./pem","./pki","./random","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function n(n,i,s){var o=i.entity===e.tls.ConnectionEnd.client;n.read.cipherState={init:!1,cipher:e.cipher.createDecipher("AES-CBC",o?s.keys.server_write_key:s.keys.client_write_key),iv:o?s.keys.server_write_IV:s.keys.client_write_IV},n.write.cipherState={init:!1,cipher:e.cipher.createCipher("AES-CBC",o?s.keys.client_write_key:s.keys.server_write_key),iv:o?s.keys.client_write_IV:s.keys.server_write_IV},n.read.cipherFunction=u,n.write.cipherFunction=r,n.read.macLength=n.write.macLength=s.mac_length,n.read.macFunction=n.write.macFunction=t.hmac_sha1}function r(n,r){var s=!1,o=r.macFunction(r.macKey,r.sequenceNumber,n);n.fragment.putBytes(o),r.updateSequenceNumber();var u;n.version.minor===t.Versions.TLS_1_0.minor?u=r.cipherState.init?null:r.cipherState.iv:u=e.random.getBytesSync(16),r.cipherState.init=!0;var a=r.cipherState.cipher;return a.start({iv:u}),n.version.minor>=t.Versions.TLS_1_1.minor&&a.output.putBytes(u),a.update(n.fragment),a.finish(i)&&(n.fragment=a.output,n.length=n.fragment.length(),s=!0),s}function i(e,t,n){if(!n){var r=e-t.length()%e;t.fillWithByte(r-1,r)}return!0}function s(e,t,n){var r=!0;if(n){var i=t.length(),s=t.last();for(var o=i-1-s;o<i-1;++o)r=r&&t.at(o)==s;r&&t.truncate(s+1)}return r}function u(n,r){var i=!1;++o;var u;n.version.minor===t.Versions.TLS_1_0.minor?u=r.cipherState.init?null:r.cipherState.iv:u=n.fragment.getBytes(16),r.cipherState.init=!0;var f=r.cipherState.cipher;f.start({iv:u}),f.update(n.fragment),i=f.finish(s);var l=r.macLength,c=e.random.getBytesSync(l),h=f.output.length();h>=l?(n.fragment=f.output.getBytes(h-l),c=f.output.getBytes(l)):n.fragment=f.output.getBytes(),n.fragment=e.util.createBuffer(n.fragment),n.length=n.fragment.length();var p=r.macFunction(r.macKey,r.sequenceNumber,n);return r.updateSequenceNumber(),i=a(r.macKey,c,p)&&i,i}function a(t,n,r){var i=e.hmac.create();return i.start("SHA1",t),i.update(n),n=i.digest().getBytes(),i.start(null,null),i.update(r),r=i.digest().getBytes(),n===r}var t=e.tls;t.CipherSuites.TLS_RSA_WITH_AES_128_CBC_SHA={id:[0,47],name:"TLS_RSA_WITH_AES_128_CBC_SHA",initSecurityParameters:function(e){e.bulk_cipher_algorithm=t.BulkCipherAlgorithm.aes,e.cipher_type=t.CipherType.block,e.enc_key_length=16,e.block_length=16,e.fixed_iv_length=16,e.record_iv_length=16,e.mac_algorithm=t.MACAlgorithm.hmac_sha1,e.mac_length=20,e.mac_key_length=20},initConnectionState:n},t.CipherSuites.TLS_RSA_WITH_AES_256_CBC_SHA={id:[0,53],name:"TLS_RSA_WITH_AES_256_CBC_SHA",initSecurityParameters:function(e){e.bulk_cipher_algorithm=t.BulkCipherAlgorithm.aes,e.cipher_type=t.CipherType.block,e.enc_key_length=32,e.block_length=16,e.fixed_iv_length=16,e.record_iv_length=16,e.mac_algorithm=t.MACAlgorithm.hmac_sha1,e.mac_length=20,e.mac_key_length=20},initConnectionState:n};var o=0}var r="aesCipherSuites";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/aesCipherSuites",["require","module","./aes","./tls"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){e.debug=e.debug||{},e.debug.storage={},e.debug.get=function(t,n){var r;return typeof t=="undefined"?r=e.debug.storage:t in e.debug.storage&&(typeof n=="undefined"?r=e.debug.storage[t]:r=e.debug.storage[t][n]),r},e.debug.set=function(t,n,r){t in e.debug.storage||(e.debug.storage[t]={}),e.debug.storage[t][n]=r},e.debug.clear=function(t,n){typeof t=="undefined"?e.debug.storage={}:t in e.debug.storage&&(typeof n=="undefined"?delete e.debug.storage[t]:delete e.debug.storage[t][n])}}var r="debug";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/debug",["require","module"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function n(t,n,r,i){t.generate=function(t,s){var o=new e.util.ByteBuffer,u=Math.ceil(s/i)+r,a=new e.util.ByteBuffer;for(var f=r;f<u;++f){a.putInt32(f),n.start(),n.update(t+a.getBytes());var l=n.digest();o.putBytes(l.getBytes(i))}return o.truncate(o.length()-s),o.getBytes()}}e.kem=e.kem||{};var t=e.jsbn.BigInteger;e.kem.rsa={},e.kem.rsa.create=function(n,r){r=r||{};var i=r.prng||e.random,s={};return s.encrypt=function(r,s){var o=Math.ceil(r.n.bitLength()/8),u;do u=(new t(e.util.bytesToHex(i.getBytesSync(o)),16)).mod(r.n);while(u.equals(t.ZERO));u=e.util.hexToBytes(u.toString(16));var a=o-u.length;a>0&&(u=e.util.fillString(String.fromCharCode(0),a)+u);var f=r.encrypt(u,"NONE"),l=n.generate(u,s);return{encapsulation:f,key:l}},s.decrypt=function(e,t,r){var i=e.decrypt(t,"NONE");return n.generate(i,r)},s},e.kem.kdf1=function(e,t){n(this,e,0,t||e.digestLength)},e.kem.kdf2=function(e,t){n(this,e,1,t||e.digestLength)}}var r="kem";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/kem",["require","module","./util","./random","./jsbn"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){e.log=e.log||{},e.log.levels=["none","error","warning","info","debug","verbose","max"];var t={},n=[],r=null;e.log.LEVEL_LOCKED=2,e.log.NO_LEVEL_CHECK=4,e.log.INTERPOLATE=8;for(var i=0;i<e.log.levels.length;++i){var s=e.log.levels[i];t[s]={index:i,name:s.toUpperCase()}}e.log.logMessage=function(r){var i=t[r.level].index;for(var s=0;s<n.length;++s){var o=n[s];if(o.flags&e.log.NO_LEVEL_CHECK)o.f(r);else{var u=t[o.level].index;i<=u&&o.f(o,r)}}},e.log.prepareStandard=function(e){"standard"in e||(e.standard=t[e.level].name+" ["+e.category+"] "+e.message)},e.log.prepareFull=function(t){if(!("full"in t)){var n=[t.message];n=n.concat([]||t.arguments),t.full=e.util.format.apply(this,n)}},e.log.prepareStandardFull=function(t){"standardFull"in t||(e.log.prepareStandard(t),t.standardFull=t.standard)};var o=["error","warning","info","debug","verbose"];for(var i=0;i<o.length;++i)(function(t){e.log[t]=function(n,r){var i=Array.prototype.slice.call(arguments).slice(2),s={timestamp:new Date,level:t,category:n,message:r,arguments:i};e.log.logMessage(s)}})(o[i]);e.log.makeLogger=function(t){var n={flags:0,f:t};return e.log.setLevel(n,"none"),n},e.log.setLevel=function(t,n){var r=!1;if(t&&!(t.flags&e.log.LEVEL_LOCKED))for(var i=0;i<e.log.levels.length;++i){var s=e.log.levels[i];if(n==s){t.level=n,r=!0;break}}return r},e.log.lock=function(t,n){typeof n=="undefined"||n?t.flags|=e.log.LEVEL_LOCKED:t.flags&=~e.log.LEVEL_LOCKED},e.log.addLogger=function(e){n.push(e)};if(typeof console!="undefined"&&"log"in console){var u;if(console.error&&console.warn&&console.info&&console.debug){var a={error:console.error,warning:console.warn,info:console.info,debug:console.debug,verbose:console.debug},f=function(t,n){e.log.prepareStandard(n);var r=a[n.level],i=[n.standard];i=i.concat(n.arguments.slice()),r.apply(console,i)};u=e.log.makeLogger(f)}else{var f=function(t,n){e.log.prepareStandardFull(n),console.log(n.standardFull)};u=e.log.makeLogger(f)}e.log.setLevel(u,"debug"),e.log.addLogger(u),r=u}else console={log:function(){}};if(r!==null){var l=e.util.getQueryVariables();"console.level"in l&&e.log.setLevel(r,l["console.level"].slice(-1)[0]);if("console.lock"in l){var c=l["console.lock"].slice(-1)[0];c=="true"&&e.log.lock(r)}}e.log.console.logger=r}var r="log";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/log",["require","module","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function r(r){var i={},s=[];if(!t.validate(r,n.asn1.recipientInfoValidator,i,s)){var o=new Error("Cannot read PKCS#7 RecipientInfo. ASN.1 object is not an PKCS#7 RecipientInfo.");throw o.errors=s,o}return{version:i.version.charCodeAt(0),issuer:e.pki.RDNAttributesAsArray(i.issuer),serialNumber:e.util.createBuffer(i.serial).toHex(),encryptedContent:{algorithm:t.derToOid(i.encAlgorithm),parameter:i.encParameter.value,content:i.encKey}}}function i(n){return t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.INTEGER,!1,t.integerToDer(n.version).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[e.pki.distinguishedNameToAsn1({attributes:n.issuer}),t.create(t.Class.UNIVERSAL,t.Type.INTEGER,!1,e.util.hexToBytes(n.serialNumber))]),t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(n.encryptedContent.algorithm).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.NULL,!1,"")]),t.create(t.Class.UNIVERSAL,t.Type.OCTETSTRING,!1,n.encryptedContent.content)])}function s(e){var t=[];for(var n=0;n<e.length;++n)t.push(r(e[n]));return t}function o(e){var t=[];for(var n=0;n<e.length;++n)t.push(i(e[n]));return t}function u(r){var i={},s=[];if(!t.validate(r,n.asn1.signerInfoValidator,i,s)){var o=new Error("Cannot read PKCS#7 SignerInfo. ASN.1 object is not an PKCS#7 SignerInfo.");throw o.errors=s,o}var u={version:i.version.charCodeAt(0),issuer:e.pki.RDNAttributesAsArray(i.issuer),serialNumber:e.util.createBuffer(i.serial).toHex(),digestAlgorithm:t.derToOid(i.digestAlgorithm),signatureAlgorithm:t.derToOid(i.signatureAlgorithm),signature:i.signature,authenticatedAttributes:[],unauthenticatedAttributes:[]},a=i.authenticatedAttributes||[],f=i.unauthenticatedAttributes||[];return u}function a(n){var r=t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.INTEGER,!1,t.integerToDer(n.version).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[e.pki.distinguishedNameToAsn1({attributes:n.issuer}),t.create(t.Class.UNIVERSAL,t.Type.INTEGER,!1,e.util.hexToBytes(n.serialNumber))]),t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(n.digestAlgorithm).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.NULL,!1,"")])]);n.authenticatedAttributesAsn1&&r.value.push(n.authenticatedAttributesAsn1),r.value.push(t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(n.signatureAlgorithm).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.NULL,!1,"")])),r.value.push(t.create(t.Class.UNIVERSAL,t.Type.OCTETSTRING,!1,n.signature));if(n.unauthenticatedAttributes.length>0){var i=t.create(t.Class.CONTEXT_SPECIFIC,1,!0,[]);for(var s=0;s<n.unauthenticatedAttributes.length;++s){var o=n.unauthenticatedAttributes[s];i.values.push(c(o))}r.value.push(i)}return r}function f(e){var t=[];for(var n=0;n<e.length;++n)t.push(u(e[n]));return t}function l(e){var t=[];for(var n=0;n<e.length;++n)t.push(a(e[n]));return t}function c(n){var r;if(n.type===e.pki.oids.contentType)r=t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(n.value).getBytes());else if(n.type===e.pki.oids.messageDigest)r=t.create(t.Class.UNIVERSAL,t.Type.OCTETSTRING,!1,n.value.bytes());else if(n.type===e.pki.oids.signingTime){var i=new Date("Jan 1, 1950 00:00:00Z"),s=new Date("Jan 1, 2050 00:00:00Z"),o=n.value;if(typeof o=="string"){var u=Date.parse(o);isNaN(u)?o.length===13?o=t.utcTimeToDate(o):o=t.generalizedTimeToDate(o):o=new Date(u)}o>=i&&o<s?r=t.create(t.Class.UNIVERSAL,t.Type.UTCTIME,!1,t.dateToUtcTime(o)):r=t.create(t.Class.UNIVERSAL,t.Type.GENERALIZEDTIME,!1,t.dateToGeneralizedTime(o))}return t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(n.type).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.SET,!0,[r])])}function h(n){return[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(e.pki.oids.data).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(n.algorithm).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.OCTETSTRING,!1,n.parameter.getBytes())]),t.create(t.Class.CONTEXT_SPECIFIC,0,!0,[t.create(t.Class.UNIVERSAL,t.Type.OCTETSTRING,!1,n.content.getBytes())])]}function p(n,r,i){var s={},o=[];if(!t.validate(r,i,s,o)){var u=new Error("Cannot read PKCS#7 message. ASN.1 object is not a supported PKCS#7 message.");throw u.errors=u,u}var a=t.derToOid(s.contentType);if(a!==e.pki.oids.data)throw new Error("Unsupported PKCS#7 message. Only wrapped ContentType Data supported.");if(s.encryptedContent){var f="";if(e.util.isArray(s.encryptedContent))for(var l=0;l<s.encryptedContent.length;++l){if(s.encryptedContent[l].type!==t.Type.OCTETSTRING)throw new Error("Malformed PKCS#7 message, expecting encrypted content constructed of only OCTET STRING objects.");f+=s.encryptedContent[l].value}else f=s.encryptedContent;n.encryptedContent={algorithm:t.derToOid(s.encAlgorithm),parameter:e.util.createBuffer(s.encParameter.value),content:e.util.createBuffer(f)}}if(s.content){var f="";if(e.util.isArray(s.content))for(var l=0;l<s.content.length;++l){if(s.content[l].type!==t.Type.OCTETSTRING)throw new Error("Malformed PKCS#7 message, expecting content constructed of only OCTET STRING objects.");f+=s.content[l].value}else f=s.content;n.content=e.util.createBuffer(f)}return n.version=s.version.charCodeAt(0),n.rawCapture=s,s}function d(t){if(t.encryptedContent.key===undefined)throw new Error("Symmetric key not available.");if(t.content===undefined){var n;switch(t.encryptedContent.algorithm){case e.pki.oids["aes128-CBC"]:case e.pki.oids["aes192-CBC"]:case e.pki.oids["aes256-CBC"]:n=e.aes.createDecryptionCipher(t.encryptedContent.key);break;case e.pki.oids.desCBC:case e.pki.oids["des-EDE3-CBC"]:n=e.des.createDecryptionCipher(t.encryptedContent.key);break;default:throw new Error("Unsupported symmetric cipher, OID "+t.encryptedContent.algorithm)}n.start(t.encryptedContent.parameter),n.update(t.encryptedContent.content);if(!n.finish())throw new Error("Symmetric decryption failed.");t.content=n.output}}var t=e.asn1,n=e.pkcs7=e.pkcs7||{};n.messageFromPem=function(r){var i=e.pem.decode(r)[0];if(i.type!=="PKCS7"){var s=new Error('Could not convert PKCS#7 message from PEM; PEM header type is not "PKCS#7".');throw s.headerType=i.type,s}if(i.procType&&i.procType.type==="ENCRYPTED")throw new Error("Could not convert PKCS#7 message from PEM; PEM is encrypted.");var o=t.fromDer(i.body);return n.messageFromAsn1(o)},n.messageToPem=function(n,r){var i={type:"PKCS7",body:t.toDer(n.toAsn1()).getBytes()};return e.pem.encode(i,{maxline:r})},n.messageFromAsn1=function(r){var i={},s=[];if(!t.validate(r,n.asn1.contentInfoValidator,i,s)){var o=new Error("Cannot read PKCS#7 message. ASN.1 object is not an PKCS#7 ContentInfo.");throw o.errors=s,o}var u=t.derToOid(i.contentType),a;switch(u){case e.pki.oids.envelopedData:a=n.createEnvelopedData();break;case e.pki.oids.encryptedData:a=n.createEncryptedData();break;case e.pki.oids.signedData:a=n.createSignedData();break;default:throw new Error("Cannot read PKCS#7 message. ContentType with OID "+u+" is not (yet) supported.")}return a.fromAsn1(i.content.value[0]),a},n.createSignedData=function(){function i(){var n={};for(var i=0;i<r.signers.length;++i){var s=r.signers[i],o=s.digestAlgorithm;o in n||(n[o]=e.md[e.pki.oids[o]].create()),s.authenticatedAttributes.length===0?s.md=n[o]:s.md=e.md[e.pki.oids[o]].create()}r.digestAlgorithmIdentifiers=[];for(var o in n)r.digestAlgorithmIdentifiers.push(t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(o).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.NULL,!1,"")]));return n}function s(n){if(r.contentInfo.value.length<2)throw new Error("Could not sign PKCS#7 message; there is no content to sign.");var i=t.derToOid(r.contentInfo.value[0].value),s=r.contentInfo.value[1];s=s.value[0];var o=t.toDer(s);o.getByte(),t.getBerValueLength(o),o=o.getBytes();for(var u in n)n[u].start().update(o);var a=new Date;for(var f=0;f<r.signers.length;++f){var h=r.signers[f];if(h.authenticatedAttributes.length===0){if(i!==e.pki.oids.data)throw new Error("Invalid signer; authenticatedAttributes must be present when the ContentInfo content type is not PKCS#7 Data.")}else{h.authenticatedAttributesAsn1=t.create(t.Class.CONTEXT_SPECIFIC,0,!0,[]);var p=t.create(t.Class.UNIVERSAL,t.Type.SET,!0,[]);for(var d=0;d<h.authenticatedAttributes.length;++d){var v=h.authenticatedAttributes[d];v.type===e.pki.oids.messageDigest?v.value=n[h.digestAlgorithm].digest():v.type===e.pki.oids.signingTime&&(v.value||(v.value=a)),p.value.push(c(v)),h.authenticatedAttributesAsn1.value.push(c(v))}o=t.toDer(p).getBytes(),h.md.start().update(o)}h.signature=h.key.sign(h.md,"RSASSA-PKCS1-V1_5")}r.signerInfos=l(r.signers)}var r=null;return r={type:e.pki.oids.signedData,version:1,certificates:[],crls:[],signers:[],digestAlgorithmIdentifiers:[],contentInfo:null,signerInfos:[],fromAsn1:function(t){p(r,t,n.asn1.signedDataValidator),r.certificates=[],r.crls=[],r.digestAlgorithmIdentifiers=[],r.contentInfo=null,r.signerInfos=[];var i=r.rawCapture.certificates.value;for(var s=0;s<i.length;++s)r.certificates.push(e.pki.certificateFromAsn1(i[s]))},toAsn1:function(){r.contentInfo||r.sign();var n=[];for(var i=0;i<r.certificates.length;++i)n.push(e.pki.certificateToAsn1(r.certificates[i]));var s=[],o=t.create(t.Class.CONTEXT_SPECIFIC,0,!0,[t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.INTEGER,!1,t.integerToDer(r.version).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.SET,!0,r.digestAlgorithmIdentifiers),r.contentInfo])]);return n.length>0&&o.value[0].value.push(t.create(t.Class.CONTEXT_SPECIFIC,0,!0,n)),s.length>0&&o.value[0].value.push(t.create(t.Class.CONTEXT_SPECIFIC,1,!0,s)),o.value[0].value.push(t.create(t.Class.UNIVERSAL,t.Type.SET,!0,r.signerInfos)),t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(r.type).getBytes()),o])},addSigner:function(t){var n=t.issuer,i=t.serialNumber;if(t.certificate){var s=t.certificate;typeof s=="string"&&(s=e.pki.certificateFromPem(s)),n=s.issuer.attributes,i=s.serialNumber}var o=t.key;if(!o)throw new Error("Could not add PKCS#7 signer; no private key specified.");typeof o=="string"&&(o=e.pki.privateKeyFromPem(o));var u=t.digestAlgorithm||e.pki.oids.sha1;switch(u){case e.pki.oids.sha1:case e.pki.oids.sha256:case e.pki.oids.sha384:case e.pki.oids.sha512:case e.pki.oids.md5:break;default:throw new Error("Could not add PKCS#7 signer; unknown message digest algorithm: "+u)}var a=t.authenticatedAttributes||[];if(a.length>0){var f=!1,l=!1;for(var c=0;c<a.length;++c){var h=a[c];if(!f&&h.type===e.pki.oids.contentType){f=!0;if(l)break;continue}if(!l&&h.type===e.pki.oids.messageDigest){l=!0;if(f)break;continue}}if(!f||!l)throw new Error("Invalid signer.authenticatedAttributes. If signer.authenticatedAttributes is specified, then it must contain at least two attributes, PKCS #9 content-type and PKCS #9 message-digest.")}r.signers.push({key:o,version:1,issuer:n,serialNumber:i,digestAlgorithm:u,signatureAlgorithm:e.pki.oids.rsaEncryption,signature:null,authenticatedAttributes:a,unauthenticatedAttributes:[]})},sign:function(){if(typeof r.content!="object"||r.contentInfo===null){r.contentInfo=t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(e.pki.oids.data).getBytes())]);if("content"in r){var n;r.content instanceof e.util.ByteBuffer?n=r.content.bytes():typeof r.content=="string"&&(n=e.util.encodeUtf8(r.content)),r.contentInfo.value.push(t.create(t.Class.CONTEXT_SPECIFIC,0,!0,[t.create(t.Class.UNIVERSAL,t.Type.OCTETSTRING,!1,n)]))}}if(r.signers.length===0)return;var o=i();s(o)},verify:function(){throw new Error("PKCS#7 signature verification not yet implemented.")},addCertificate:function(t){typeof t=="string"&&(t=e.pki.certificateFromPem(t)),r.certificates.push(t)},addCertificateRevokationList:function(e){throw new Error("PKCS#7 CRL support not yet implemented.")}},r},n.createEncryptedData=function(){var t=null;return t={type:e.pki.oids.encryptedData,version:0,encryptedContent:{algorithm:e.pki.oids["aes256-CBC"]},fromAsn1:function(e){p(t,e,n.asn1.encryptedDataValidator)},decrypt:function(e){e!==undefined&&(t.encryptedContent.key=e),d(t)}},t},n.createEnvelopedData=function(){var r=null;return r={type:e.pki.oids.envelopedData,version:0,recipients:[],encryptedContent:{algorithm:e.pki.oids["aes256-CBC"]},fromAsn1:function(e){var t=p(r,e,n.asn1.envelopedDataValidator);r.recipients=s(t.recipientInfos.value)},toAsn1:function(){return t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.OID,!1,t.oidToDer(r.type).getBytes()),t.create(t.Class.CONTEXT_SPECIFIC,0,!0,[t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,[t.create(t.Class.UNIVERSAL,t.Type.INTEGER,!1,t.integerToDer(r.version).getBytes()),t.create(t.Class.UNIVERSAL,t.Type.SET,!0,o(r.recipients)),t.create(t.Class.UNIVERSAL,t.Type.SEQUENCE,!0,h(r.encryptedContent))])])])},findRecipient:function(e){var t=e.issuer.attributes;for(var n=0;n<r.recipients.length;++n){var i=r.recipients[n],s=i.issuer;if(i.serialNumber!==e.serialNumber)continue;if(s.length!==t.length)continue;var o=!0;for(var u=0;u<t.length;++u)if(s[u].type!==t[u].type||s[u].value!==t[u].value){o=!1;break}if(o)return i}return null},decrypt:function(t,n){if(r.encryptedContent.key===undefined&&t!==undefined&&n!==undefined)switch(t.encryptedContent.algorithm){case e.pki.oids.rsaEncryption:case e.pki.oids.desCBC:var i=n.decrypt(t.encryptedContent.content);r.encryptedContent.key=e.util.createBuffer(i);break;default:throw new Error("Unsupported asymmetric cipher, OID "+t.encryptedContent.algorithm)}d(r)},addRecipient:function(t){r.recipients.push({version:0,issuer:t.issuer.attributes,serialNumber:t.serialNumber,encryptedContent:{algorithm:e.pki.oids.rsaEncryption,key:t.publicKey}})},encrypt:function(t,n){if(r.encryptedContent.content===undefined){n=n||r.encryptedContent.algorithm,t=t||r.encryptedContent.key;var i,s,o;switch(n){case e.pki.oids["aes128-CBC"]:i=16,s=16,o=e.aes.createEncryptionCipher;break;case e.pki.oids["aes192-CBC"]:i=24,s=16,o=e.aes.createEncryptionCipher;break;case e.pki.oids["aes256-CBC"]:i=32,s=16,o=e.aes.createEncryptionCipher;break;case e.pki.oids["des-EDE3-CBC"]:i=24,s=8,o=e.des.createEncryptionCipher;break;default:throw new Error("Unsupported symmetric cipher, OID "+n)}if(t===undefined)t=e.util.createBuffer(e.random.getBytes(i));else if(t.length()!=i)throw new Error("Symmetric key has wrong length; got "+t.length()+" bytes, expected "+i+".");r.encryptedContent.algorithm=n,r.encryptedContent.key=t,r.encryptedContent.parameter=e.util.createBuffer(e.random.getBytes(s));var u=o(t);u.start(r.encryptedContent.parameter.copy()),u.update(r.content);if(!u.finish())throw new Error("Symmetric encryption failed.");r.encryptedContent.content=u.output}for(var a=0;a<r.recipients.length;++a){var f=r.recipients[a];if(f.encryptedContent.content!==undefined)continue;switch(f.encryptedContent.algorithm){case e.pki.oids.rsaEncryption:f.encryptedContent.content=f.encryptedContent.key.encrypt(r.encryptedContent.key.data);break;default:throw new Error("Unsupported asymmetric cipher, OID "+f.encryptedContent.algorithm)}}}},r}}var r="pkcs7";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/pkcs7",["require","module","./aes","./asn1","./des","./oids","./pem","./pkcs7asn1","./random","./util","./x509"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){function n(t,n){var r=n.toString(16);r[0]>="8"&&(r="00"+r);var i=e.util.hexToBytes(r);t.putInt32(i.length),t.putBytes(i)}function r(e,t){e.putInt32(t.length),e.putString(t)}function i(){var t=e.md.sha1.create(),n=arguments.length;for(var r=0;r<n;++r)t.update(arguments[r]);return t.digest()}var t=e.ssh=e.ssh||{};t.privateKeyToPutty=function(t,s,o){o=o||"",s=s||"";var u="ssh-rsa",a=s===""?"none":"aes256-cbc",f="PuTTY-User-Key-File-2: "+u+"\r\n";f+="Encryption: "+a+"\r\n",f+="Comment: "+o+"\r\n";var l=e.util.createBuffer();r(l,u),n(l,t.e),n(l,t.n);var c=e.util.encode64(l.bytes(),64),h=Math.floor(c.length/66)+1;f+="Public-Lines: "+h+"\r\n",f+=c;var p=e.util.createBuffer();n(p,t.d),n(p,t.p),n(p,t.q),n(p,t.qInv);var d;if(!s)d=e.util.encode64(p.bytes(),64);else{var v=p.length()+16-1;v-=v%16;var m=i(p.bytes());m.truncate(m.length()-v+p.length()),p.putBuffer(m);var g=e.util.createBuffer();g.putBuffer(i("\0\0\0\0",s)),g.putBuffer(i("\0\0\0",s));var y=e.aes.createEncryptionCipher(g.truncate(8),"CBC");y.start(e.util.createBuffer().fillWithByte(0,16)),y.update(p.copy()),y.finish();var b=y.output;b.truncate(16),d=e.util.encode64(b.bytes(),64)}h=Math.floor(d.length/66)+1,f+="\r\nPrivate-Lines: "+h+"\r\n",f+=d;var w=i("putty-private-key-file-mac-key",s),E=e.util.createBuffer();r(E,u),r(E,a),r(E,o),E.putInt32(l.length()),E.putBuffer(l),E.putInt32(p.length()),E.putBuffer(p);var S=e.hmac.create();return S.start("sha1",w),S.update(E.bytes()),f+="\r\nPrivate-MAC: "+S.digest().toHex()+"\r\n",f},t.publicKeyToOpenSSH=function(t,i){var s="ssh-rsa";i=i||"";var o=e.util.createBuffer();return r(o,s),n(o,t.e),n(o,t.n),s+" "+e.util.encode64(o.bytes())+" "+i},t.privateKeyToOpenSSH=function(t,n){return n?e.pki.encryptRsaPrivateKey(t,n,{legacy:!0,algorithm:"aes128"}):e.pki.privateKeyToPem(t)},t.getPublicKeyFingerprint=function(t,i){i=i||{};var s=i.md||e.md.md5.create(),o="ssh-rsa",u=e.util.createBuffer();r(u,o),n(u,t.e),n(u,t.n),s.start(),s.update(u.getBytes());var a=s.digest();if(i.encoding==="hex"){var f=a.toHex();return i.delimiter?f.match(/.{2}/g).join(i.delimiter):f}if(i.encoding==="binary")return a.getBytes();if(i.encoding)throw new Error('Unknown encoding "'+i.encoding+'".');return a}}var r="ssh";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/ssh",["require","module","./aes","./hmac","./md5","./sha1","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){function e(e){var t="forge.task",n=0,r={},i=0;e.debug.set(t,"tasks",r);var s={};e.debug.set(t,"queues",s);var o="?",u=30,a=20,f="ready",l="running",c="blocked",h="sleeping",p="done",d="error",v="stop",m="start",g="block",y="unblock",b="sleep",w="wakeup",E="cancel",S="fail",x={};x[f]={},x[f][v]=f,x[f][m]=l,x[f][E]=p,x[f][S]=d,x[l]={},x[l][v]=f,x[l][m]=l,x[l][g]=c,x[l][y]=l,x[l][b]=h,x[l][w]=l,x[l][E]=p,x[l][S]=d,x[c]={},x[c][v]=c,x[c][m]=c,x[c][g]=c,x[c][y]=c,x[c][b]=c,x[c][w]=c,x[c][E]=p,x[c][S]=d,x[h]={},x[h][v]=h,x[h][m]=h,x[h][g]=h,x[h][y]=h,x[h][b]=h,x[h][w]=h,x[h][E]=p,x[h][S]=d,x[p]={},x[p][v]=p,x[p][m]=p,x[p][g]=p,x[p][y]=p,x[p][b]=p,x[p][w]=p,x[p][E]=p,x[p][S]=d,x[d]={},x[d][v]=d,x[d][m]=d,x[d][g]=d,x[d][y]=d,x[d][b]=d,x[d][w]=d,x[d][E]=d,x[d][S]=d;var T=function(s){this.id=-1,this.name=s.name||o,this.parent=s.parent||null,this.run=s.run,this.subtasks=[],this.error=!1,this.state=f,this.blocks=0,this.timeoutId=null,this.swapTime=null,this.userData=null,this.id=i++,r[this.id]=this,n>=1&&e.log.verbose(t,"[%s][%s] init",this.id,this.name,this)};T.prototype.debug=function(n){n=n||"",e.log.debug(t,n,"[%s][%s] task:",this.id,this.name,this,"subtasks:",this.subtasks.length,"queue:",s)},T.prototype.next=function(e,t){typeof e=="function"&&(t=e,e=this.name);var n=new T({run:t,name:e,parent:this});return n.state=l,n.type=this.type,n.successCallback=this.successCallback||null,n.failureCallback=this.failureCallback||null,this.subtasks.push(n),this},T.prototype.parallel=function(t,n){return e.util.isArray(t)&&(n=t,t=this.name),this.next(t,function(r){var i=r;i.block(n.length);var s=function(t,r){e.task.start({type:t,run:function(e){n[r](e)},success:function(e){i.unblock()},failure:function(e){i.unblock()}})};for(var o=0;o<n.length;o++){var u=t+"__parallel-"+r.id+"-"+o,a=o;s(u,a)}})},T.prototype.stop=function(){this.state=x[this.state][v]},T.prototype.start=function(){this.error=!1,this.state=x[this.state][m],this.state===l&&(this.start=new Date,this.run(this),C(this,0))},T.prototype.block=function(e){e=typeof e=="undefined"?1:e,this.blocks+=e,this.blocks>0&&(this.state=x[this.state][g])},T.prototype.unblock=function(e){return e=typeof e=="undefined"?1:e,this.blocks-=e,this.blocks===0&&this.state!==p&&(this.state=l,C(this,0)),this.blocks},T.prototype.sleep=function(e){e=typeof e=="undefined"?0:e,this.state=x[this.state][b];var t=this;this.timeoutId=setTimeout(function(){t.timeoutId=null,t.state=l,C(t,0)},e)},T.prototype.wait=function(e){e.wait(this)},T.prototype.wakeup=function(){this.state===h&&(cancelTimeout(this.timeoutId),this.timeoutId=null,this.state=l,C(this,0))},T.prototype.cancel=function(){this.state=x[this.state][E],this.permitsNeeded=0,this.timeoutId!==null&&(cancelTimeout(this.timeoutId),this.timeoutId=null),this.subtasks=[]},T.prototype.fail=function(e){this.error=!0,k(this,!0);if(e)e.error=this.error,e.swapTime=this.swapTime,e.userData=this.userData,C(e,0);else{if(this.parent!==null){var t=this.parent;while(t.parent!==null)t.error=this.error,t.swapTime=this.swapTime,t.userData=this.userData,t=t.parent;k(t,!0)}this.failureCallback&&this.failureCallback(this)}};var N=function(e){e.error=!1,e.state=x[e.state][m],setTimeout(function(){e.state===l&&(e.swapTime=+(new Date),e.run(e),C(e,0))},0)},C=function(e,t){var n=t>u||+(new Date)-e.swapTime>a,r=function(t){t++;if(e.state===l){n&&(e.swapTime=+(new Date));if(e.subtasks.length>0){var r=e.subtasks.shift();r.error=e.error,r.swapTime=e.swapTime,r.userData=e.userData,r.run(r),r.error||C(r,t)}else k(e),e.error||e.parent!==null&&(e.parent.error=e.error,e.parent.swapTime=e.swapTime,e.parent.userData=e.userData,C(e.parent,t))}};n?setTimeout(r,0):r(t)},k=function(i,o){i.state=p,delete r[i.id],n>=1&&e.log.verbose(t,"[%s][%s] finish",i.id,i.name,i),i.parent===null&&(i.type in s?s[i.type].length===0?e.log.error(t,"[%s][%s] task queue empty [%s]",i.id,i.name,i.type):s[i.type][0]!==i?e.log.error(t,"[%s][%s] task not first in queue [%s]",i.id,i.name,i.type):(s[i.type].shift(),s[i.type].length===0?(n>=1&&e.log.verbose(t,"[%s][%s] delete queue [%s]",i.id,i.name,i.type),delete s[i.type]):(n>=1&&e.log.verbose(t,"[%s][%s] queue start next [%s] remain:%s",i.id,i.name,i.type,s[i.type].length),s[i.type][0].start())):e.log.error(t,"[%s][%s] task queue missing [%s]",i.id,i.name,i.type),o||(i.error&&i.failureCallback?i.failureCallback(i):!i.error&&i.successCallback&&i.successCallback(i)))};e.task=e.task||{},e.task.start=function(r){var i=new T({run:r.run,name:r.name||o});i.type=r.type,i.successCallback=r.success||null,i.failureCallback=r.failure||null,i.type in s?s[r.type].push(i):(n>=1&&e.log.verbose(t,"[%s][%s] create queue [%s]",i.id,i.name,i.type),s[i.type]=[i],N(i))},e.task.cancel=function(e){e in s&&(s[e]=[s[e][0]])},e.task.createCondition=function(){var e={tasks:{}};return e.wait=function(t){t.id in e.tasks||(t.block(),e.tasks[t.id]=t)},e.notify=function(){var t=e.tasks;e.tasks={};for(var n in t)t[n].unblock()},e}}var r="task";if(typeof n!="function"){if(typeof module!="object"||!module.exports)return typeof forge=="undefined"&&(forge={}),e(forge);var i=!0;n=function(e,n){n(t,module)}}var s,o=function(t,n){n.exports=function(n){var i=s.map(function(e){return t(e)}).concat(e);n=n||{},n.defined=n.defined||{};if(n.defined[r])return n[r];n.defined[r]=!0;for(var o=0;o<i.length;++o)i[o](n);return n[r]}},u=n;n=function(e,t){return s=typeof e=="string"?t.slice(2):e.slice(2),i?(delete n,u.apply(null,Array.prototype.slice.call(arguments,0))):(n=u,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/task",["require","module","./debug","./log","./util"],function(){o.apply(null,Array.prototype.slice.call(arguments,0))})}(),function(){var e="forge";if(typeof n!="function"){if(typeof module!="object"||!module.exports){typeof forge=="undefined"&&(forge={disableNativeCode:!1});return}var r=!0;n=function(e,n){n(t,module)}}var i,s=function(t,n){n.exports=function(n){var r=i.map(function(e){return t(e)});n=n||{},n.defined=n.defined||{};if(n.defined[e])return n[e];n.defined[e]=!0;for(var s=0;s<r.length;++s)r[s](n);return n},n.exports.disableNativeCode=!1,n.exports(n.exports)},o=n;n=function(e,t){return i=typeof e=="string"?t.slice(2):e.slice(2),r?(delete n,o.apply(null,Array.prototype.slice.call(arguments,0))):(n=o,n.apply(null,Array.prototype.slice.call(arguments,0)))},n("js/forge",["require","module","./aes","./aesCipherSuites","./asn1","./cipher","./cipherModes","./debug","./des","./hmac","./kem","./log","./md","./mgf1","./pbkdf2","./pem","./pkcs7","./pkcs1","./pkcs12","./pki","./prime","./prng","./pss","./random","./rc2","./ssh","./task","./tls","./util"],function(){s.apply(null,Array.prototype.slice.call(arguments,0))})}(),t("js/forge")});/*
 * Copyright 2016 Red Hat, Inc. and/or its affiliates
 * and other contributors as indicated by the @author tags.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function( window, undefined ) {

    var Keycloak = function (config) {
        if (!(this instanceof Keycloak)) {
            return new Keycloak(config);
        }

        var kc = this;
        var adapter;
        var refreshQueue = [];
        var callbackStorage;

        var loginIframe = {
            enable: true,
            callbackList: [],
            interval: 5
        };

        var scripts = document.getElementsByTagName('script');
        for (var i = 0; i < scripts.length; i++) {
            if ((scripts[i].src.indexOf('keycloak.js') !== -1 || scripts[i].src.indexOf('keycloak.min.js') !== -1) && scripts[i].src.indexOf('version=') !== -1) {
                kc.iframeVersion = scripts[i].src.substring(scripts[i].src.indexOf('version=') + 8).split('&')[0];
            }
        }

        var useNonce = true;
        
        kc.init = function (initOptions) {
            kc.authenticated = false;

            callbackStorage = createCallbackStorage();
            var adapters = ['default', 'cordova', 'cordova-native'];

            if (initOptions && adapters.indexOf(initOptions.adapter) > -1) {
                adapter = loadAdapter(initOptions.adapter);
            } else if (initOptions && typeof initOptions.adapter === "object") {
                adapter = initOptions.adapter;
            } else {
                if (window.Cordova || window.cordova) {
                    adapter = loadAdapter('cordova');
                } else {
                    adapter = loadAdapter();
                }
            }

            if (initOptions) {
                if (typeof initOptions.useNonce !== 'undefined') {
                    useNonce = initOptions.useNonce;
                }

                if (typeof initOptions.checkLoginIframe !== 'undefined') {
                    loginIframe.enable = initOptions.checkLoginIframe;
                }

                if (initOptions.checkLoginIframeInterval) {
                    loginIframe.interval = initOptions.checkLoginIframeInterval;
                }

                if (initOptions.onLoad === 'login-required') {
                    kc.loginRequired = true;
                }

                if (initOptions.responseMode) {
                    if (initOptions.responseMode === 'query' || initOptions.responseMode === 'fragment') {
                        kc.responseMode = initOptions.responseMode;
                    } else {
                        throw 'Invalid value for responseMode';
                    }
                }

                if (initOptions.flow) {
                    switch (initOptions.flow) {
                        case 'standard':
                            kc.responseType = 'code';
                            break;
                        case 'implicit':
                            kc.responseType = 'id_token token';
                            break;
                        case 'hybrid':
                            kc.responseType = 'code id_token token';
                            break;
                        default:
                            throw 'Invalid value for flow';
                    }
                    kc.flow = initOptions.flow;
                }

                if (initOptions.timeSkew != null) {
                    kc.timeSkew = initOptions.timeSkew;
                }

                if(initOptions.redirectUri) {
                    kc.redirectUri = initOptions.redirectUri;
                }
            }

            if (!kc.responseMode) {
                kc.responseMode = 'fragment';
            }
            if (!kc.responseType) {
                kc.responseType = 'code';
                kc.flow = 'standard';
            }

            var promise = createPromise();

            var initPromise = createPromise();
            initPromise.promise.success(function() {
                kc.onReady && kc.onReady(kc.authenticated);
                promise.setSuccess(kc.authenticated);
            }).error(function(errorData) {
                promise.setError(errorData);
            });

            var configPromise = loadConfig(config);

            function onLoad() {
                var doLogin = function(prompt) {
                    if (!prompt) {
                        options.prompt = 'none';
                    }
                    kc.login(options).success(function () {
                        initPromise.setSuccess();
                    }).error(function () {
                        initPromise.setError();
                    });
                }

                var options = {};
                switch (initOptions.onLoad) {
                    case 'check-sso':
                        if (loginIframe.enable) {
                            setupCheckLoginIframe().success(function() {
                                checkLoginIframe().success(function () {
                                    doLogin(false);
                                }).error(function () {
                                    initPromise.setSuccess();
                                });
                            });
                        } else {
                            doLogin(false);
                        }
                        break;
                    case 'login-required':
                        doLogin(true);
                        break;
                    default:
                        throw 'Invalid value for onLoad';
                }
            }

            function processInit() {
                var callback = parseCallback(window.location.href);

                if (callback) {
                    window.history.replaceState({}, null, callback.newUrl);
                }

                if (callback && callback.valid) {
                    return setupCheckLoginIframe().success(function() {
                        processCallback(callback, initPromise);
                    }).error(function (e) {
                        initPromise.setError();
                    });
                } else if (initOptions) {
                    if (initOptions.token && initOptions.refreshToken) {
                        setToken(initOptions.token, initOptions.refreshToken, initOptions.idToken);

                        if (loginIframe.enable) {
                            setupCheckLoginIframe().success(function() {
                                checkLoginIframe().success(function () {
                                    kc.onAuthSuccess && kc.onAuthSuccess();
                                    initPromise.setSuccess();
                                }).error(function () {
                                    setToken(null, null, null);
                                    initPromise.setSuccess();
                                });
                            });
                        } else {
                            kc.updateToken(-1).success(function() {
                                kc.onAuthSuccess && kc.onAuthSuccess();
                                initPromise.setSuccess();
                            }).error(function() {
                                kc.onAuthError && kc.onAuthError();
                                if (initOptions.onLoad) {
                                    onLoad();
                                } else {
                                    initPromise.setError();
                                }
                            });
                        }
                    } else if (initOptions.onLoad) {
                        onLoad();
                    } else {
                        initPromise.setSuccess();
                    }
                } else {
                    initPromise.setSuccess();
                }
            }

            configPromise.success(processInit);
            configPromise.error(function() {
                promise.setError();
            });

            return promise.promise;
        }

        kc.login = function (options) {
            return adapter.login(options);
        }

        kc.createLoginUrl = function(options) {
            var state = createUUID();
            var nonce = createUUID();

            var redirectUri = adapter.redirectUri(options);

            var callbackState = {
                state: state,
                nonce: nonce,
                redirectUri: encodeURIComponent(redirectUri)
            }

            if (options && options.prompt) {
                callbackState.prompt = options.prompt;
            }

            callbackStorage.add(callbackState);

            var baseUrl;
            if (options && options.action == 'register') {
                baseUrl = kc.endpoints.register();
            } else {
                baseUrl = kc.endpoints.authorize();
            }

            var scope;
            if (options && options.scope) {
                if (options.scope.indexOf("openid") != -1) {
                    scope = options.scope;
                } else {
                    scope = "openid " + options.scope;
                }
            } else {
                scope = "openid";
            }

            var url = baseUrl
                + '?client_id=' + encodeURIComponent(kc.clientId)
                + '&redirect_uri=' + encodeURIComponent(redirectUri)
                + '&state=' + encodeURIComponent(state)
                + '&response_mode=' + encodeURIComponent(kc.responseMode)
                + '&response_type=' + encodeURIComponent(kc.responseType)
                + '&scope=' + encodeURIComponent(scope);
                if (useNonce) {
                    url = url + '&nonce=' + encodeURIComponent(nonce);
                }

            if (options && options.prompt) {
                url += '&prompt=' + encodeURIComponent(options.prompt);
            }

            if (options && options.maxAge) {
                url += '&max_age=' + encodeURIComponent(options.maxAge);
            }

            if (options && options.loginHint) {
                url += '&login_hint=' + encodeURIComponent(options.loginHint);
            }

            if (options && options.idpHint) {
                url += '&kc_idp_hint=' + encodeURIComponent(options.idpHint);
            }

            if (options && options.locale) {
                url += '&ui_locales=' + encodeURIComponent(options.locale);
            }
            
            if (options && options.kcLocale) {
                url += '&kc_locale=' + encodeURIComponent(options.kcLocale);
            }

            return url;
        }

        kc.logout = function(options) {
            return adapter.logout(options);
        }

        kc.createLogoutUrl = function(options) {
            var url = kc.endpoints.logout()
                + '?redirect_uri=' + encodeURIComponent(adapter.redirectUri(options, false));

            return url;
        }

        kc.register = function (options) {
            return adapter.register(options);
        }

        kc.createRegisterUrl = function(options) {
            if (!options) {
                options = {};
            }
            options.action = 'register';
            return kc.createLoginUrl(options);
        }

        kc.createAccountUrl = function(options) {
            var realm = getRealmUrl();
            var url = undefined;
            if (typeof realm !== 'undefined') {
                url = realm
                + '/account'
                + '?referrer=' + encodeURIComponent(kc.clientId)
                + '&referrer_uri=' + encodeURIComponent(adapter.redirectUri(options));
            }
            return url;
        }

        kc.accountManagement = function() {
            return adapter.accountManagement();
        }

        kc.hasRealmRole = function (role) {
            var access = kc.realmAccess;
            return !!access && access.roles.indexOf(role) >= 0;
        }

        kc.hasResourceRole = function(role, resource) {
            if (!kc.resourceAccess) {
                return false;
            }

            var access = kc.resourceAccess[resource || kc.clientId];
            return !!access && access.roles.indexOf(role) >= 0;
        }

        kc.loadUserProfile = function() {
            var url = getRealmUrl() + '/account';
            var req = new XMLHttpRequest();
            req.open('GET', url, true);
            req.setRequestHeader('Accept', 'application/json');
            req.setRequestHeader('Authorization', 'bearer ' + kc.token);

            var promise = createPromise();

            req.onreadystatechange = function () {
                if (req.readyState == 4) {
                    if (req.status == 200) {
                        kc.profile = JSON.parse(req.responseText);
                        promise.setSuccess(kc.profile);
                    } else {
                        promise.setError();
                    }
                }
            }

            req.send();

            return promise.promise;
        }

        kc.loadUserInfo = function() {
            var url = kc.endpoints.userinfo();
            var req = new XMLHttpRequest();
            req.open('GET', url, true);
            req.setRequestHeader('Accept', 'application/json');
            req.setRequestHeader('Authorization', 'bearer ' + kc.token);

            var promise = createPromise();

            req.onreadystatechange = function () {
                if (req.readyState == 4) {
                    if (req.status == 200) {
                        kc.userInfo = JSON.parse(req.responseText);
                        promise.setSuccess(kc.userInfo);
                    } else {
                        promise.setError();
                    }
                }
            }

            req.send();

            return promise.promise;
        }

        kc.isTokenExpired = function(minValidity) {
            if (!kc.tokenParsed || (!kc.refreshToken && kc.flow != 'implicit' )) {
                throw 'Not authenticated';
            }

            if (kc.timeSkew == null) {
                console.info('[KEYCLOAK] Unable to determine if token is expired as timeskew is not set');
                return true;
            }

            var expiresIn = kc.tokenParsed['exp'] - Math.ceil(new Date().getTime() / 1000) + kc.timeSkew;
            if (minValidity) {
                expiresIn -= minValidity;
            }
            return expiresIn < 0;
        }

        kc.updateToken = function(minValidity) {
            var promise = createPromise();

            if (!kc.refreshToken) {
                promise.setError();
                return promise.promise;
            }

            minValidity = minValidity || 5;

            var exec = function() {
                var refreshToken = false;
                if (minValidity == -1) {
                    refreshToken = true;
                    console.info('[KEYCLOAK] Refreshing token: forced refresh');
                } else if (!kc.tokenParsed || kc.isTokenExpired(minValidity)) {
                    refreshToken = true;
                    console.info('[KEYCLOAK] Refreshing token: token expired');
                }

                if (!refreshToken) {
                    promise.setSuccess(false);
                } else {
                    var params = 'grant_type=refresh_token&' + 'refresh_token=' + kc.refreshToken;
                    var url = kc.endpoints.token();

                    refreshQueue.push(promise);

                    if (refreshQueue.length == 1) {
                        var req = new XMLHttpRequest();
                        req.open('POST', url, true);
                        req.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
                        req.withCredentials = true;

                        if (kc.clientId && kc.clientSecret) {
                            req.setRequestHeader('Authorization', 'Basic ' + btoa(kc.clientId + ':' + kc.clientSecret));
                        } else {
                            params += '&client_id=' + encodeURIComponent(kc.clientId);
                        }

                        var timeLocal = new Date().getTime();

                        req.onreadystatechange = function () {
                            if (req.readyState == 4) {
                                if (req.status == 200) {
                                    console.info('[KEYCLOAK] Token refreshed');

                                    timeLocal = (timeLocal + new Date().getTime()) / 2;

                                    var tokenResponse = JSON.parse(req.responseText);

                                    setToken(tokenResponse['access_token'], tokenResponse['refresh_token'], tokenResponse['id_token'], timeLocal);

                                    kc.onAuthRefreshSuccess && kc.onAuthRefreshSuccess();
                                    for (var p = refreshQueue.pop(); p != null; p = refreshQueue.pop()) {
                                        p.setSuccess(true);
                                    }
                                } else {
                                    console.warn('[KEYCLOAK] Failed to refresh token');

                                    if (req.status == 400) {
                                        kc.clearToken();
                                    }

                                    kc.onAuthRefreshError && kc.onAuthRefreshError();
                                    for (var p = refreshQueue.pop(); p != null; p = refreshQueue.pop()) {
                                        p.setError(true);
                                    }
                                }
                            }
                        };

                        req.send(params);
                    }
                }
            }

            if (loginIframe.enable) {
                var iframePromise = checkLoginIframe();
                iframePromise.success(function() {
                    exec();
                }).error(function() {
                    promise.setError();
                });
            } else {
                exec();
            }

            return promise.promise;
        }

        kc.clearToken = function() {
            if (kc.token) {
                setToken(null, null, null);
                kc.onAuthLogout && kc.onAuthLogout();
                if (kc.loginRequired) {
                    kc.login();
                }
            }
        }

        function getRealmUrl() {
            if (typeof kc.authServerUrl !== 'undefined') {
                if (kc.authServerUrl.charAt(kc.authServerUrl.length - 1) == '/') {
                    return kc.authServerUrl + 'realms/' + encodeURIComponent(kc.realm);
                } else {
                    return kc.authServerUrl + '/realms/' + encodeURIComponent(kc.realm);
                }
            } else {
            	return undefined;
            }
        }

        function getOrigin() {
            if (!window.location.origin) {
                return window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');
            } else {
                return window.location.origin;
            }
        }

        function processCallback(oauth, promise) {
            var code = oauth.code;
            var error = oauth.error;
            var prompt = oauth.prompt;

            var timeLocal = new Date().getTime();

            if (error) {
                if (prompt != 'none') {
                    var errorData = { error: error, error_description: oauth.error_description };
                    kc.onAuthError && kc.onAuthError(errorData);
                    promise && promise.setError(errorData);
                } else {
                    promise && promise.setSuccess();
                }
                return;
            } else if ((kc.flow != 'standard') && (oauth.access_token || oauth.id_token)) {
                authSuccess(oauth.access_token, null, oauth.id_token, true);
            }

            if ((kc.flow != 'implicit') && code) {
                var params = 'code=' + code + '&grant_type=authorization_code';
                var url = kc.endpoints.token();

                var req = new XMLHttpRequest();
                req.open('POST', url, true);
                req.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');

                if (kc.clientId && kc.clientSecret) {
                    req.setRequestHeader('Authorization', 'Basic ' + btoa(kc.clientId + ':' + kc.clientSecret));
                } else {
                    params += '&client_id=' + encodeURIComponent(kc.clientId);
                }

                params += '&redirect_uri=' + oauth.redirectUri;

                req.withCredentials = true;

                req.onreadystatechange = function() {
                    if (req.readyState == 4) {
                        if (req.status == 200) {

                            var tokenResponse = JSON.parse(req.responseText);
                            authSuccess(tokenResponse['access_token'], tokenResponse['refresh_token'], tokenResponse['id_token'], kc.flow === 'standard');
                        } else {
                            kc.onAuthError && kc.onAuthError();
                            promise && promise.setError();
                        }
                    }
                };

                req.send(params);
            }

            function authSuccess(accessToken, refreshToken, idToken, fulfillPromise) {
                timeLocal = (timeLocal + new Date().getTime()) / 2;

                setToken(accessToken, refreshToken, idToken, timeLocal);

                if (useNonce && ((kc.tokenParsed && kc.tokenParsed.nonce != oauth.storedNonce) ||
                    (kc.refreshTokenParsed && kc.refreshTokenParsed.nonce != oauth.storedNonce) ||
                    (kc.idTokenParsed && kc.idTokenParsed.nonce != oauth.storedNonce))) {

                    console.info('[KEYCLOAK] Invalid nonce, clearing token');
                    kc.clearToken();
                    promise && promise.setError();
                } else {
                    if (fulfillPromise) {
                        kc.onAuthSuccess && kc.onAuthSuccess();
                        promise && promise.setSuccess();
                    }
                }
            }

        }

        function loadConfig(url) {
            var promise = createPromise();
            var configUrl;

            if (!config) {
                configUrl = 'keycloak.json';
            } else if (typeof config === 'string') {
                configUrl = config;
            }

            function setupOidcEndoints(oidcConfiguration) {
                if (! oidcConfiguration) {
                    kc.endpoints = {
                        authorize: function() {
                            return getRealmUrl() + '/protocol/openid-connect/auth';
                        },
                        token: function() {
                            return getRealmUrl() + '/protocol/openid-connect/token';
                        },
                        logout: function() {
                            return getRealmUrl() + '/protocol/openid-connect/logout';
                        },
                        checkSessionIframe: function() {
                            var src = getRealmUrl() + '/protocol/openid-connect/login-status-iframe.html';
                            if (kc.iframeVersion) {
                              src = src + '?version=' + kc.iframeVersion;
                            }
                            return src;
                        },
                        register: function() {
                            return getRealmUrl() + '/protocol/openid-connect/registrations';
                        },
                        userinfo: function() {
                            return getRealmUrl() + '/protocol/openid-connect/userinfo';
                        }
                    };
                } else {
                    kc.endpoints = {
                        authorize: function() {
                            return oidcConfiguration.authorization_endpoint;
                        },
                        token: function() {
                            return oidcConfiguration.token_endpoint;
                        },
                        logout: function() {
                            if (!oidcConfiguration.end_session_endpoint) {
                                throw "Not supported by the OIDC server";
                            }
                            return oidcConfiguration.end_session_endpoint;
                        },
                        checkSessionIframe: function() {
                            if (!oidcConfiguration.check_session_iframe) {
                                throw "Not supported by the OIDC server";
                            }
                            return oidcConfiguration.check_session_iframe;
                        },
                        register: function() {
                            throw 'Redirection to "Register user" page not supported in standard OIDC mode';
                        },
                        userinfo: function() {
                            if (!oidcConfiguration.userinfo_endpoint) {
                                throw "Not supported by the OIDC server";
                            }
                            return oidcConfiguration.userinfo_endpoint;
                        }
                    }
                }
            }

            if (configUrl) {
                var req = new XMLHttpRequest();
                req.open('GET', configUrl, true);
                req.setRequestHeader('Accept', 'application/json');

                req.onreadystatechange = function () {
                    if (req.readyState == 4) {
                        if (req.status == 200 || fileLoaded(req)) {
                            var config = JSON.parse(req.responseText);

                            kc.authServerUrl = config['auth-server-url'];
                            kc.realm = config['realm'];
                            kc.clientId = config['resource'];
                            kc.clientSecret = (config['credentials'] || {})['secret'];
                            setupOidcEndoints(null);
                            promise.setSuccess();
                        } else {
                            promise.setError();
                        }
                    }
                };

                req.send();
            } else {
                if (!config.clientId) {
                    throw 'clientId missing';
                }

                kc.clientId = config.clientId;
                kc.clientSecret = (config.credentials || {}).secret;

                var oidcProvider = config['oidcProvider'];
                if (!oidcProvider) {
                    if (!config['url']) {
                        var scripts = document.getElementsByTagName('script');
                        for (var i = 0; i < scripts.length; i++) {
                            if (scripts[i].src.match(/.*keycloak\.js/)) {
                                config.url = scripts[i].src.substr(0, scripts[i].src.indexOf('/js/keycloak.js'));
                                break;
                            }
                        }
                    }
                    if (!config.realm) {
                        throw 'realm missing';
                    }

                    kc.authServerUrl = config.url;
                    kc.realm = config.realm;
                    setupOidcEndoints(null);
                    promise.setSuccess();
                } else {
                    if (typeof oidcProvider === 'string') {
                        var oidcProviderConfigUrl;
                        if (oidcProvider.charAt(oidcProvider.length - 1) == '/') {
                            oidcProviderConfigUrl = oidcProvider + '.well-known/openid-configuration';
                        } else {
                            oidcProviderConfigUrl = oidcProvider + '/.well-known/openid-configuration';
                        }
                        var req = new XMLHttpRequest();
                        req.open('GET', oidcProviderConfigUrl, true);
                        req.setRequestHeader('Accept', 'application/json');

                        req.onreadystatechange = function () {
                            if (req.readyState == 4) {
                                if (req.status == 200 || fileLoaded(req)) {
                                    var oidcProviderConfig = JSON.parse(req.responseText);
                                    setupOidcEndoints(oidcProviderConfig);
                                    promise.setSuccess();
                                } else {
                                    promise.setError();
                                }
                            }
                        };

                        req.send();
                    } else {
                        setupOidcEndoints(oidcProvider);
                        promise.setSuccess();
                    }
                }
            }

            return promise.promise;
        }

        function fileLoaded(xhr) {
            return xhr.status == 0 && xhr.responseText && xhr.responseURL.startsWith('file:');
        }

        function setToken(token, refreshToken, idToken, timeLocal) {
            if (kc.tokenTimeoutHandle) {
                clearTimeout(kc.tokenTimeoutHandle);
                kc.tokenTimeoutHandle = null;
            }

            if (refreshToken) {
                kc.refreshToken = refreshToken;
                kc.refreshTokenParsed = decodeToken(refreshToken);
            } else {
                delete kc.refreshToken;
                delete kc.refreshTokenParsed;
            }

            if (idToken) {
                kc.idToken = idToken;
                kc.idTokenParsed = decodeToken(idToken);
            } else {
                delete kc.idToken;
                delete kc.idTokenParsed;
            }

            if (token) {
                kc.token = token;
                kc.tokenParsed = decodeToken(token);
                kc.sessionId = kc.tokenParsed.session_state;
                kc.authenticated = true;
                kc.subject = kc.tokenParsed.sub;
                kc.realmAccess = kc.tokenParsed.realm_access;
                kc.resourceAccess = kc.tokenParsed.resource_access;

                if (timeLocal) {
                    kc.timeSkew = Math.floor(timeLocal / 1000) - kc.tokenParsed.iat;
                }

                if (kc.timeSkew != null) {
                    console.info('[KEYCLOAK] Estimated time difference between browser and server is ' + kc.timeSkew + ' seconds');

                    if (kc.onTokenExpired) {
                        var expiresIn = (kc.tokenParsed['exp'] - (new Date().getTime() / 1000) + kc.timeSkew) * 1000;
                        console.info('[KEYCLOAK] Token expires in ' + Math.round(expiresIn / 1000) + ' s');
                        if (expiresIn <= 0) {
                            kc.onTokenExpired();
                        } else {
                            kc.tokenTimeoutHandle = setTimeout(kc.onTokenExpired, expiresIn);
                        }
                    }
                }
            } else {
                delete kc.token;
                delete kc.tokenParsed;
                delete kc.subject;
                delete kc.realmAccess;
                delete kc.resourceAccess;

                kc.authenticated = false;
            }
        }

        function decodeToken(str) {
            str = str.split('.')[1];

            str = str.replace('/-/g', '+');
            str = str.replace('/_/g', '/');
            switch (str.length % 4)
            {
                case 0:
                    break;
                case 2:
                    str += '==';
                    break;
                case 3:
                    str += '=';
                    break;
                default:
                    throw 'Invalid token';
            }

            str = (str + '===').slice(0, str.length + (str.length % 4));
            str = str.replace(/-/g, '+').replace(/_/g, '/');

            str = decodeURIComponent(escape(atob(str)));

            str = JSON.parse(str);
            return str;
        }

        function createUUID() {
            var s = [];
            var hexDigits = '0123456789abcdef';
            for (var i = 0; i < 36; i++) {
                s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);
            }
            s[14] = '4';
            s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);
            s[8] = s[13] = s[18] = s[23] = '-';
            var uuid = s.join('');
            return uuid;
        }

        kc.callback_id = 0;

        function createCallbackId() {
            var id = '<id: ' + (kc.callback_id++) + (Math.random()) + '>';
            return id;

        }

        function parseCallback(url) {
            var oauth = parseCallbackUrl(url);
            if (!oauth) {
                return;
            }

            var oauthState = callbackStorage.get(oauth.state);

            if (oauthState) {
                oauth.valid = true;
                oauth.redirectUri = oauthState.redirectUri;
                oauth.storedNonce = oauthState.nonce;
                oauth.prompt = oauthState.prompt;
            }

            return oauth;
        }

        function parseCallbackUrl(url) {
            var supportedParams;
            switch (kc.flow) {
                case 'standard':
                    supportedParams = ['code', 'state', 'session_state'];
                    break;
                case 'implicit':
                    supportedParams = ['access_token', 'id_token', 'state', 'session_state'];
                    break;
                case 'hybrid':
                    supportedParams = ['access_token', 'id_token', 'code', 'state', 'session_state'];
                    break;
            }

            supportedParams.push('error');
            supportedParams.push('error_description');
            supportedParams.push('error_uri');

            var queryIndex = url.indexOf('?');
            var fragmentIndex = url.indexOf('#');

            var newUrl;
            var parsed;

            if (kc.responseMode === 'query' && queryIndex !== -1) {
                newUrl = url.substring(0, queryIndex);
                parsed = parseCallbackParams(url.substring(queryIndex + 1, fragmentIndex !== -1 ? fragmentIndex : url.length), supportedParams);
                if (parsed.paramsString !== '') {
                    newUrl += '?' + parsed.paramsString;
                }
                if (fragmentIndex !== -1) {
                    newUrl += url.substring(fragmentIndex);
                }
            } else if (kc.responseMode === 'fragment' && fragmentIndex !== -1) {
                newUrl = url.substring(0, fragmentIndex);
                parsed = parseCallbackParams(url.substring(fragmentIndex + 1), supportedParams);
                if (parsed.paramsString !== '') {
                    newUrl += '#' + parsed.paramsString;
                }
            }

            if (parsed && parsed.oauthParams) {
                if (kc.flow === 'standard' || kc.flow === 'hybrid') {
                    if ((parsed.oauthParams.code || parsed.oauthParams.error) && parsed.oauthParams.state) {
                        parsed.oauthParams.newUrl = newUrl;
                        return parsed.oauthParams;
                    }
                } else if (kc.flow === 'implicit') {
                    if ((parsed.oauthParams.access_token || parsed.oauthParams.error) && parsed.oauthParams.state) {
                        parsed.oauthParams.newUrl = newUrl;
                        return parsed.oauthParams;
                    }
                }
            }
        }

        function parseCallbackParams(paramsString, supportedParams) {
            var p = paramsString.split('&');
            var result = {
                paramsString: '',
                oauthParams: {}
            }
            for (var i = 0; i < p.length; i++) {
                var t = p[i].split('=');
                if (supportedParams.indexOf(t[0]) !== -1) {
                    result.oauthParams[t[0]] = t[1];
                } else {
                    if (result.paramsString !== '') {
                        result.paramsString += '&';
                    }
                    result.paramsString += p[i];
                }
            }
            return result;
        }

        function createPromise() {
            if (typeof Promise === "function") {
                return createNativePromise();
            } else {
                return createLegacyPromise();
            }
        }

        function createNativePromise() {
            // Need to create a native Promise which also preserves the
            // interface of the custom promise type previously used by the API
            var p = {
                setSuccess: function(result) {
                    p.success = true;
                    p.resolve(result);
                },

                setError: function(result) {
                    p.success = false;
                    p.reject(result);
                }
            };
            p.promise = new Promise(function(resolve, reject) {
                p.resolve = resolve;
                p.reject = reject;
            });
            p.promise.success = function(callback) {
                p.promise.then(callback);
                return p.promise;
            }
            p.promise.error = function(callback) {
                p.promise.catch(callback);
                return p.promise;
            }
            return p;
        }

        function createLegacyPromise() {
            var p = {
                setSuccess: function(result) {
                    p.success = true;
                    p.result = result;
                    if (p.successCallback) {
                        p.successCallback(result);
                    }
                },

                setError: function(result) {
                    p.error = true;
                    p.result = result;
                    if (p.errorCallback) {
                        p.errorCallback(result);
                    }
                },

                promise: {
                    success: function(callback) {
                        if (p.success) {
                            callback(p.result);
                        } else if (!p.error) {
                            p.successCallback = callback;
                        }
                        return p.promise;
                    },
                    error: function(callback) {
                        if (p.error) {
                            callback(p.result);
                        } else if (!p.success) {
                            p.errorCallback = callback;
                        }
                        return p.promise;
                    }
                }
            }
            return p;
        }

        function setupCheckLoginIframe() {
            var promise = createPromise();

            if (!loginIframe.enable) {
                promise.setSuccess();
                return promise.promise;
            }

            if (loginIframe.iframe) {
                promise.setSuccess();
                return promise.promise;
            }

            var iframe = document.createElement('iframe');
            loginIframe.iframe = iframe;

            iframe.onload = function() {
                var authUrl = kc.endpoints.authorize();
                if (authUrl.charAt(0) === '/') {
                    loginIframe.iframeOrigin = getOrigin();
                } else {
                    loginIframe.iframeOrigin = authUrl.substring(0, authUrl.indexOf('/', 8));
                }
                promise.setSuccess();

                setTimeout(check, loginIframe.interval * 1000);
            }

            var src = kc.endpoints.checkSessionIframe();
            iframe.setAttribute('src', src );
            iframe.setAttribute('title', 'keycloak-session-iframe' );
            iframe.style.display = 'none';
            document.body.appendChild(iframe);

            var messageCallback = function(event) {
                if ((event.origin !== loginIframe.iframeOrigin) || (loginIframe.iframe.contentWindow !== event.source)) {
                    return;
                }

                if (!(event.data == 'unchanged' || event.data == 'changed' || event.data == 'error')) {
                    return;
                }


                if (event.data != 'unchanged') {
                    kc.clearToken();
                }

                var callbacks = loginIframe.callbackList.splice(0, loginIframe.callbackList.length);

                for (var i = callbacks.length - 1; i >= 0; --i) {
                    var promise = callbacks[i];
                    if (event.data == 'unchanged') {
                        promise.setSuccess();
                    } else {
                        promise.setError();
                    }
                }
            };

            window.addEventListener('message', messageCallback, false);

            var check = function() {
                checkLoginIframe();
                if (kc.token) {
                    setTimeout(check, loginIframe.interval * 1000);
                }
            };

            return promise.promise;
        }

        function checkLoginIframe() {
            var promise = createPromise();

            if (loginIframe.iframe && loginIframe.iframeOrigin ) {
                var msg = kc.clientId + ' ' + kc.sessionId;
                loginIframe.callbackList.push(promise);
                var origin = loginIframe.iframeOrigin;
                if (loginIframe.callbackList.length == 1) {
                    loginIframe.iframe.contentWindow.postMessage(msg, origin);
                }
            } else {
                promise.setSuccess();
            }

            return promise.promise;
        }

        function loadAdapter(type) {
            if (!type || type == 'default') {
                return {
                    login: function(options) {
                        window.location.href = kc.createLoginUrl(options);
                        return createPromise().promise;
                    },

                    logout: function(options) {
                        window.location.href = kc.createLogoutUrl(options);
                        return createPromise().promise;
                    },

                    register: function(options) {
                        window.location.href = kc.createRegisterUrl(options);
                        return createPromise().promise;
                    },

                    accountManagement : function() {
                        var accountUrl = kc.createAccountUrl();
                        if (typeof accountUrl !== 'undefined') {
                            window.location.href = accountUrl;
                        } else {
                            throw "Not supported by the OIDC server";
                        }
                        return createPromise().promise;
                    },

                    redirectUri: function(options, encodeHash) {
                        if (arguments.length == 1) {
                            encodeHash = true;
                        }

                        if (options && options.redirectUri) {
                            return options.redirectUri;
                        } else if (kc.redirectUri) {
                            return kc.redirectUri;
                        } else {
                            return location.href;
                        }
                    }
                };
            }

            if (type == 'cordova') {
                loginIframe.enable = false;
                var cordovaOpenWindowWrapper = function(loginUrl, target, options) {
                    if (window.cordova && window.cordova.InAppBrowser) {
                        // Use inappbrowser for IOS and Android if available
                        return window.cordova.InAppBrowser.open(loginUrl, target, options);
                    } else {
                        return window.open(loginUrl, target, options);
                    }
                };

                var shallowCloneCordovaOptions = function (userOptions) {
                    if (userOptions && userOptions.cordovaOptions) {
                        return Object.keys(userOptions.cordovaOptions).reduce(function (options, optionName) {
                            options[optionName] = userOptions.cordovaOptions[optionName];
                            return options;
                        }, {});
                    } else {
                        return {};
                    }
                };

                var formatCordovaOptions = function (cordovaOptions) {
                    return Object.keys(cordovaOptions).reduce(function (options, optionName) {
                        options.push(optionName+"="+cordovaOptions[optionName]);
                        return options;
                    }, []).join(",");
                };

                var createCordovaOptions = function (userOptions) {
                    var cordovaOptions = shallowCloneCordovaOptions(userOptions);
                    cordovaOptions.location = 'no';
                    if (userOptions && userOptions.prompt == 'none') {
                        cordovaOptions.hidden = 'yes';
                    }                    
                    return formatCordovaOptions(cordovaOptions);
                };

                return {
                    login: function(options) {
                        var promise = createPromise();

                        var cordovaOptions = createCordovaOptions(options);
                        var loginUrl = kc.createLoginUrl(options);
                        var ref = cordovaOpenWindowWrapper(loginUrl, '_blank', cordovaOptions);
                        var completed = false;
                        
                        var closed = false;
                        var closeBrowser = function() {
                            closed = true;
                            ref.close();
                        };

                        ref.addEventListener('loadstart', function(event) {
                            if (event.url.indexOf('http://localhost') == 0) {
                                var callback = parseCallback(event.url);
                                processCallback(callback, promise);
                                closeBrowser();
                                completed = true;
                            }
                        });

                        ref.addEventListener('loaderror', function(event) {
                            if (!completed) {
                                if (event.url.indexOf('http://localhost') == 0) {
                                    var callback = parseCallback(event.url);
                                    processCallback(callback, promise);
                                    closeBrowser();
                                    completed = true;
                                } else {
                                    promise.setError();
                                    closeBrowser();
                                }
                            }
                        });

                        ref.addEventListener('exit', function(event) {
                            if (!closed) {
                                promise.setError({
                                    reason: "closed_by_user"
                                });
                            }
                        });

                        return promise.promise;
                    },

                    logout: function(options) {
                        var promise = createPromise();
                        
                        var logoutUrl = kc.createLogoutUrl(options);
                        var ref = cordovaOpenWindowWrapper(logoutUrl, '_blank', 'location=no,hidden=yes');

                        var error;

                        ref.addEventListener('loadstart', function(event) {
                            if (event.url.indexOf('http://localhost') == 0) {
                                ref.close();
                            }
                        });

                        ref.addEventListener('loaderror', function(event) {
                            if (event.url.indexOf('http://localhost') == 0) {
                                ref.close();
                            } else {
                                error = true;
                                ref.close();
                            }
                        });

                        ref.addEventListener('exit', function(event) {
                            if (error) {
                                promise.setError();
                            } else {
                                kc.clearToken();
                                promise.setSuccess();
                            }
                        });

                        return promise.promise;
                    },

                    register : function() {
                        var registerUrl = kc.createRegisterUrl();
                        var cordovaOptions = createCordovaOptions(options);
                        var ref = cordovaOpenWindowWrapper(registerUrl, '_blank', cordovaOptions);
                        ref.addEventListener('loadstart', function(event) {
                            if (event.url.indexOf('http://localhost') == 0) {
                                ref.close();
                            }
                        });
                    },

                    accountManagement : function() {
                        var accountUrl = kc.createAccountUrl();
                        if (typeof accountUrl !== 'undefined') {
                            var ref = cordovaOpenWindowWrapper(accountUrl, '_blank', 'location=no');
                            ref.addEventListener('loadstart', function(event) {
                                if (event.url.indexOf('http://localhost') == 0) {
                                    ref.close();
                                }
                            });
                        } else {
                            throw "Not supported by the OIDC server";
                        }
                    },

                    redirectUri: function(options) {
                        return 'http://localhost';
                    }
                }
            }

            if (type == 'cordova-native') {
                loginIframe.enable = false;

                return {
                    login: function(options) {
                        var promise = createPromise();
                        var loginUrl = kc.createLoginUrl(options);

                        universalLinks.subscribe('keycloak', function(event) {
                            universalLinks.unsubscribe('keycloak');
                            window.cordova.plugins.browsertab.close();
                            var oauth = parseCallback(event.url);
                            processCallback(oauth, promise);
                        });

                        window.cordova.plugins.browsertab.openUrl(loginUrl);
                        return promise.promise;
                    },

                    logout: function(options) {
                        var promise = createPromise();
                        var logoutUrl = kc.createLogoutUrl(options);

                        universalLinks.subscribe('keycloak', function(event) {
                            universalLinks.unsubscribe('keycloak');
                            window.cordova.plugins.browsertab.close();
                            kc.clearToken();
                            promise.setSuccess();
                        });

                        window.cordova.plugins.browsertab.openUrl(logoutUrl);
                        return promise.promise;
                    },

                    register : function(options) {
                        var promise = createPromise();
                        var registerUrl = kc.createRegisterUrl(options);
                        universalLinks.subscribe('keycloak' , function(event) {
                            universalLinks.unsubscribe('keycloak');
                            window.cordova.plugins.browsertab.close();
                            var oauth = parseCallback(event.url);
                            processCallback(oauth, promise);
                        });
                        window.cordova.plugins.browsertab.openUrl(registerUrl);
                        return promise.promise;

                    },

                    accountManagement : function() {
                        var accountUrl = kc.createAccountUrl();
                        if (typeof accountUrl !== 'undefined') {
                            window.cordova.plugins.browsertab.openUrl(accountUrl);
                        } else {
                            throw "Not supported by the OIDC server";
                        }
                    },

                    redirectUri: function(options) {
                        if (options && options.redirectUri) {
                            return options.redirectUri;
                        } else if (kc.redirectUri) {
                            return kc.redirectUri;
                        } else {
                            return "http://localhost";
                        }
                    }
                }
            }

            throw 'invalid adapter type: ' + type;
        }

        var LocalStorage = function() {
            if (!(this instanceof LocalStorage)) {
                return new LocalStorage();
            }

            localStorage.setItem('kc-test', 'test');
            localStorage.removeItem('kc-test');

            var cs = this;

            function clearExpired() {
                var time = new Date().getTime();
                for (var i = 0; i < localStorage.length; i++)  {
                    var key = localStorage.key(i);
                    if (key && key.indexOf('kc-callback-') == 0) {
                        var value = localStorage.getItem(key);
                        if (value) {
                            try {
                                var expires = JSON.parse(value).expires;
                                if (!expires || expires < time) {
                                    localStorage.removeItem(key);
                                }
                            } catch (err) {
                                localStorage.removeItem(key);
                            }
                        }
                    }
                }
            }

            cs.get = function(state) {
                if (!state) {
                    return;
                }

                var key = 'kc-callback-' + state;
                var value = localStorage.getItem(key);
                if (value) {
                    localStorage.removeItem(key);
                    value = JSON.parse(value);
                }

                clearExpired();
                return value;
            };

            cs.add = function(state) {
                clearExpired();

                var key = 'kc-callback-' + state.state;
                state.expires = new Date().getTime() + (60 * 60 * 1000);
                localStorage.setItem(key, JSON.stringify(state));
            };
        };

        var CookieStorage = function() {
            if (!(this instanceof CookieStorage)) {
                return new CookieStorage();
            }

            var cs = this;

            cs.get = function(state) {
                if (!state) {
                    return;
                }

                var value = getCookie('kc-callback-' + state);
                setCookie('kc-callback-' + state, '', cookieExpiration(-100));
                if (value) {
                    return JSON.parse(value);
                }
            };

            cs.add = function(state) {
                setCookie('kc-callback-' + state.state, JSON.stringify(state), cookieExpiration(60));
            };

            cs.removeItem = function(key) {
                setCookie(key, '', cookieExpiration(-100));
            };

            var cookieExpiration = function (minutes) {
                var exp = new Date();
                exp.setTime(exp.getTime() + (minutes*60*1000));
                return exp;
            };

            var getCookie = function (key) {
                var name = key + '=';
                var ca = document.cookie.split(';');
                for (var i = 0; i < ca.length; i++) {
                    var c = ca[i];
                    while (c.charAt(0) == ' ') {
                        c = c.substring(1);
                    }
                    if (c.indexOf(name) == 0) {
                        return c.substring(name.length, c.length);
                    }
                }
                return '';
            };

            var setCookie = function (key, value, expirationDate) {
                var cookie = key + '=' + value + '; '
                    + 'expires=' + expirationDate.toUTCString() + '; ';
                document.cookie = cookie;
            }
        };

        function createCallbackStorage() {
            try {
                return new LocalStorage();
            } catch (err) {
            }

            return new CookieStorage();
        }
    }

    if ( typeof module === "object" && module && typeof module.exports === "object" ) {
        module.exports = Keycloak;
    } else {
        window.Keycloak = Keycloak;

        if ( typeof define === "function" && define.amd ) {
            define( "keycloak", [], function () { return Keycloak; } );
        }
    }
})( window );
var Callback5 = function() {};
Callback5 = stjs.extend(Callback5, null, [], function(constructor, prototype) {
    prototype.$invoke = function(p1, p2, p3, p4, p5) {};
}, {}, {});
/**
 *  Object Helper Functions
 * 
 *  @author fritz.ray@eduworks.com
 *  @class EcObject
 *  @module com.eduworks.ec
 */
var EcObject = function() {};
EcObject = stjs.extend(EcObject, null, [], function(constructor, prototype) {
    /**
     *  Returns true if the result is an object.
     * 
     *  @param {any} o Object to test.
     *  @return true iff the object is an object.
     *  @static
     *  @method isArray
     */
    constructor.isObject = function(o) {
        return (typeof o) == "object";
    };
    /**
     *  Returns keys on the object
     * 
     *  @param {any} o Object to test.
     *  @return List of keys
     *  @static
     *  @method keys
     */
    constructor.keys = function(o) {
        return ecKeys(o);
    };
}, {}, {});
/**
 *  Array Helper Functions
 * 
 *  @author fritz.ray@eduworks.com
 *  @class EcArray
 *  @module com.eduworks.ec
 */
var EcArray = function() {};
EcArray = stjs.extend(EcArray, null, [], function(constructor, prototype) {
    /**
     *  Returns true if the result is an array.
     * 
     *  @param {any} o Object to test.
     *  @return true iff the object is an array.
     *  @static
     *  @method isArray
     */
    constructor.isArray = function(o) {
        return Object.prototype.toString.call(o) == "[object Array]";
    };
    /**
     *  Removes values IFF the values == one another.
     * 
     *  @param a {Array} Array to remove duplicates from.
     *  @static
     *  @method removeDuplicates
     */
    constructor.removeDuplicates = function(a) {
        for (var i = 0; i < a.length; i++) 
            for (var j = i; j < a.length; j++) {
                if (j == i) 
                    continue;
                if (a[i] == a[j]) 
                    a.splice(j, 1);
            }
    };
    /**
     *  Adds a value if the array does not have the value already.
     * 
     *  @param a {Array} Array to add to.
     *  @param o {Object} Object to add to the array if it isn't in there already.
     *  @static
     *  @method setAdd
     */
    constructor.setAdd = function(a, o) {
        var inThere = false;
        for (var i = 0; i < a.length; i++) 
            if (a[i] == o) {
                inThere = true;
                break;
            }
        if (!inThere) 
            a.push(o);
    };
    /**
     *  Removes a value from the array.
     * 
     *  @param a {Array} Array to add to.
     *  @param o {Object} Object to add to the array if it isn't in there already.
     *  @static
     *  @method setAdd
     */
    constructor.setRemove = function(a, o) {
        for (var i = 0; i < a.length; i++) 
             while (a[i] == o){
                a.splice(i, 1);
            }
    };
    /**
     *  Returns true if the array has the value already.
     * 
     *  @param a {Array} Array.
     *  @param o {Object} Object to sample for.
     *  @static
     *  @method has
     */
    constructor.has = function(a, o) {
        var inThere = false;
        for (var i = 0; i < a.length; i++) 
            if (a[i] == o) {
                return true;
            }
        return false;
    };
}, {}, {});
/**
 *  A hypergraph, consisting of a set of vertices of type <code>V</code> and a
 *  set of hyperedges of type <code>E</code> which connect the vertices. This is
 *  the base interface for all JUNG graph types.
 *  <p>
 *  This interface permits, but does not enforce, any of the following common
 *  variations of graphs:
 *  <ul>
 *  <li/>hyperedges (edges which connect a set of vertices of any size)
 *  <li/>edges (these have have exactly two endpoints, which may or may not be
 *  distinct)
 *  <li/>self-loops (edges which connect exactly one vertex)
 *  <li>directed and undirected edges
 *  <li>vertices and edges with attributes (for example, weighted edges)
 *  <li>vertices and edges with different constraints or properties (for example,
 *  bipartite or multimodal graphs)
 *  <li>parallel edges (multiple edges which connect a single set of vertices)
 *  <li>internal representations as matrices or as adjacency lists or adjacency
 *  maps
 *  </ul>
 *  Extensions or implementations of this interface may enforce or disallow any
 *  or all of these variations.
 *  <p>
 *  <b>Notes</b>:
 *  <ul>
 *  <li/>The collections returned by <code>Hypergraph</code> instances should be
 *  treated in general as if read-only. While they are not contractually
 *  guaranteed (or required) to be immutable, this interface does not define the
 *  outcome if they are mutated. Mutations should be done via
 *  <code>{add,remove}{Edge,Vertex}</code>, or in the constructor.
 *  <li/>
 *  </ul>
 * 
 *  @author Joshua O'Madadhain
 *          <p>
 *          Ported to Javascript by:
 *  @author Fritz Ray (fritz.ray@eduworks.com)
 *  @author Tom Buskirk (tom.buskirk@eduworks.com)
 *  @class Hypergraph
 *  @module com.eduworks.ec
 */
var Hypergraph = function() {};
Hypergraph = stjs.extend(Hypergraph, null, [], function(constructor, prototype) {
    /**
     *  Returns a view of all edges in this graph. In general, this obeys the
     *  <code>Array</code> contract, and therefore makes no guarantees about the
     *  ordering of the vertices within the set.
     * 
     *  @return a <code>Array</code> view of all edges in this graph
     *  @method getEdges
     */
    prototype.getEdges = function() {};
    /**
     *  Returns a view of all vertices in this graph. In general, this obeys the
     *  <code>Array</code> contract, and therefore makes no guarantees about the
     *  ordering of the vertices within the set.
     * 
     *  @return a <code>Array</code> view of all vertices in this graph
     *  @method getVerticies
     */
    prototype.getVertices = function() {};
    /**
     *  Returns true if this graph's vertex collection contains
     *  <code>vertex</code>. Equivalent to
     *  <code>getVertices().contains(vertex)</code>.
     * 
     *  @param vertex the vertex whose presence is being queried
     *  @return true iff this graph contains a vertex <code>vertex</code>
     *  @method containsVertex
     */
    prototype.containsVertex = function(vertex) {};
    /**
     *  Returns true if this graph's edge collection contains <code>edge</code>.
     *  Equivalent to <code>getEdges().contains(edge)</code>.
     * 
     *  @param edge the edge whose presence is being queried
     *  @return true iff this graph contains an edge <code>edge</code>
     *  @method containsEdge
     */
    prototype.containsEdge = function(edge) {};
    /**
     *  Returns the number of edges in this graph.
     * 
     *  @return the number of edges in this graph
     *  @method getEdgeCount
     */
    prototype.getEdgeCount = function() {};
    /**
     *  Returns the number of vertices in this graph.
     * 
     *  @return the number of vertices in this graph
     *  @method getVertexCount
     */
    prototype.getVertexCount = function() {};
    /**
     *  Returns the collection of vertices which are connected to
     *  <code>vertex</code> via any edges in this graph. If <code>vertex</code>
     *  is connected to itself with a self-loop, then it will be included in the
     *  collection returned.
     * 
     *  @param vertex the vertex whose neighbors are to be returned
     *  @return the collection of vertices which are connected to
     *  <code>vertex</code>, or <code>null</code> if <code>vertex</code>
     *  is not present
     *  @method getNeighbors
     */
    prototype.getNeighbors = function(vertex) {};
    /**
     *  Returns the collection of edges in this graph which are connected to
     *  <code>vertex</code>.
     * 
     *  @param vertex the vertex whose incident edges are to be returned
     *  @return the collection of edges which are connected to
     *  <code>vertex</code>, or <code>null</code> if <code>vertex</code>
     *  is not present
     *  @method getIncidentEdges
     */
    prototype.getIncidentEdges = function(vertex) {};
    /**
     *  Returns the collection of vertices in this graph which are connected to
     *  <code>edge</code>. Note that for some graph types there are guarantees
     *  about the size of this collection (i.e., some graphs contain edges that
     *  have exactly two endpoints, which may or may not be distinct).
     *  Implementations for those graph types may provide alternate methods that
     *  provide more convenient access to the vertices.
     * 
     *  @param edge the edge whose incident vertices are to be returned
     *  @return the collection of vertices which are connected to
     *  <code>edge</code>, or <code>null</code> if <code>edge</code> is
     *  not present
     *  @method getIncidentVertices
     */
    prototype.getIncidentVertices = function(edge) {};
    /**
     *  Returns an edge that connects this vertex to <code>v</code>. If this edge
     *  is not uniquely defined (that is, if the graph contains more than one
     *  edge connecting <code>v1</code> to <code>v2</code>), any of these edges
     *  may be returned. <code>findEdgeSet(v1, v2)</code> may be used to return
     *  all such edges. Returns null if either of the following is true:
     *  <ul>
     *  <li/><code>v2</code> is not connected to <code>v1</code>
     *  <li/>either <code>v1</code> or <code>v2</code> are not present in this
     *  graph
     *  </ul>
     *  <p>
     *  <b>Note</b>: for purposes of this method, <code>v1</code> is only
     *  considered to be connected to <code>v2</code> via a given <i>directed</i>
     *  edge <code>e</code> if
     *  <code>v1 == e.getSource() && v2 == e.getDest()</code> evaluates to
     *  <code>true</code>. (<code>v1</code> and <code>v2</code> are connected by
     *  an undirected edge <code>u</code> if <code>u</code> is incident to both
     *  <code>v1</code> and <code>v2</code>.)
     * 
     *  @param v1 between this
     *  @param v2 and that
     *  @return an edge that connects <code>v1</code> to <code>v2</code>, or
     *  <code>null</code> if no such edge exists (or either vertex is not
     *  present)
     *  @method findEdge
     *  @see Hypergraph#findEdgeSet(Object, Object)
     */
    prototype.findEdge = function(v1, v2) {};
    /**
     *  Returns all edges that connects this vertex to <code>v</code>. If this
     *  edge is not uniquely defined (that is, if the graph contains more than
     *  one edge connecting <code>v1</code> to <code>v2</code>), any of these
     *  edges may be returned. <code>findEdgeSet(v1, v2)</code> may be used to
     *  return all such edges. Returns null if <code>v2</code> is not connected
     *  to <code>v1</code>. <br/>
     *  Returns an empty collection if either <code>v1</code> or <code>v2</code>
     *  are not present in this graph.
     *  <p>
     *  <p>
     *  <b>Note</b>: for purposes of this method, <code>v1</code> is only
     *  considered to be connected to <code>v2</code> via a given <i>directed</i>
     *  edge <code>d</code> if
     *  <code>v1 == d.getSource() && v2 == d.getDest()</code> evaluates to
     *  <code>true</code>. (<code>v1</code> and <code>v2</code> are connected by
     *  an undirected edge <code>u</code> if <code>u</code> is incident to both
     *  <code>v1</code> and <code>v2</code>.)
     * 
     *  @param v1 between this
     *  @param v2 and that
     *  @return a collection containing all edges that connect <code>v1</code> to
     *  <code>v2</code>, or <code>null</code> if either vertex is not
     *  present
     *  @method findEdgeSet
     *  @see Hypergraph#findEdge(Object, Object)
     */
    prototype.findEdgeSet = function(v1, v2) {};
    /**
     *  Adds <code>vertex</code> to this graph. Fails if <code>vertex</code> is
     *  null or already in the graph.
     * 
     *  @param vertex the vertex to add
     *  @return <code>true</code> if the add is successful, and
     *  <code>false</code> otherwise
     *  @throws IllegalArgumentException if <code>vertex</code> is <code>null</code>
     *  @method addVertex
     */
    prototype.addVertex = function(vertex) {};
    /**
     *  Adds <code>edge</code> to this graph. Fails under the following
     *  circumstances:
     *  <ul>
     *  <li/><code>edge</code> is already an element of the graph
     *  <li/>either <code>edge</code> or <code>vertices</code> is
     *  <code>null</code>
     *  <li/><code>vertices</code> has the wrong number of vertices for the graph
     *  type
     *  <li/><code>vertices</code> are already connected by another edge in this
     *  graph, and this graph does not accept parallel edges
     *  </ul>
     * 
     *  @param edge
     *  @param vertices
     *  @return <code>true</code> if the add is successful, and
     *  <code>false</code> otherwise
     *  @throws IllegalArgumentException if <code>edge</code> or <code>vertices</code> is null, or if
     *                                   a different vertex set in this graph is already connected by
     *                                   <code>edge</code>, or if <code>vertices</code> are not a
     *                                   legal vertex set for <code>edge</code>
     *  @method addHyperEdge
     */
    prototype.addHyperEdge = function(edge, vertices) {};
    /**
     *  Removes <code>vertex</code> from this graph. As a side effect, removes
     *  any edges <code>e</code> incident to <code>vertex</code> if the removal
     *  of <code>vertex</code> would cause <code>e</code> to be incident to an
     *  illegal number of vertices. (Thus, for example, incident hyperedges are
     *  not removed, but incident edges--which must be connected to a vertex at
     *  both endpoints--are removed.)
     *  <p>
     *  <p>
     *  Fails under the following circumstances:
     *  <ul>
     *  <li/><code>vertex</code> is not an element of this graph
     *  <li/><code>vertex</code> is <code>null</code>
     *  </ul>
     * 
     *  @param vertex the vertex to remove
     *  @return <code>true</code> if the removal is successful,
     *  <code>false</code> otherwise
     *  @method removeVertex
     */
    prototype.removeVertex = function(vertex) {};
    /**
     *  Removes <code>edge</code> from this graph. Fails if <code>edge</code> is
     *  null, or is otherwise not an element of this graph.
     * 
     *  @param edge the edge to remove
     *  @return <code>true</code> if the removal is successful,
     *  <code>false</code> otherwise
     *  @method removeEdge
     */
    prototype.removeEdge = function(edge) {};
    /**
     *  Returns <code>true</code> if <code>v1</code> and <code>v2</code> share an
     *  incident edge. Equivalent to <code>getNeighbors(v1).contains(v2)</code>.
     * 
     *  @param v1 the first vertex to test
     *  @param v2 the second vertex to test
     *  @return <code>true</code> if <code>v1</code> and <code>v2</code> share an
     *  incident edge
     *  @method isNeighbor
     */
    prototype.isNeighbor = function(v1, v2) {};
    /**
     *  Returns <code>true</code> if <code>vertex</code> and <code>edge</code>
     *  are incident to each other. Equivalent to
     *  <code>getIncidentEdges(vertex).contains(edge)</code> and to
     *  <code>getIncidentVertices(edge).contains(vertex)</code>.
     * 
     *  @param vertex
     *  @param edge
     *  @return <code>true</code> if <code>vertex</code> and <code>edge</code>
     *  are incident to each other
     *  @method isIncident
     */
    prototype.isIncident = function(vertex, edge) {};
    /**
     *  Returns the number of edges incident to <code>vertex</code>. Special
     *  cases of interest:
     *  <ul>
     *  <li/>Incident self-loops are counted once.
     *  <li>If there is only one edge that connects this vertex to each of its
     *  neighbors (and vice versa), then the value returned will also be equal to
     *  the number of neighbors that this vertex has (that is, the output of
     *  <code>getNeighborCount</code>).
     *  <li>If the graph is directed, then the value returned will be the sum of
     *  this vertex's indegree (the number of edges whose destination is this
     *  vertex) and its outdegree (the number of edges whose source is this
     *  vertex), minus the number of incident self-loops (to avoid
     *  double-counting).
     *  </ul>
     *  <p>
     *  Equivalent to <code>getIncidentEdges(vertex).size()</code>.
     * 
     *  @param vertex the vertex whose degree is to be returned
     *  @return the degree of this node
     *  @method degree
     *  @see Hypergraph#getNeighborCount(Object)
     */
    prototype.degree = function(vertex) {};
    /**
     *  Returns the number of vertices that are adjacent to <code>vertex</code>
     *  (that is, the number of vertices that are incident to edges in
     *  <code>vertex</code>'s incident edge set).
     *  <p>
     *  <p>
     *  Equivalent to <code>getNeighbors(vertex).size()</code>.
     * 
     *  @param vertex the vertex whose neighbor count is to be returned
     *  @return the number of neighboring vertices
     *  @method getNeighborCount
     */
    prototype.getNeighborCount = function(vertex) {};
    /**
     *  Returns the number of vertices that are incident to <code>edge</code>.
     *  For hyperedges, this can be any nonnegative integer; for edges this must
     *  be 2 (or 1 if self-loops are permitted).
     *  <p>
     *  <p>
     *  Equivalent to <code>getIncidentVertices(edge).size()</code>.
     * 
     *  @param edge the edge whose incident vertex count is to be returned
     *  @return the number of vertices that are incident to <code>edge</code>.
     *  @method getIncidentCount
     */
    prototype.getIncidentCount = function(edge) {};
    /**
     *  Returns the edge type of <code>edge</code> in this graph.
     * 
     *  @param edge
     *  @return the <code>EdgeType</code> of <code>edge</code>, or
     *  <code>null</code> if <code>edge</code> has no defined type
     *  @method getEdgeType
     */
    prototype.getEdgeType = function(edge) {};
    /**
     *  Returns the default edge type for this graph.
     * 
     *  @return the default edge type for this graph
     *  @method getDefaultEdgeType
     */
    prototype.getDefaultEdgeType = function() {};
    /**
     *  Returns the collection of edges in this graph which are of type
     *  <code>edge_type</code>.
     * 
     *  @param edge_type the type of edges to be returned
     *  @return the collection of edges which are of type <code>edge_type</code>,
     *  or <code>null</code> if the graph does not accept edges of this
     *  type
     *  @method getEdgesOfType
     *  @see EdgeType
     */
    prototype.getEdgesOfType = function(edge_type) {};
    /**
     *  Returns the number of edges of type <code>edge_type</code> in this graph.
     * 
     *  @param edge_type the type of edge for which the count is to be returned
     *  @return the number of edges of type <code>edge_type</code> in this graph
     *  @method getEdgeCountOfType
     */
    prototype.getEdgeCountOfType = function(edge_type) {};
    /**
     *  Returns a <code>Array</code> view of the incoming edges incident to
     *  <code>vertex</code> in this graph.
     * 
     *  @param vertex the vertex whose incoming edges are to be returned
     *  @return a <code>Array</code> view of the incoming edges incident to
     *  <code>vertex</code> in this graph
     *  @method getInEdges
     */
    prototype.getInEdges = function(vertex) {};
    /**
     *  Returns a <code>Array</code> view of the outgoing edges incident to
     *  <code>vertex</code> in this graph.
     * 
     *  @param vertex the vertex whose outgoing edges are to be returned
     *  @return a <code>Array</code> view of the outgoing edges incident to
     *  <code>vertex</code> in this graph
     *  @method getOutEdges
     */
    prototype.getOutEdges = function(vertex) {};
    /**
     *  Returns the number of incoming edges incident to <code>vertex</code>.
     *  Equivalent to <code>getInEdges(vertex).size()</code>.
     * 
     *  @param vertex the vertex whose indegree is to be calculated
     *  @return the number of incoming edges incident to <code>vertex</code>
     *  @method inDegree
     */
    prototype.inDegree = function(vertex) {};
    /**
     *  Returns the number of outgoing edges incident to <code>vertex</code>.
     *  Equivalent to <code>getOutEdges(vertex).size()</code>.
     * 
     *  @param vertex the vertex whose outdegree is to be calculated
     *  @return the number of outgoing edges incident to <code>vertex</code>
     *  @method outDegree
     */
    prototype.outDegree = function(vertex) {};
    /**
     *  If <code>directed_edge</code> is a directed edge in this graph, returns
     *  the source; otherwise returns <code>null</code>. The source of a directed
     *  edge <code>d</code> is defined to be the vertex for which <code>d</code>
     *  is an outgoing edge. <code>directed_edge</code> is guaranteed to be a
     *  directed edge if its <code>EdgeType</code> is <code>DIRECTED</code>.
     * 
     *  @param directed_edge
     *  @return the source of <code>directed_edge</code> if it is a directed edge
     *  in this graph, or <code>null</code> otherwise
     *  @method getSource
     */
    prototype.getSource = function(directed_edge) {};
    /**
     *  If <code>directed_edge</code> is a directed edge in this graph, returns
     *  the destination; otherwise returns <code>null</code>. The destination of
     *  a directed edge <code>d</code> is defined to be the vertex incident to
     *  <code>d</code> for which <code>d</code> is an incoming edge.
     *  <code>directed_edge</code> is guaranteed to be a directed edge if its
     *  <code>EdgeType</code> is <code>DIRECTED</code>.
     * 
     *  @param directed_edge
     *  @return the destination of <code>directed_edge</code> if it is a directed
     *  edge in this graph, or <code>null</code> otherwise
     *  @method getDest
     */
    prototype.getDest = function(directed_edge) {};
    /**
     *  Returns a <code>Array</code> view of the predecessors of
     *  <code>vertex</code> in this graph. A predecessor of <code>vertex</code>
     *  is defined as a vertex <code>v</code> which is connected to
     *  <code>vertex</code> by an edge <code>e</code>, where <code>e</code> is an
     *  outgoing edge of <code>v</code> and an incoming edge of
     *  <code>vertex</code>.
     * 
     *  @param vertex the vertex whose predecessors are to be returned
     *  @return a <code>Array</code> view of the predecessors of
     *  <code>vertex</code> in this graph
     *  @method getPredecessors
     */
    prototype.getPredecessors = function(vertex) {};
    /**
     *  Returns a <code>Array</code> view of the successors of
     *  <code>vertex</code> in this graph. A successor of <code>vertex</code> is
     *  defined as a vertex <code>v</code> which is connected to
     *  <code>vertex</code> by an edge <code>e</code>, where <code>e</code> is an
     *  incoming edge of <code>v</code> and an outgoing edge of
     *  <code>vertex</code>.
     * 
     *  @param vertex the vertex whose predecessors are to be returned
     *  @return a <code>Array</code> view of the successors of
     *  <code>vertex</code> in this graph
     *  @method getSuccessors
     */
    prototype.getSuccessors = function(vertex) {};
}, {}, {});
/**
 *  Object to hold a triple, used in graph.
 * 
 *  @author fritz.ray@eduworks.com
 *  @class Triple
 *  @module com.eduworks.ec
 */
var Triple = function() {};
Triple = stjs.extend(Triple, null, [], function(constructor, prototype) {
    /**
     *  Source vertex.
     * 
     *  @property source
     *  @type any
     */
    prototype.source = null;
    /**
     *  Destination vertex.
     * 
     *  @property destination
     *  @type any
     */
    prototype.destination = null;
    /**
     *  Object to hold in the edge.
     * 
     *  @property edge
     *  @type any
     */
    prototype.edge = null;
    /**
     *  Returns true IFF sources, destinations, and edges match.
     * 
     *  @param {Edge} obj
     *  @return {boolean} true IFF <see method definition>
     *  @method equals
     */
    prototype.equals = function(obj) {
        if (Object.prototype.equals.call(this, obj)) 
            return true;
        if (stjs.isInstanceOf(obj.constructor, Triple)) {
            var t = obj;
            if (this.source == t.source && this.destination == t.destination && this.edge == t.edge) 
                return true;
        }
        return false;
    };
}, {}, {});
var EcLocalStorage = function() {};
EcLocalStorage = stjs.extend(EcLocalStorage, null, [], function(constructor, prototype) {
    constructor.removeItem = function(s, key) {
        ((s)["removeItem"])(key);
    };
}, {}, {});
/**
 *  Created by fray on 7/5/17.
 */
var Task = function() {};
Task = stjs.extend(Task, null, [], function(constructor, prototype) {
    constructor.desiredFps = 10;
    constructor.lastFrame = null;
    constructor.tasks = new Array();
    constructor.delayedFunctions = 0;
    constructor.immediateFunctions = 0;
    constructor.asyncImmediateFunctions = 0;
    constructor.runningAsyncFunctions = 0;
    constructor.immediate = function(c) {
        var currentMs = Date.now();
        var nextFrameMs = stjs.trunc(1000 / Task.desiredFps);
        if (Task.lastFrame == null || currentMs > Task.lastFrame + nextFrameMs) 
            return setTimeout(function() {
                Task.delayedFunctions++;
                Task.lastFrame = Date.now();
                c();
            }, 0);
         else {
            Task.immediateFunctions++;
            c();
        }
        return null;
    };
    constructor.asyncImmediate = function(c) {
        Task.tasks.push(c);
        Task.asyncImmediateFunctions++;
        if (Task.runningAsyncFunctions < 20) {
            Task.runningAsyncFunctions++;
            return setTimeout(function() {
                Task.asyncContinue();
            }, 0);
        }
        return null;
    };
    constructor.asyncContinue = function() {
        var keepGoing = function() {
            Task.asyncContinue();
        };
        if (Task.tasks.length > 0) {
            var c = Task.tasks.pop();
            c(keepGoing);
        } else 
            Task.runningAsyncFunctions--;
    };
}, {tasks: {name: "Array", arguments: ["CallbackOrFunction"]}}, {});
var EcDate = function() {};
EcDate = stjs.extend(EcDate, null, [], function(constructor, prototype) {
    constructor.toISOString = function(obj) {
        return ((obj)["toISOString"])();
    };
}, {}, {});
/**
 *  Wrapper to handle all remote web service invocations.
 * 
 *  @author fritz.ray@eduworks.com
 *  @author devlin.junker@eduworks.com
 *  @class EcRemote
 *  @module com.eduworks.ec
 */
var EcRemote = function() {};
EcRemote = stjs.extend(EcRemote, null, [], function(constructor, prototype) {
    /**
     *  Turn this property off to cause all remote web service calls to be
     *  synchronous. Can be useful for test scripts, blocking calls, etc.
     * 
     *  @property async
     *  @static
     *  @type boolean
     */
    constructor.async = true;
    /**
     *  Timeout for AJAX requests
     * 
     *  @property async
     *  @static
     *  @type boolean
     */
    constructor.timeout = 60 * 1000 * 5;
    /**
     *  POSTs a request to a remote endpoint. Composed of a server endpoint (root
     *  URL) and a service (service path). Sends form data as a multi-part mime
     *  request.
     * 
     *  @param {string}           server Protocol, hostname and path to the remote handler.
     *  @param {string}           service Path to service to invoke.
     *  @param {FormData}         fd Form data to send as multi-part mime.
     *  @param {function(object)} success Method that is invoked if the server
     *                            responds with a success (per jQuery ajax)
     *  @param {function(string)} failure Method that is invoked if the server
     *                            responds with an error (per jQuery ajax) or a non-200/300.
     *  @method postExpectingObject
     *  @static
     */
    constructor.postExpectingObject = function(server, service, fd, success, failure) {
        EcRemote.postInner(server, service, fd, null, EcRemote.getSuccessJSONCallback(success, failure), EcRemote.getFailureCallback(failure));
    };
    /**
     *  POSTs a request to a remote endpoint. Composed of a server endpoint (root
     *  URL) and a service (service path). Sends form data as a multi-part mime
     *  request.
     * 
     *  @param {string}           server Protocol, hostname and path to the remote handler.
     *  @param {string}           service Path to service to invoke.
     *  @param {FormData}         fd Form data to send as multi-part mime.
     *  @param {function(string)} success Method that is invoked if the server
     *                            responds with a success (per jQuery ajax)
     *  @param {function(string)} failure Method that is invoked if the server
     *                            responds with an error (per jQuery ajax) or a non-200/300.
     *  @method postExpectingString
     *  @static
     */
    constructor.postExpectingString = function(server, service, fd, success, failure) {
        EcRemote.postInner(server, service, fd, null, EcRemote.getSuccessCallback(success, failure), EcRemote.getFailureCallback(failure));
    };
    constructor.postWithHeadersExpectingString = function(server, service, fd, headers, success, failure) {
        EcRemote.postInner(server, service, fd, headers, EcRemote.getSuccessCallback(success, failure), EcRemote.getFailureCallback(failure));
    };
    constructor.postInner = function(server, service, fd, headers, successCallback, failureCallback) {
        var url = server;
        if (!url.endsWith("/") && service != null && !"".equals(service)) {
            url += "/";
        }
        if (service != null) {
            url += service;
        }
        var p = {};
        p.method = "POST";
        p.url = url;
        if ((fd)["_streams"] != null) {
            var chunks = (fd)["_streams"];
            var all = "";
            for (var i = 0; i < chunks.length; i++) {
                if ((typeof chunks[i]) == "function") {
                    all = all + "\r\n";
                } else {
                    all = all + chunks[i];
                }
            }
            all = all + "\r\n\r\n--" + (fd)["_boundary"] + "--";
            if (headers == null || headers == undefined) 
                headers = new Object();
            p.headers = headers;
            p.headers["Content-Type"] = "multipart/form-data; boundary=" + (fd)["_boundary"];
            p.data = all;
        } else {
            p.mimeType = "multipart/form-data";
            p.data = fd;
            if (headers != null && headers != undefined) 
                p.headers = headers;
        }
        (p)["contentType"] = false;
        p.cache = false;
        p.async = EcRemote.async;
        p.timeout = EcRemote.timeout;
        p.processData = false;
        p.success = successCallback;
        p.error = failureCallback;
        EcRemote.upgradeHttpToHttps(p);
        if ($ == null) {
            var o = new Object();
            (o)["status"] = 200;
            (o)["responseText"] = JSON.stringify(httpPost(p.data, p.url, "multipart/form-data; boundary=" + (fd)["_boundary"], "false", (fd)["_boundary"]));
            successCallback(null, null, o);
        } else {
            $.ajax(p);
        }
    };
    /**
     *  GETs something from a remote endpoint. Composed of a server endpoint
     *  (root URL) and a service (service path).
     * 
     *  @param {string}           server Protocol, hostname and path to the remote handler.
     *  @param {string}           service Path to service to invoke.
     *  @param {function(object)} success Method that is invoked if the server
     *                            responds with a success (per jQuery ajax)
     *  @param {function(string)} failure Method that is invoked if the server
     *                            responds with an error (per jQuery ajax) or a non-200/300.
     *  @method getExpectingObject
     *  @static
     */
    constructor.getExpectingObject = function(server, service, success, failure) {
        var url = EcRemote.urlAppend(server, service);
        var p = {};
        p.method = "GET";
        p.url = url;
        p.cache = false;
        p.async = EcRemote.async;
        p.timeout = EcRemote.timeout;
        p.processData = false;
        p.dataType = "json";
        p.success = EcRemote.getSuccessJSONCallback(success, failure);
        p.error = EcRemote.getFailureCallback(failure);
        EcRemote.upgradeHttpToHttps(p);
        if ($ == null) {
            success(httpGet(p.url));
        } else {
            $.ajax(p);
        }
    };
    /**
     *  GETs something from a remote endpoint. Composed of a server endpoint
     *  (root URL) and a service (service path).
     * 
     *  @param {string}           server Protocol, hostname and path to the remote handler.
     *  @param {string}           service Path to service to invoke.
     *  @param {function(object)} success Method that is invoked if the server
     *                            responds with a success (per jQuery ajax)
     *  @param {function(string)} failure Method that is invoked if the server
     *                            responds with an error (per jQuery ajax) or a non-200/300.
     *  @method getExpectingString
     *  @static
     */
    constructor.getExpectingString = function(server, service, success, failure) {
        var url = EcRemote.urlAppend(server, service);
        var p = {};
        p.method = "GET";
        p.url = url;
        p.async = EcRemote.async;
        p.timeout = EcRemote.timeout;
        p.processData = false;
        p.success = EcRemote.getSuccessCallback(success, failure);
        p.error = EcRemote.getFailureCallback(failure);
        EcRemote.upgradeHttpToHttps(p);
        if ($ == null) {
            success(httpGet(p.url));
        } else {
            $.ajax(p);
        }
    };
    constructor.urlAppend = function(server, service) {
        var url = server;
        if (!url.endsWith("/") && service != null && service.equals("")) {
            url += "/";
        }
        if (service != null) {
            url += service;
        }
        return url;
    };
    /**
     *  DELETEs something at a remote endpoint. Composed of a server endpoint
     *  (root URL) and a service (service path).
     * 
     *  @param {string}           server Protocol, hostname and path to the remote handler.
     *  @param {string}           service Path to service to invoke.
     *  @param {function(object)} success Method that is invoked if the server
     *                            responds with a success (per jQuery ajax)
     *  @param {function(string)} failure Method that is invoked if the server
     *                            responds with an error (per jQuery ajax) or a non-200/300.
     *  @method _delete
     *  @static
     */
    constructor._delete = function(url, signatureSheet, success, failure) {
        var p = {};
        p.method = "DELETE";
        p.url = url;
        p.async = EcRemote.async;
        p.timeout = EcRemote.timeout;
        p.headers = new Object();
        p.headers["signatureSheet"] = signatureSheet;
        p.success = EcRemote.getSuccessCallback(success, failure);
        p.error = EcRemote.getFailureCallback(failure);
        EcRemote.upgradeHttpToHttps(p);
        if ($ == null) {
            success(httpDelete(p.url));
        } else {
            $.ajax(p);
        }
    };
    constructor.upgradeHttpToHttps = function(p) {
        if (window != null) {
            if (window.location != null) {
                if (p.url.indexOf(window.location.protocol) == -1) {
                    if (window.location.protocol.startsWith("https")) {
                        if (!p.url.startsWith("https:")) {
                            p.url = p.url.replace("http:", "https:");
                        }
                    }
                }
            }
        }
    };
    constructor.handleFailure = function(failure, paramP1, paramP2, paramP3) {
        if (failure != null) {
            if (paramP1 != null) {
                if (paramP1.responseText != null) {
                    failure(paramP1.responseText);
                } else if (paramP1.statusText != null) {
                    failure(paramP1.statusText.toString());
                } else {
                    failure("General error in AJAX request.");
                }
            } else if (paramP2 != null) {
                failure(paramP2);
            } else if (paramP3 != null) {
                failure(paramP3);
            } else {
                failure("General error in AJAX request.");
            }
        }
    };
    constructor.getSuccessCallback = function(success, failure) {
        return function(arg0, arg1, arg2) {
            if (arg2.status > 300 || arg2.status < 200) {
                if (failure != null) 
                    failure("Error with code: " + arg2.status);
            } else if (success != null) {
                success(arg2.responseText);
            }
        };
    };
    constructor.getSuccessJSONCallback = function(success, failure) {
        return function(arg0, arg1, arg2) {
            if (arg2.status > 300 || arg2.status < 200) {
                if (failure != null) 
                    failure("Error with code: " + arg2.status);
            } else if (success != null) {
                try {
                    if (EcObject.isObject(arg2.responseText)) 
                        success(arg2.responseText);
                     else if (EcArray.isArray(arg2.responseText)) 
                        success(arg2.responseText);
                     else 
                        success(JSON.parse(arg2.responseText));
                }catch (ex) {
                    if (ex != null) {
                        if (failure != null) 
                            if ((ex)["getMessage"] != null) {
                                failure(ex.getMessage());
                            } else {
                                failure(ex);
                            }
                    }
                }
            }
        };
    };
    constructor.getFailureCallback = function(failure) {
        return function(paramP1, paramP2, paramP3) {
            EcRemote.handleFailure(failure, paramP1, paramP2, paramP3);
        };
    };
}, {}, {});
/**
 *  A graph consisting of a set of vertices of type <code>V</code>
 *  set and a set of edges of type <code>E</code>.  Edges of this
 *  graph type have exactly two endpoints; whether these endpoints
 *  must be distinct depends on the implementation.
 *  <p>
 *  This interface permits, but does not enforce, any of the following
 *  common variations of graphs:
 *  <ul>
 *  <li> directed and undirected edges
 *  <li> vertices and edges with attributes (for example, weighted edges)
 *  <li> vertices and edges of different types (for example, bipartite
 *  or multimodal graphs)
 *  <li> parallel edges (multiple edges which connect a single set of vertices)
 *  <li> representations as matrices or as adjacency lists or adjacency maps
 *  </ul>
 *  Extensions or implementations of this interface
 *  may enforce or disallow any or all of these variations.
 *  <p>
 *  <p>Definitions (with respect to a given vertex <code>v</code>):
 *  <ul>
 *  <li/><b>incoming edge</b> of <code>v</code>: an edge that can be traversed
 *  from a neighbor of <code>v</code> to reach <code>v</code>
 *  <li/><b>outgoing edge</b> of <code>v</code>: an edge that can be traversed
 *  from <code>v</code> to reach some neighbor of <code>v</code>
 *  <li/><b>predecessor</b> of <code>v</code>: a vertex at the other end of an
 *  incoming edge of <code>v</code>
 *  <li/><b>successor</b> of <code>v</code>: a vertex at the other end of an
 *  outgoing edge of <code>v</code>
 *  <li/>
 *  </ul>
 * 
 *  @author Joshua O'Madadhain
 *          <p>
 *          Ported to Javascript by:
 *  @author Fritz Ray (fritz.ray@eduworks.com)
 *  @author Tom Buskirk (tom.buskirk@eduworks.com)
 *  @class Graph
 *  @module com.eduworks.ec
 *  @extends Hypergraph
 */
var Graph = function() {};
Graph = stjs.extend(Graph, null, [Hypergraph], function(constructor, prototype) {
    /**
     *  Returns a <code>Collection</code> view of the incoming edges incident to <code>vertex</code>
     *  in this graph.
     * 
     *  @param vertex the vertex whose incoming edges are to be returned
     *  @return a <code>Collection</code> view of the incoming edges incident
     *  to <code>vertex</code> in this graph
     *  @method getInEdges
     */
    prototype.getInEdges = function(vertex) {};
    /**
     *  Returns a <code>Collection</code> view of the outgoing edges incident to <code>vertex</code>
     *  in this graph.
     * 
     *  @param vertex the vertex whose outgoing edges are to be returned
     *  @return a <code>Collection</code> view of the outgoing edges incident
     *  to <code>vertex</code> in this graph
     *  @method getOutEdges
     */
    prototype.getOutEdges = function(vertex) {};
    /**
     *  Returns a <code>Collection</code> view of the predecessors of <code>vertex</code>
     *  in this graph.  A predecessor of <code>vertex</code> is defined as a vertex <code>v</code>
     *  which is connected to
     *  <code>vertex</code> by an edge <code>e</code>, where <code>e</code> is an outgoing edge of
     *  <code>v</code> and an incoming edge of <code>vertex</code>.
     * 
     *  @param vertex the vertex whose predecessors are to be returned
     *  @return a <code>Collection</code> view of the predecessors of
     *  <code>vertex</code> in this graph
     *  @method getPredecessors
     */
    prototype.getPredecessors = function(vertex) {};
    /**
     *  Returns a <code>Collection</code> view of the successors of <code>vertex</code>
     *  in this graph.  A successor of <code>vertex</code> is defined as a vertex <code>v</code>
     *  which is connected to
     *  <code>vertex</code> by an edge <code>e</code>, where <code>e</code> is an incoming edge of
     *  <code>v</code> and an outgoing edge of <code>vertex</code>.
     * 
     *  @param vertex the vertex whose predecessors are to be returned
     *  @return a <code>Collection</code> view of the successors of
     *  <code>vertex</code> in this graph
     *  @method getSuccessors
     */
    prototype.getSuccessors = function(vertex) {};
    /**
     *  Returns the number of incoming edges incident to <code>vertex</code>.
     *  Equivalent to <code>getInEdges(vertex).size()</code>.
     * 
     *  @param vertex the vertex whose indegree is to be calculated
     *  @return the number of incoming edges incident to <code>vertex</code>
     *  @method inDegree
     */
    prototype.inDegree = function(vertex) {};
    /**
     *  Returns the number of outgoing edges incident to <code>vertex</code>.
     *  Equivalent to <code>getOutEdges(vertex).size()</code>.
     * 
     *  @param vertex the vertex whose outdegree is to be calculated
     *  @return the number of outgoing edges incident to <code>vertex</code>
     *  @method outDegree
     */
    prototype.outDegree = function(vertex) {};
    /**
     *  Returns <code>true</code> if <code>v1</code> is a predecessor of <code>v2</code> in this graph.
     *  Equivalent to <code>v1.getPredecessors().contains(v2)</code>.
     * 
     *  @param v1 the first vertex to be queried
     *  @param v2 the second vertex to be queried
     *  @return <code>true</code> if <code>v1</code> is a predecessor of <code>v2</code>, and false otherwise.
     *  @method isPredecessor
     */
    prototype.isPredecessor = function(v1, v2) {};
    /**
     *  Returns <code>true</code> if <code>v1</code> is a successor of <code>v2</code> in this graph.
     *  Equivalent to <code>v1.getSuccessors().contains(v2)</code>.
     * 
     *  @param v1 the first vertex to be queried
     *  @param v2 the second vertex to be queried
     *  @return <code>true</code> if <code>v1</code> is a successor of <code>v2</code>, and false otherwise.
     *  @method isSuccessor
     */
    prototype.isSuccessor = function(v1, v2) {};
    /**
     *  Returns the number of predecessors that <code>vertex</code> has in this graph.
     *  Equivalent to <code>vertex.getPredecessors().size()</code>.
     * 
     *  @param vertex the vertex whose predecessor count is to be returned
     *  @return the number of predecessors that <code>vertex</code> has in this graph
     *  @method getPredecessorCount
     */
    prototype.getPredecessorCount = function(vertex) {};
    /**
     *  Returns the number of successors that <code>vertex</code> has in this graph.
     *  Equivalent to <code>vertex.getSuccessors().size()</code>.
     * 
     *  @param vertex the vertex whose successor count is to be returned
     *  @return the number of successors that <code>vertex</code> has in this graph
     *  @method getSuccessorCount
     */
    prototype.getSuccessorCount = function(vertex) {};
    /**
     *  If <code>directed_edge</code> is a directed edge in this graph, returns the source;
     *  otherwise returns <code>null</code>.
     *  The source of a directed edge <code>d</code> is defined to be the vertex for which
     *  <code>d</code> is an outgoing edge.
     *  <code>directed_edge</code> is guaranteed to be a directed edge if
     *  its <code>EdgeType</code> is <code>DIRECTED</code>.
     * 
     *  @param directed_edge
     *  @return the source of <code>directed_edge</code> if it is a directed edge in this graph, or <code>null</code> otherwise
     *  @method getSource
     */
    prototype.getSource = function(directed_edge) {};
    /**
     *  If <code>directed_edge</code> is a directed edge in this graph, returns the destination;
     *  otherwise returns <code>null</code>.
     *  The destination of a directed edge <code>d</code> is defined to be the vertex
     *  incident to <code>d</code> for which
     *  <code>d</code> is an incoming edge.
     *  <code>directed_edge</code> is guaranteed to be a directed edge if
     *  its <code>EdgeType</code> is <code>DIRECTED</code>.
     * 
     *  @param directed_edge
     *  @return the destination of <code>directed_edge</code> if it is a directed edge in this graph, or <code>null</code> otherwise
     *  @method getDest
     */
    prototype.getDest = function(directed_edge) {};
    /**
     *  Returns <code>true</code> if <code>vertex</code> is the source of <code>edge</code>.
     *  Equivalent to <code>getSource(edge).equals(vertex)</code>.
     * 
     *  @param vertex the vertex to be queried
     *  @param edge   the edge to be queried
     *  @return <code>true</code> iff <code>vertex</code> is the source of <code>edge</code>
     *  @method isSource
     */
    prototype.isSource = function(vertex, edge) {};
    /**
     *  Returns <code>true</code> if <code>vertex</code> is the destination of <code>edge</code>.
     *  Equivalent to <code>getDest(edge).equals(vertex)</code>.
     * 
     *  @param vertex the vertex to be queried
     *  @param edge   the edge to be queried
     *  @return <code>true</code> iff <code>vertex</code> is the destination of <code>edge</code>
     */
    prototype.isDest = function(vertex, edge) {};
    /**
     *  Adds edge <code>e</code> to this graph such that it connects
     *  vertex <code>v1</code> to <code>v2</code>.
     *  Equivalent to <code>addEdge(e, new Pair<V>(v1, v2))</code>.
     *  If this graph does not contain <code>v1</code>, <code>v2</code>,
     *  or both, implementations may choose to either silently add
     *  the vertices to the graph or throw an <code>IllegalArgumentException</code>.
     *  If this graph assigns edge types to its edges, the edge type of
     *  <code>e</code> will be the default for this graph.
     *  See <code>Hypergraph.addEdge()</code> for a listing of possible reasons
     *  for failure.
     * 
     *  @param e  the edge to be added
     *  @param v1 the first vertex to be connected
     *  @param v2 the second vertex to be connected
     *  @return <code>true</code> if the add is successful, <code>false</code> otherwise
     *  @method addEdge
     *  @see Hypergraph#addEdge(Object, Collection)
     *  @see #addEdge(Object, Object, Object, EdgeType)
     */
    prototype.addEdge = function(e, v1, v2) {};
    /**
     *  Returns the vertex at the other end of <code>edge</code> from <code>vertex</code>.
     *  (That is, returns the vertex incident to <code>edge</code> which is not <code>vertex</code>.)
     * 
     *  @param vertex the vertex to be queried
     *  @param edge   the edge to be queried
     *  @return the vertex at the other end of <code>edge</code> from <code>vertex</code>
     *  @method getOpposite
     */
    prototype.getOpposite = function(vertex, edge) {};
}, {}, {});
/**
 *  Pattern (probably similar to Promise) that provides fine grained control over asynchronous execution.
 *  Will iterate over all items in an array and perform 'each(item,callback)'.
 *  Every 'each' needs to call the callback. This callback can be passed down through several asynchronous calls.
 *  When all callbacks have been called, 'after(array)' is called.
 * 
 *  @author fritz.ray@eduworks.com
 *  @module com.eduworks.ec
 *  @class EcAsyncHelper
 */
var EcAsyncHelper = function() {};
EcAsyncHelper = stjs.extend(EcAsyncHelper, null, [], function(constructor, prototype) {
    constructor.scriptPath = null;
    /**
     *  Counter that counts down when each callback is called. Lots of tricks can be done to cause after to proc in different ways.
     * 
     *  @property counter
     *  @type integer
     */
    prototype.counter = null;
    /**
     *  "Each" method. See class description.
     * 
     *  @param {Array}                   array Array to iterate over.
     *  @param {function(item,callback)} each Method that gets invoked per item in the array.
     *  @param {function(array)}         after Method invoked when all callbacks are called.
     *  @method each
     */
    prototype.each = function(array, each, after) {
        var me = this;
        this.counter = array.length;
        if (array.length == 0) 
            after(array);
        for (var i = 0; i < array.length; i++) {
            if (this.counter > 0) 
                this.execute(array, each, after, me, i);
        }
    };
    prototype.execute = function(array, each, after, me, i) {
        Task.immediate(function() {
            each(array[i], function() {
                me.counter--;
                if (me.counter == 0) 
                    after(array);
            });
        });
    };
    /**
     *  Will prevent 'after' from being called.
     * 
     *  @method stop
     */
    prototype.stop = function() {
        this.counter = -1;
    };
}, {}, {});
/**
 *  A directed implementation of {{#crossLink "Graph"}}Graph{{/crossLink}}. Edges have types. Two vertices may have many edges between them.
 * 
 *  @param <V>
 *  @param <E>
 *  @author fray
 *  @class EcDirectedGraph
 *  @module com.eduworks.ec
 *  @extends Graph
 */
var EcDirectedGraph = function() {};
EcDirectedGraph = stjs.extend(EcDirectedGraph, null, [Graph], function(constructor, prototype) {
    prototype.edges = null;
    prototype.verticies = null;
    prototype.getEdges = function() {
        var results = new Array();
        for (var i = 0; i < this.edges.length; i++) 
            results[i] = this.edges[i].edge;
        return results;
    };
    prototype.getVertices = function() {
        var results = new Array();
        for (var i = 0; i < this.verticies.length; i++) 
            results[i] = this.verticies[i];
        return results;
    };
    prototype.containsVertex = function(vertex) {
        for (var i = 0; i < this.verticies.length; i++) 
            if (vertex == this.verticies[i]) 
                return true;
        return false;
    };
    prototype.containsEdge = function(edge) {
        for (var i = 0; i < this.edges.length; i++) 
            if (edge == this.edges[i].edge) 
                return true;
        return false;
    };
    prototype.getEdgeCount = function() {
        return this.edges.length;
    };
    prototype.getVertexCount = function() {
        return this.verticies.length;
    };
    prototype.getNeighbors = function(vertex) {
        var results = new Array();
        for (var i = 0; i < this.edges.length; i++) {
            if (vertex == this.edges[i].source) 
                results.push(this.edges[i].destination);
             else if (vertex == this.edges[i].destination) 
                results.push(this.edges[i].source);
        }
        EcArray.removeDuplicates(results);
        return results;
    };
    prototype.getIncidentEdges = function(vertex) {
        var results = new Array();
        for (var i = 0; i < this.edges.length; i++) {
            if (vertex == this.edges[i].source) 
                results.push(this.edges[i].edge);
             else if (vertex == this.edges[i].destination) 
                results.push(this.edges[i].edge);
        }
        EcArray.removeDuplicates(results);
        return results;
    };
    prototype.getIncidentVertices = function(edge) {
        var results = new Array();
        for (var i = 0; i < this.edges.length; i++) {
            if (edge == this.edges[i].edge) {
                results.push(this.edges[i].source);
                results.push(this.edges[i].destination);
            }
        }
        EcArray.removeDuplicates(results);
        return results;
    };
    prototype.findEdge = function(v1, v2) {
        for (var i = 0; i < this.edges.length; i++) {
            if (v1 == this.edges[i].source && v2 == this.edges[i].destination) 
                return this.edges[i].edge;
            if (v1 == this.edges[i].destination && v2 == this.edges[i].source) 
                return this.edges[i].edge;
        }
        return null;
    };
    prototype.findEdgeSet = function(v1, v2) {
        var results = new Array();
        for (var i = 0; i < this.edges.length; i++) {
            if (v1 == this.edges[i].source && v2 == this.edges[i].destination) 
                results.push(this.edges[i].edge);
            if (v1 == this.edges[i].destination && v2 == this.edges[i].source) 
                results.push(this.edges[i].edge);
        }
        return results;
    };
    prototype.addVertex = function(vertex) {
        if (this.verticies.indexOf(vertex) != -1) 
            return false;
        this.verticies.push(vertex);
        return true;
    };
    prototype.removeVertex = function(vertex) {
        var indexOf = this.verticies.indexOf(vertex);
        if (indexOf != -1) {
            for (var i = 0; i < this.edges.length; i++) {
                if (this.edges[i].source == vertex || this.edges[i].destination == vertex) {
                    this.edges.splice(i, 1);
                    i--;
                }
            }
            this.verticies.splice(indexOf, 1);
            return true;
        }
        return false;
    };
    prototype.removeEdge = function(edge) {
        var success = false;
        for (var i = 0; i < this.edges.length; i++) {
            if (this.edges[i].edge == edge) {
                this.edges.splice(i, 1);
                i--;
                success = true;
            }
        }
        return success;
    };
    prototype.isNeighbor = function(v1, v2) {
        for (var i = 0; i < this.edges.length; i++) {
            if (v1 == this.edges[i].source && v2 == this.edges[i].destination) 
                return true;
             else if (v1 == this.edges[i].destination && v2 == this.edges[i].source) 
                return true;
        }
        return false;
    };
    prototype.isIncident = function(vertex, edge) {
        for (var i = 0; i < this.edges.length; i++) {
            if ((vertex == this.edges[i].source || vertex == this.edges[i].destination) && edge == this.edges[i].edge) 
                return true;
        }
        return false;
    };
    prototype.degree = function(vertex) {
        var count = 0;
        for (var i = 0; i < this.edges.length; i++) {
            if (vertex == this.edges[i].source || vertex == this.edges[i].destination) 
                count++;
        }
        return count;
    };
    prototype.getNeighborCount = function(vertex) {
        return this.getNeighbors(vertex).length;
    };
    prototype.getIncidentCount = function(edge) {
        return this.getIncidentVertices(edge).length;
    };
    prototype.getEdgeType = function(edge) {};
    prototype.getDefaultEdgeType = function() {};
    prototype.getEdgesOfType = function(edge_type) {
        var results = new Array();
        for (var i = 0; i < this.edges.length; i++) {
            if (this.getEdgeType(this.edges[i].edge) == edge_type) 
                results.push(this.edges[i].edge);
        }
        return results;
    };
    prototype.getEdgeCountOfType = function(edge_type) {
        return this.getEdgesOfType(edge_type).length;
    };
    prototype.getInEdges = function(vertex) {
        var results = new Array();
        for (var i = 0; i < this.edges.length; i++) {
            if (vertex == this.edges[i].destination) 
                results.push(this.edges[i].edge);
        }
        EcArray.removeDuplicates(results);
        return results;
    };
    prototype.getOutEdges = function(vertex) {
        var results = new Array();
        for (var i = 0; i < this.edges.length; i++) {
            if (vertex == this.edges[i].source) 
                results.push(this.edges[i].edge);
        }
        EcArray.removeDuplicates(results);
        return results;
    };
    prototype.inDegree = function(vertex) {
        return this.getInEdges(vertex).length;
    };
    prototype.outDegree = function(vertex) {
        return this.getOutEdges(vertex).length;
    };
    prototype.getSource = function(directed_edge) {
        for (var i = 0; i < this.edges.length; i++) {
            if (directed_edge == this.edges[i].edge) 
                return this.edges[i].source;
        }
        return null;
    };
    prototype.getDest = function(directed_edge) {
        for (var i = 0; i < this.edges.length; i++) {
            if (directed_edge == this.edges[i].edge) 
                return this.edges[i].destination;
        }
        return null;
    };
    prototype.getPredecessors = function(vertex) {
        var results = new Array();
        for (var i = 0; i < this.edges.length; i++) {
            if (vertex == this.edges[i].destination) 
                results.push(this.edges[i].source);
        }
        EcArray.removeDuplicates(results);
        return results;
    };
    prototype.getSuccessors = function(vertex) {
        var results = new Array();
        for (var i = 0; i < this.edges.length; i++) {
            if (vertex == this.edges[i].source) 
                results.push(this.edges[i].destination);
        }
        EcArray.removeDuplicates(results);
        return results;
    };
    prototype.isPredecessor = function(v1, v2) {
        for (var i = 0; i < this.edges.length; i++) {
            if (v1 == this.edges[i].destination) 
                if (v2 == this.edges[i].source) 
                    return true;
        }
        return false;
    };
    prototype.isSuccessor = function(v1, v2) {
        for (var i = 0; i < this.edges.length; i++) {
            if (v2 == this.edges[i].destination) 
                if (v1 == this.edges[i].source) 
                    return true;
        }
        return false;
    };
    prototype.getPredecessorCount = function(vertex) {
        return this.getPredecessors(vertex).length;
    };
    prototype.getSuccessorCount = function(vertex) {
        return this.getSuccessors(vertex).length;
    };
    prototype.isSource = function(vertex, edge) {
        for (var i = 0; i < this.edges.length; i++) {
            if (edge == this.edges[i].edge) 
                if (vertex == this.edges[i].source) 
                    return true;
        }
        return false;
    };
    prototype.isDest = function(vertex, edge) {
        for (var i = 0; i < this.edges.length; i++) {
            if (edge == this.edges[i].edge) 
                if (vertex == this.edges[i].destination) 
                    return true;
        }
        return false;
    };
    prototype.addEdge = function(e, v1, v2) {
        this.addVertex(v1);
        this.addVertex(v2);
        var t = new Triple();
        t.source = v1;
        t.destination = v2;
        t.edge = e;
        if (this.edges.indexOf(t) != -1) 
            return false;
        this.edges.push(t);
        return true;
    };
    prototype.getOpposite = function(vertex, edge) {
        for (var i = 0; i < this.edges.length; i++) {
            if (edge == this.edges[i].edge) 
                if (vertex == this.edges[i].destination) 
                    return this.edges[i].source;
                 else if (vertex == this.edges[i].source) 
                    return this.edges[i].destination;
        }
        return null;
    };
}, {edges: {name: "Array", arguments: [{name: "Triple", arguments: ["V", "V", "E"]}]}, verticies: {name: "Array", arguments: ["V"]}}, {});
/**
 * Secure Hash Algorithm with 256-bit digest (SHA-256) implementation.
 *
 * See FIPS 180-2 for details.
 *
 * @author Dave Longley
 *
 * Copyright (c) 2010-2014 Digital Bazaar, Inc.
 */
(function() {
/* ########## Begin module implementation ########## */
function initModule(forge) {

var sha256 = forge.sha256 = forge.sha256 || {};
forge.md = forge.md || {};
forge.md.algorithms = forge.md.algorithms || {};
forge.md.sha256 = forge.md.algorithms.sha256 = sha256;

/**
 * Creates a SHA-256 message digest object.
 *
 * @return a message digest object.
 */
sha256.create = function() {
  // do initialization as necessary
  if(!_initialized) {
    _init();
  }

  // SHA-256 state contains eight 32-bit integers
  var _state = null;

  // input buffer
  var _input = forge.util.createBuffer();

  // used for word storage
  var _w = new Array(64);

  // message digest object
  var md = {
    algorithm: 'sha256',
    blockLength: 64,
    digestLength: 32,
    // 56-bit length of message so far (does not including padding)
    messageLength: 0,
    // true 64-bit message length as two 32-bit ints
    messageLength64: [0, 0]
  };

  /**
   * Starts the digest.
   *
   * @return this digest object.
   */
  md.start = function() {
    md.messageLength = 0;
    md.messageLength64 = [0, 0];
    _input = forge.util.createBuffer();
    _state = {
      h0: 0x6A09E667,
      h1: 0xBB67AE85,
      h2: 0x3C6EF372,
      h3: 0xA54FF53A,
      h4: 0x510E527F,
      h5: 0x9B05688C,
      h6: 0x1F83D9AB,
      h7: 0x5BE0CD19
    };
    return md;
  };
  // start digest automatically for first time
  md.start();

  /**
   * Updates the digest with the given message input. The given input can
   * treated as raw input (no encoding will be applied) or an encoding of
   * 'utf8' maybe given to encode the input using UTF-8.
   *
   * @param msg the message input to update with.
   * @param encoding the encoding to use (default: 'raw', other: 'utf8').
   *
   * @return this digest object.
   */
  md.update = function(msg, encoding) {
    if(encoding === 'utf8') {
      msg = forge.util.encodeUtf8(msg);
    }

    // update message length
    md.messageLength += msg.length;
    md.messageLength64[0] += (msg.length / 0x100000000) >>> 0;
    md.messageLength64[1] += msg.length >>> 0;

    // add bytes to input buffer
    _input.putBytes(msg);

    // process bytes
    _update(_state, _w, _input);

    // compact input buffer every 2K or if empty
    if(_input.read > 2048 || _input.length() === 0) {
      _input.compact();
    }

    return md;
  };

  /**
   * Produces the digest.
   *
   * @return a byte buffer containing the digest value.
   */
  md.digest = function() {
    /* Note: Here we copy the remaining bytes in the input buffer and
    add the appropriate SHA-256 padding. Then we do the final update
    on a copy of the state so that if the user wants to get
    intermediate digests they can do so. */

    /* Determine the number of bytes that must be added to the message
    to ensure its length is congruent to 448 mod 512. In other words,
    the data to be digested must be a multiple of 512 bits (or 128 bytes).
    This data includes the message, some padding, and the length of the
    message. Since the length of the message will be encoded as 8 bytes (64
    bits), that means that the last segment of the data must have 56 bytes
    (448 bits) of message and padding. Therefore, the length of the message
    plus the padding must be congruent to 448 mod 512 because
    512 - 128 = 448.

    In order to fill up the message length it must be filled with
    padding that begins with 1 bit followed by all 0 bits. Padding
    must *always* be present, so if the message length is already
    congruent to 448 mod 512, then 512 padding bits must be added. */

    // 512 bits == 64 bytes, 448 bits == 56 bytes, 64 bits = 8 bytes
    // _padding starts with 1 byte with first bit is set in it which
    // is byte value 128, then there may be up to 63 other pad bytes
    var padBytes = forge.util.createBuffer();
    padBytes.putBytes(_input.bytes());
    // 64 - (remaining msg + 8 bytes msg length) mod 64
    padBytes.putBytes(
      _padding.substr(0, 64 - ((md.messageLength64[1] + 8) & 0x3F)));

    /* Now append length of the message. The length is appended in bits
    as a 64-bit number in big-endian order. Since we store the length in
    bytes, we must multiply the 64-bit length by 8 (or left shift by 3). */
    padBytes.putInt32(
      (md.messageLength64[0] << 3) | (md.messageLength64[0] >>> 28));
    padBytes.putInt32(md.messageLength64[1] << 3);
    var s2 = {
      h0: _state.h0,
      h1: _state.h1,
      h2: _state.h2,
      h3: _state.h3,
      h4: _state.h4,
      h5: _state.h5,
      h6: _state.h6,
      h7: _state.h7
    };
    _update(s2, _w, padBytes);
    var rval = forge.util.createBuffer();
    rval.putInt32(s2.h0);
    rval.putInt32(s2.h1);
    rval.putInt32(s2.h2);
    rval.putInt32(s2.h3);
    rval.putInt32(s2.h4);
    rval.putInt32(s2.h5);
    rval.putInt32(s2.h6);
    rval.putInt32(s2.h7);
    return rval;
  };

  return md;
};

// sha-256 padding bytes not initialized yet
var _padding = null;
var _initialized = false;

// table of constants
var _k = null;

/**
 * Initializes the constant tables.
 */
function _init() {
  // create padding
  _padding = String.fromCharCode(128);
  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);

  // create K table for SHA-256
  _k = [
    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
    0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
    0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
    0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
    0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];

  // now initialized
  _initialized = true;
}

/**
 * Updates a SHA-256 state with the given byte buffer.
 *
 * @param s the SHA-256 state to update.
 * @param w the array to use to store words.
 * @param bytes the byte buffer to update with.
 */
function _update(s, w, bytes) {
  // consume 512 bit (64 byte) chunks
  var t1, t2, s0, s1, ch, maj, i, a, b, c, d, e, f, g, h;
  var len = bytes.length();
  while(len >= 64) {
    // the w array will be populated with sixteen 32-bit big-endian words
    // and then extended into 64 32-bit words according to SHA-256
    for(i = 0; i < 16; ++i) {
      w[i] = bytes.getInt32();
    }
    for(; i < 64; ++i) {
      // XOR word 2 words ago rot right 17, rot right 19, shft right 10
      t1 = w[i - 2];
      t1 =
        ((t1 >>> 17) | (t1 << 15)) ^
        ((t1 >>> 19) | (t1 << 13)) ^
        (t1 >>> 10);
      // XOR word 15 words ago rot right 7, rot right 18, shft right 3
      t2 = w[i - 15];
      t2 =
        ((t2 >>> 7) | (t2 << 25)) ^
        ((t2 >>> 18) | (t2 << 14)) ^
        (t2 >>> 3);
      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^32
      w[i] = (t1 + w[i - 7] + t2 + w[i - 16]) | 0;
    }

    // initialize hash value for this chunk
    a = s.h0;
    b = s.h1;
    c = s.h2;
    d = s.h3;
    e = s.h4;
    f = s.h5;
    g = s.h6;
    h = s.h7;

    // round function
    for(i = 0; i < 64; ++i) {
      // Sum1(e)
      s1 =
        ((e >>> 6) | (e << 26)) ^
        ((e >>> 11) | (e << 21)) ^
        ((e >>> 25) | (e << 7));
      // Ch(e, f, g) (optimized the same way as SHA-1)
      ch = g ^ (e & (f ^ g));
      // Sum0(a)
      s0 =
        ((a >>> 2) | (a << 30)) ^
        ((a >>> 13) | (a << 19)) ^
        ((a >>> 22) | (a << 10));
      // Maj(a, b, c) (optimized the same way as SHA-1)
      maj = (a & b) | (c & (a ^ b));

      // main algorithm
      t1 = h + s1 + ch + _k[i] + w[i];
      t2 = s0 + maj;
      h = g;
      g = f;
      f = e;
      e = (d + t1) | 0;
      d = c;
      c = b;
      b = a;
      a = (t1 + t2) | 0;
    }

    // update hash state
    s.h0 = (s.h0 + a) | 0;
    s.h1 = (s.h1 + b) | 0;
    s.h2 = (s.h2 + c) | 0;
    s.h3 = (s.h3 + d) | 0;
    s.h4 = (s.h4 + e) | 0;
    s.h5 = (s.h5 + f) | 0;
    s.h6 = (s.h6 + g) | 0;
    s.h7 = (s.h7 + h) | 0;
    len -= 64;
  }
}

} // end module implementation

/* ########## Begin module wrapper ########## */
var name = 'sha256';
if(typeof define !== 'function') {
  // NodeJS -> AMD
  if(typeof module === 'object' && module.exports) {
    var nodeJS = true;
    define = function(ids, factory) {
      factory(require, module);
    };
  } else {
    // <script>
    if(typeof forge === 'undefined') {
      forge = {};
    }
    return initModule(forge);
  }
}
// AMD
var deps;
var defineFunc = function(require, module) {
  module.exports = function(forge) {
    var mods = deps.map(function(dep) {
      return require(dep);
    }).concat(initModule);
    // handle circular dependencies
    forge = forge || {};
    forge.defined = forge.defined || {};
    if(forge.defined[name]) {
      return forge[name];
    }
    forge.defined[name] = true;
    for(var i = 0; i < mods.length; ++i) {
      mods[i](forge);
    }
    return forge[name];
  };
};
var tmpDefine = define;
define = function(ids, factory) {
  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);
  if(nodeJS) {
    delete define;
    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));
  }
  define = tmpDefine;
  return define.apply(null, Array.prototype.slice.call(arguments, 0));
};
define(['require', 'module', './util'], function() {
  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));
});
})();
var AlgorithmIdentifier = function() {};
AlgorithmIdentifier = stjs.extend(AlgorithmIdentifier, null, [], function(constructor, prototype) {
    prototype.name = null;
    prototype.modulusLength = 0;
    prototype.length = 0;
    prototype.publicExponent = null;
    prototype.hash = null;
    prototype.iv = null;
    prototype.counter = null;
}, {iv: "ArrayBuffer", counter: "ArrayBuffer"}, {});
var jwk = function() {};
jwk = stjs.extend(jwk, null, [], function(constructor, prototype) {
    prototype.kty = null;
    prototype.k = null;
    prototype.alg = null;
    prototype.ext = null;
}, {}, {});
/**
 * Javascript implementation of basic RSA algorithms.
 *
 * @author Dave Longley
 *
 * Copyright (c) 2010-2014 Digital Bazaar, Inc.
 *
 * The only algorithm currently supported for PKI is RSA.
 *
 * An RSA key is often stored in ASN.1 DER format. The SubjectPublicKeyInfo
 * ASN.1 structure is composed of an algorithm of type AlgorithmIdentifier
 * and a subjectPublicKey of type bit string.
 *
 * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters
 * for the algorithm, if any. In the case of RSA, there aren't any.
 *
 * SubjectPublicKeyInfo ::= SEQUENCE {
 *   algorithm AlgorithmIdentifier,
 *   subjectPublicKey BIT STRING
 * }
 *
 * AlgorithmIdentifer ::= SEQUENCE {
 *   algorithm OBJECT IDENTIFIER,
 *   parameters ANY DEFINED BY algorithm OPTIONAL
 * }
 *
 * For an RSA public key, the subjectPublicKey is:
 *
 * RSAPublicKey ::= SEQUENCE {
 *   modulus            INTEGER,    -- n
 *   publicExponent     INTEGER     -- e
 * }
 *
 * PrivateKeyInfo ::= SEQUENCE {
 *   version                   Version,
 *   privateKeyAlgorithm       PrivateKeyAlgorithmIdentifier,
 *   privateKey                PrivateKey,
 *   attributes           [0]  IMPLICIT Attributes OPTIONAL
 * }
 *
 * Version ::= INTEGER
 * PrivateKeyAlgorithmIdentifier ::= AlgorithmIdentifier
 * PrivateKey ::= OCTET STRING
 * Attributes ::= SET OF Attribute
 *
 * An RSA private key as the following structure:
 *
 * RSAPrivateKey ::= SEQUENCE {
 *   version Version,
 *   modulus INTEGER, -- n
 *   publicExponent INTEGER, -- e
 *   privateExponent INTEGER, -- d
 *   prime1 INTEGER, -- p
 *   prime2 INTEGER, -- q
 *   exponent1 INTEGER, -- d mod (p-1)
 *   exponent2 INTEGER, -- d mod (q-1)
 *   coefficient INTEGER -- (inverse of q) mod p
 * }
 *
 * Version ::= INTEGER
 *
 * The OID for the RSA key algorithm is: 1.2.840.113549.1.1.1
 */
(function() {
function initModule(forge) {
/* ########## Begin module implementation ########## */

if(typeof BigInteger === 'undefined') {
  var BigInteger = forge.jsbn.BigInteger;
}

// shortcut for asn.1 API
var asn1 = forge.asn1;

/*
 * RSA encryption and decryption, see RFC 2313.
 */
forge.pki = forge.pki || {};
forge.pki.rsa = forge.rsa = forge.rsa || {};
var pki = forge.pki;

// for finding primes, which are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29
var GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];

// validator for a PrivateKeyInfo structure
var privateKeyValidator = {
  // PrivateKeyInfo
  name: 'PrivateKeyInfo',
  tagClass: asn1.Class.UNIVERSAL,
  type: asn1.Type.SEQUENCE,
  constructed: true,
  value: [{
    // Version (INTEGER)
    name: 'PrivateKeyInfo.version',
    tagClass: asn1.Class.UNIVERSAL,
    type: asn1.Type.INTEGER,
    constructed: false,
    capture: 'privateKeyVersion'
  }, {
    // privateKeyAlgorithm
    name: 'PrivateKeyInfo.privateKeyAlgorithm',
    tagClass: asn1.Class.UNIVERSAL,
    type: asn1.Type.SEQUENCE,
    constructed: true,
    value: [{
      name: 'AlgorithmIdentifier.algorithm',
      tagClass: asn1.Class.UNIVERSAL,
      type: asn1.Type.OID,
      constructed: false,
      capture: 'privateKeyOid'
    }]
  }, {
    // PrivateKey
    name: 'PrivateKeyInfo',
    tagClass: asn1.Class.UNIVERSAL,
    type: asn1.Type.OCTETSTRING,
    constructed: false,
    capture: 'privateKey'
  }]
};

// validator for an RSA private key
var rsaPrivateKeyValidator = {
  // RSAPrivateKey
  name: 'RSAPrivateKey',
  tagClass: asn1.Class.UNIVERSAL,
  type: asn1.Type.SEQUENCE,
  constructed: true,
  value: [{
    // Version (INTEGER)
    name: 'RSAPrivateKey.version',
    tagClass: asn1.Class.UNIVERSAL,
    type: asn1.Type.INTEGER,
    constructed: false,
    capture: 'privateKeyVersion'
  }, {
    // modulus (n)
    name: 'RSAPrivateKey.modulus',
    tagClass: asn1.Class.UNIVERSAL,
    type: asn1.Type.INTEGER,
    constructed: false,
    capture: 'privateKeyModulus'
  }, {
    // publicExponent (e)
    name: 'RSAPrivateKey.publicExponent',
    tagClass: asn1.Class.UNIVERSAL,
    type: asn1.Type.INTEGER,
    constructed: false,
    capture: 'privateKeyPublicExponent'
  }, {
    // privateExponent (d)
    name: 'RSAPrivateKey.privateExponent',
    tagClass: asn1.Class.UNIVERSAL,
    type: asn1.Type.INTEGER,
    constructed: false,
    capture: 'privateKeyPrivateExponent'
  }, {
    // prime1 (p)
    name: 'RSAPrivateKey.prime1',
    tagClass: asn1.Class.UNIVERSAL,
    type: asn1.Type.INTEGER,
    constructed: false,
    capture: 'privateKeyPrime1'
  }, {
    // prime2 (q)
    name: 'RSAPrivateKey.prime2',
    tagClass: asn1.Class.UNIVERSAL,
    type: asn1.Type.INTEGER,
    constructed: false,
    capture: 'privateKeyPrime2'
  }, {
    // exponent1 (d mod (p-1))
    name: 'RSAPrivateKey.exponent1',
    tagClass: asn1.Class.UNIVERSAL,
    type: asn1.Type.INTEGER,
    constructed: false,
    capture: 'privateKeyExponent1'
  }, {
    // exponent2 (d mod (q-1))
    name: 'RSAPrivateKey.exponent2',
    tagClass: asn1.Class.UNIVERSAL,
    type: asn1.Type.INTEGER,
    constructed: false,
    capture: 'privateKeyExponent2'
  }, {
    // coefficient ((inverse of q) mod p)
    name: 'RSAPrivateKey.coefficient',
    tagClass: asn1.Class.UNIVERSAL,
    type: asn1.Type.INTEGER,
    constructed: false,
    capture: 'privateKeyCoefficient'
  }]
};

// validator for an RSA public key
var rsaPublicKeyValidator = {
  // RSAPublicKey
  name: 'RSAPublicKey',
  tagClass: asn1.Class.UNIVERSAL,
  type: asn1.Type.SEQUENCE,
  constructed: true,
  value: [{
    // modulus (n)
    name: 'RSAPublicKey.modulus',
    tagClass: asn1.Class.UNIVERSAL,
    type: asn1.Type.INTEGER,
    constructed: false,
    capture: 'publicKeyModulus'
  }, {
    // publicExponent (e)
    name: 'RSAPublicKey.exponent',
    tagClass: asn1.Class.UNIVERSAL,
    type: asn1.Type.INTEGER,
    constructed: false,
    capture: 'publicKeyExponent'
  }]
};

// validator for an SubjectPublicKeyInfo structure
// Note: Currently only works with an RSA public key
var publicKeyValidator = forge.pki.rsa.publicKeyValidator = {
  name: 'SubjectPublicKeyInfo',
  tagClass: asn1.Class.UNIVERSAL,
  type: asn1.Type.SEQUENCE,
  constructed: true,
  captureAsn1: 'subjectPublicKeyInfo',
  value: [{
    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',
    tagClass: asn1.Class.UNIVERSAL,
    type: asn1.Type.SEQUENCE,
    constructed: true,
    value: [{
      name: 'AlgorithmIdentifier.algorithm',
      tagClass: asn1.Class.UNIVERSAL,
      type: asn1.Type.OID,
      constructed: false,
      capture: 'publicKeyOid'
    }]
  }, {
    // subjectPublicKey
    name: 'SubjectPublicKeyInfo.subjectPublicKey',
    tagClass: asn1.Class.UNIVERSAL,
    type: asn1.Type.BITSTRING,
    constructed: false,
    value: [{
      // RSAPublicKey
      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',
      tagClass: asn1.Class.UNIVERSAL,
      type: asn1.Type.SEQUENCE,
      constructed: true,
      optional: true,
      captureAsn1: 'rsaPublicKey'
    }]
  }]
};

/**
 * Wrap digest in DigestInfo object.
 *
 * This function implements EMSA-PKCS1-v1_5-ENCODE as per RFC 3447.
 *
 * DigestInfo ::= SEQUENCE {
 *   digestAlgorithm DigestAlgorithmIdentifier,
 *   digest Digest
 * }
 *
 * DigestAlgorithmIdentifier ::= AlgorithmIdentifier
 * Digest ::= OCTET STRING
 *
 * @param md the message digest object with the hash to sign.
 *
 * @return the encoded message (ready for RSA encrytion)
 */
var emsaPkcs1v15encode = function(md) {
  // get the oid for the algorithm
  var oid;
  if(md.algorithm in pki.oids) {
    oid = pki.oids[md.algorithm];
  } else {
    var error = new Error('Unknown message digest algorithm.');
    error.algorithm = md.algorithm;
    throw error;
  }
  var oidBytes = asn1.oidToDer(oid).getBytes();

  // create the digest info
  var digestInfo = asn1.create(
    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);
  var digestAlgorithm = asn1.create(
    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);
  digestAlgorithm.value.push(asn1.create(
    asn1.Class.UNIVERSAL, asn1.Type.OID, false, oidBytes));
  digestAlgorithm.value.push(asn1.create(
    asn1.Class.UNIVERSAL, asn1.Type.NULL, false, ''));
  var digest = asn1.create(
    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING,
    false, md.digest().getBytes());
  digestInfo.value.push(digestAlgorithm);
  digestInfo.value.push(digest);

  // encode digest info
  return asn1.toDer(digestInfo).getBytes();
};

/**
 * Performs x^c mod n (RSA encryption or decryption operation).
 *
 * @param x the number to raise and mod.
 * @param key the key to use.
 * @param pub true if the key is public, false if private.
 *
 * @return the result of x^c mod n.
 */
var _modPow = function(x, key, pub) {
  if(pub) {
    return x.modPow(key.e, key.n);
  }

  if(!key.p || !key.q) {
    // allow calculation without CRT params (slow)
    return x.modPow(key.d, key.n);
  }

  // pre-compute dP, dQ, and qInv if necessary
  if(!key.dP) {
    key.dP = key.d.mod(key.p.subtract(BigInteger.ONE));
  }
  if(!key.dQ) {
    key.dQ = key.d.mod(key.q.subtract(BigInteger.ONE));
  }
  if(!key.qInv) {
    key.qInv = key.q.modInverse(key.p);
  }

  /* Chinese remainder theorem (CRT) states:

    Suppose n1, n2, ..., nk are positive integers which are pairwise
    coprime (n1 and n2 have no common factors other than 1). For any
    integers x1, x2, ..., xk there exists an integer x solving the
    system of simultaneous congruences (where ~= means modularly
    congruent so a ~= b mod n means a mod n = b mod n):

    x ~= x1 mod n1
    x ~= x2 mod n2
    ...
    x ~= xk mod nk

    This system of congruences has a single simultaneous solution x
    between 0 and n - 1. Furthermore, each xk solution and x itself
    is congruent modulo the product n = n1*n2*...*nk.
    So x1 mod n = x2 mod n = xk mod n = x mod n.

    The single simultaneous solution x can be solved with the following
    equation:

    x = sum(xi*ri*si) mod n where ri = n/ni and si = ri^-1 mod ni.

    Where x is less than n, xi = x mod ni.

    For RSA we are only concerned with k = 2. The modulus n = pq, where
    p and q are coprime. The RSA decryption algorithm is:

    y = x^d mod n

    Given the above:

    x1 = x^d mod p
    r1 = n/p = q
    s1 = q^-1 mod p
    x2 = x^d mod q
    r2 = n/q = p
    s2 = p^-1 mod q

    So y = (x1r1s1 + x2r2s2) mod n
         = ((x^d mod p)q(q^-1 mod p) + (x^d mod q)p(p^-1 mod q)) mod n

    According to Fermat's Little Theorem, if the modulus P is prime,
    for any integer A not evenly divisible by P, A^(P-1) ~= 1 mod P.
    Since A is not divisible by P it follows that if:
    N ~= M mod (P - 1), then A^N mod P = A^M mod P. Therefore:

    A^N mod P = A^(M mod (P - 1)) mod P. (The latter takes less effort
    to calculate). In order to calculate x^d mod p more quickly the
    exponent d mod (p - 1) is stored in the RSA private key (the same
    is done for x^d mod q). These values are referred to as dP and dQ
    respectively. Therefore we now have:

    y = ((x^dP mod p)q(q^-1 mod p) + (x^dQ mod q)p(p^-1 mod q)) mod n

    Since we'll be reducing x^dP by modulo p (same for q) we can also
    reduce x by p (and q respectively) before hand. Therefore, let

    xp = ((x mod p)^dP mod p), and
    xq = ((x mod q)^dQ mod q), yielding:

    y = (xp*q*(q^-1 mod p) + xq*p*(p^-1 mod q)) mod n

    This can be further reduced to a simple algorithm that only
    requires 1 inverse (the q inverse is used) to be used and stored.
    The algorithm is called Garner's algorithm. If qInv is the
    inverse of q, we simply calculate:

    y = (qInv*(xp - xq) mod p) * q + xq

    However, there are two further complications. First, we need to
    ensure that xp > xq to prevent signed BigIntegers from being used
    so we add p until this is true (since we will be mod'ing with
    p anyway). Then, there is a known timing attack on algorithms
    using the CRT. To mitigate this risk, "cryptographic blinding"
    should be used. This requires simply generating a random number r between
    0 and n-1 and its inverse and multiplying x by r^e before calculating y
    and then multiplying y by r^-1 afterwards.
  */

  // cryptographic blinding
  var r;
  do {
    r = new BigInteger(
      forge.util.bytesToHex(forge.random.getBytes(key.n.bitLength() / 8)),
      16).mod(key.n);
  } while(r.equals(BigInteger.ZERO));
  x = x.multiply(r.modPow(key.e, key.n)).mod(key.n);

  // calculate xp and xq
  var xp = x.mod(key.p).modPow(key.dP, key.p);
  var xq = x.mod(key.q).modPow(key.dQ, key.q);

  // xp must be larger than xq to avoid signed bit usage
  while(xp.compareTo(xq) < 0) {
    xp = xp.add(key.p);
  }

  // do last step
  var y = xp.subtract(xq)
    .multiply(key.qInv).mod(key.p)
    .multiply(key.q).add(xq);

  // remove effect of random for cryptographic blinding
  y = y.multiply(r.modInverse(key.n)).mod(key.n);

  return y;
};

/**
 * NOTE: THIS METHOD IS DEPRECATED, use 'sign' on a private key object or
 * 'encrypt' on a public key object instead.
 *
 * Performs RSA encryption.
 *
 * The parameter bt controls whether to put padding bytes before the
 * message passed in. Set bt to either true or false to disable padding
 * completely (in order to handle e.g. EMSA-PSS encoding seperately before),
 * signaling whether the encryption operation is a public key operation
 * (i.e. encrypting data) or not, i.e. private key operation (data signing).
 *
 * For PKCS#1 v1.5 padding pass in the block type to use, i.e. either 0x01
 * (for signing) or 0x02 (for encryption). The key operation mode (private
 * or public) is derived from this flag in that case).
 *
 * @param m the message to encrypt as a byte string.
 * @param key the RSA key to use.
 * @param bt for PKCS#1 v1.5 padding, the block type to use
 *   (0x01 for private key, 0x02 for public),
 *   to disable padding: true = public key, false = private key.
 *
 * @return the encrypted bytes as a string.
 */
pki.rsa.encrypt = function(m, key, bt) {
  var pub = bt;
  var eb;

  // get the length of the modulus in bytes
  var k = Math.ceil(key.n.bitLength() / 8);

  if(bt !== false && bt !== true) {
    // legacy, default to PKCS#1 v1.5 padding
    pub = (bt === 0x02);
    eb = _encodePkcs1_v1_5(m, key, bt);
  } else {
    eb = forge.util.createBuffer();
    eb.putBytes(m);
  }

  // load encryption block as big integer 'x'
  // FIXME: hex conversion inefficient, get BigInteger w/byte strings
  var x = new BigInteger(eb.toHex(), 16);

  // do RSA encryption
  var y = _modPow(x, key, pub);

  // convert y into the encrypted data byte string, if y is shorter in
  // bytes than k, then prepend zero bytes to fill up ed
  // FIXME: hex conversion inefficient, get BigInteger w/byte strings
  var yhex = y.toString(16);
  var ed = forge.util.createBuffer();
  var zeros = k - Math.ceil(yhex.length / 2);
  while(zeros > 0) {
    ed.putByte(0x00);
    --zeros;
  }
  ed.putBytes(forge.util.hexToBytes(yhex));
  return ed.getBytes();
};

/**
 * NOTE: THIS METHOD IS DEPRECATED, use 'decrypt' on a private key object or
 * 'verify' on a public key object instead.
 *
 * Performs RSA decryption.
 *
 * The parameter ml controls whether to apply PKCS#1 v1.5 padding
 * or not.  Set ml = false to disable padding removal completely
 * (in order to handle e.g. EMSA-PSS later on) and simply pass back
 * the RSA encryption block.
 *
 * @param ed the encrypted data to decrypt in as a byte string.
 * @param key the RSA key to use.
 * @param pub true for a public key operation, false for private.
 * @param ml the message length, if known, false to disable padding.
 *
 * @return the decrypted message as a byte string.
 */
pki.rsa.decrypt = function(ed, key, pub, ml) {
  // get the length of the modulus in bytes
  var k = Math.ceil(key.n.bitLength() / 8);

  // error if the length of the encrypted data ED is not k
  if(ed.length !== k) {
    var error = new Error('Encrypted message length is invalid.');
    error.length = ed.length;
    error.expected = k;
    throw error;
  }

  // convert encrypted data into a big integer
  // FIXME: hex conversion inefficient, get BigInteger w/byte strings
  var y = new BigInteger(forge.util.createBuffer(ed).toHex(), 16);

  // y must be less than the modulus or it wasn't the result of
  // a previous mod operation (encryption) using that modulus
  if(y.compareTo(key.n) >= 0) {
    throw new Error('Encrypted message is invalid.');
  }

  // do RSA decryption
  var x = _modPow(y, key, pub);

  // create the encryption block, if x is shorter in bytes than k, then
  // prepend zero bytes to fill up eb
  // FIXME: hex conversion inefficient, get BigInteger w/byte strings
  var xhex = x.toString(16);
  var eb = forge.util.createBuffer();
  var zeros = k - Math.ceil(xhex.length / 2);
  while(zeros > 0) {
    eb.putByte(0x00);
    --zeros;
  }
  eb.putBytes(forge.util.hexToBytes(xhex));

  if(ml !== false) {
    // legacy, default to PKCS#1 v1.5 padding
    return _decodePkcs1_v1_5(eb.getBytes(), key, pub);
  }

  // return message
  return eb.getBytes();
};

/**
 * Creates an RSA key-pair generation state object. It is used to allow
 * key-generation to be performed in steps. It also allows for a UI to
 * display progress updates.
 *
 * @param bits the size for the private key in bits, defaults to 2048.
 * @param e the public exponent to use, defaults to 65537 (0x10001).
 * @param [options] the options to use.
 *          prng a custom crypto-secure pseudo-random number generator to use,
 *            that must define "getBytesSync".
 *          algorithm the algorithm to use (default: 'PRIMEINC').
 *
 * @return the state object to use to generate the key-pair.
 */
pki.rsa.createKeyPairGenerationState = function(bits, e, options) {
  // TODO: migrate step-based prime generation code to forge.prime

  // set default bits
  if(typeof(bits) === 'string') {
    bits = parseInt(bits, 10);
  }
  bits = bits || 2048;

  // create prng with api that matches BigInteger secure random
  options = options || {};
  var prng = options.prng || forge.random;
  var rng = {
    // x is an array to fill with bytes
    nextBytes: function(x) {
      var b = prng.getBytesSync(x.length);
      for(var i = 0; i < x.length; ++i) {
        x[i] = b.charCodeAt(i);
      }
    }
  };

  var algorithm = options.algorithm || 'PRIMEINC';

  // create PRIMEINC algorithm state
  var rval;
  if(algorithm === 'PRIMEINC') {
    rval = {
      algorithm: algorithm,
      state: 0,
      bits: bits,
      rng: rng,
      eInt: e || 65537,
      e: new BigInteger(null),
      p: null,
      q: null,
      qBits: bits >> 1,
      pBits: bits - (bits >> 1),
      pqState: 0,
      num: null,
      keys: null
    };
    rval.e.fromInt(rval.eInt);
  } else {
    throw new Error('Invalid key generation algorithm: ' + algorithm);
  }

  return rval;
};

/**
 * Attempts to runs the key-generation algorithm for at most n seconds
 * (approximately) using the given state. When key-generation has completed,
 * the keys will be stored in state.keys.
 *
 * To use this function to update a UI while generating a key or to prevent
 * causing browser lockups/warnings, set "n" to a value other than 0. A
 * simple pattern for generating a key and showing a progress indicator is:
 *
 * var state = pki.rsa.createKeyPairGenerationState(2048);
 * var step = function() {
 *   // step key-generation, run algorithm for 100 ms, repeat
 *   if(!forge.pki.rsa.stepKeyPairGenerationState(state, 100)) {
 *     setTimeout(step, 1);
 *   } else {
 *     // key-generation complete
 *     // TODO: turn off progress indicator here
 *     // TODO: use the generated key-pair in "state.keys"
 *   }
 * };
 * // TODO: turn on progress indicator here
 * setTimeout(step, 0);
 *
 * @param state the state to use.
 * @param n the maximum number of milliseconds to run the algorithm for, 0
 *          to run the algorithm to completion.
 *
 * @return true if the key-generation completed, false if not.
 */
pki.rsa.stepKeyPairGenerationState = function(state, n) {
  // set default algorithm if not set
  if(!('algorithm' in state)) {
    state.algorithm = 'PRIMEINC';
  }

  // TODO: migrate step-based prime generation code to forge.prime
  // TODO: abstract as PRIMEINC algorithm

  // do key generation (based on Tom Wu's rsa.js, see jsbn.js license)
  // with some minor optimizations and designed to run in steps

  // local state vars
  var THIRTY = new BigInteger(null);
  THIRTY.fromInt(30);
  var deltaIdx = 0;
  var op_or = function(x,y) { return x|y; };

  // keep stepping until time limit is reached or done
  var t1 = +new Date();
  var t2;
  var total = 0;
  while(state.keys === null && (n <= 0 || total < n)) {
    // generate p or q
    if(state.state === 0) {
      /* Note: All primes are of the form:

        30k+i, for i < 30 and gcd(30, i)=1, where there are 8 values for i

        When we generate a random number, we always align it at 30k + 1. Each
        time the number is determined not to be prime we add to get to the
        next 'i', eg: if the number was at 30k + 1 we add 6. */
      var bits = (state.p === null) ? state.pBits : state.qBits;
      var bits1 = bits - 1;

      // get a random number
      if(state.pqState === 0) {
        state.num = new BigInteger(bits, state.rng);
        // force MSB set
        if(!state.num.testBit(bits1)) {
          state.num.bitwiseTo(
            BigInteger.ONE.shiftLeft(bits1), op_or, state.num);
        }
        // align number on 30k+1 boundary
        state.num.dAddOffset(31 - state.num.mod(THIRTY).byteValue(), 0);
        deltaIdx = 0;

        ++state.pqState;
      } else if(state.pqState === 1) {
        // try to make the number a prime
        if(state.num.bitLength() > bits) {
          // overflow, try again
          state.pqState = 0;
          // do primality test
        } else if(state.num.isProbablePrime(
          _getMillerRabinTests(state.num.bitLength()))) {
          ++state.pqState;
        } else {
          // get next potential prime
          state.num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);
        }
      } else if(state.pqState === 2) {
        // ensure number is coprime with e
        state.pqState =
          (state.num.subtract(BigInteger.ONE).gcd(state.e)
          .compareTo(BigInteger.ONE) === 0) ? 3 : 0;
      } else if(state.pqState === 3) {
        // store p or q
        state.pqState = 0;
        if(state.p === null) {
          state.p = state.num;
        } else {
          state.q = state.num;
        }

        // advance state if both p and q are ready
        if(state.p !== null && state.q !== null) {
          ++state.state;
        }
        state.num = null;
      }
    } else if(state.state === 1) {
      // ensure p is larger than q (swap them if not)
      if(state.p.compareTo(state.q) < 0) {
        state.num = state.p;
        state.p = state.q;
        state.q = state.num;
      }
      ++state.state;
    } else if(state.state === 2) {
      // compute phi: (p - 1)(q - 1) (Euler's totient function)
      state.p1 = state.p.subtract(BigInteger.ONE);
      state.q1 = state.q.subtract(BigInteger.ONE);
      state.phi = state.p1.multiply(state.q1);
      ++state.state;
    } else if(state.state === 3) {
      // ensure e and phi are coprime
      if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) === 0) {
        // phi and e are coprime, advance
        ++state.state;
      } else {
        // phi and e aren't coprime, so generate a new p and q
        state.p = null;
        state.q = null;
        state.state = 0;
      }
    } else if(state.state === 4) {
      // create n, ensure n is has the right number of bits
      state.n = state.p.multiply(state.q);

      // ensure n is right number of bits
      if(state.n.bitLength() === state.bits) {
        // success, advance
        ++state.state;
      } else {
        // failed, get new q
        state.q = null;
        state.state = 0;
      }
    } else if(state.state === 5) {
      // set keys
      var d = state.e.modInverse(state.phi);
      state.keys = {
        privateKey: pki.rsa.setPrivateKey(
          state.n, state.e, d, state.p, state.q,
          d.mod(state.p1), d.mod(state.q1),
          state.q.modInverse(state.p)),
        publicKey: pki.rsa.setPublicKey(state.n, state.e)
      };
    }

    // update timing
    t2 = +new Date();
    total += t2 - t1;
    t1 = t2;
  }

  return state.keys !== null;
};

/**
 * Generates an RSA public-private key pair in a single call.
 *
 * To generate a key-pair in steps (to allow for progress updates and to
 * prevent blocking or warnings in slow browsers) then use the key-pair
 * generation state functions.
 *
 * To generate a key-pair asynchronously (either through web-workers, if
 * available, or by breaking up the work on the main thread), pass a
 * callback function.
 *
 * @param [bits] the size for the private key in bits, defaults to 2048.
 * @param [e] the public exponent to use, defaults to 65537.
 * @param [options] options for key-pair generation, if given then 'bits'
 *          and 'e' must *not* be given:
 *          bits the size for the private key in bits, (default: 2048).
 *          e the public exponent to use, (default: 65537 (0x10001)).
 *          workerScript the worker script URL.
 *          workers the number of web workers (if supported) to use,
 *            (default: 2).
 *          workLoad the size of the work load, ie: number of possible prime
 *            numbers for each web worker to check per work assignment,
 *            (default: 100).
 *          e the public exponent to use, defaults to 65537.
 *          prng a custom crypto-secure pseudo-random number generator to use,
 *            that must define "getBytesSync".
 *          algorithm the algorithm to use (default: 'PRIMEINC').
 * @param [callback(err, keypair)] called once the operation completes.
 *
 * @return an object with privateKey and publicKey properties.
 */
pki.rsa.generateKeyPair = function(bits, e, options, callback) {
  // (bits), (options), (callback)
  if(arguments.length === 1) {
    if(typeof bits === 'object') {
      options = bits;
      bits = undefined;
    } else if(typeof bits === 'function') {
      callback = bits;
      bits = undefined;
    }
  } else if(arguments.length === 2) {
    // (bits, e), (bits, options), (bits, callback), (options, callback)
    if(typeof bits === 'number') {
      if(typeof e === 'function') {
        callback = e;
        e = undefined;
      } else if(typeof e !== 'number') {
        options = e;
        e = undefined;
      }
    } else {
      options = bits;
      callback = e;
      bits = undefined;
      e = undefined;
    }
  } else if(arguments.length === 3) {
    // (bits, e, options), (bits, e, callback), (bits, options, callback)
    if(typeof e === 'number') {
      if(typeof options === 'function') {
        callback = options;
        options = undefined;
      }
    } else {
      callback = options;
      options = e;
      e = undefined;
    }
  }
  options = options || {};
  if(bits === undefined) {
    bits = options.bits || 2048;
  }
  if(e === undefined) {
    e = options.e || 0x10001;
  }
  var state = pki.rsa.createKeyPairGenerationState(bits, e, options);
  if(!callback) {
    pki.rsa.stepKeyPairGenerationState(state, 0);
    return state.keys;
  }
  _generateKeyPair(state, options, callback);
};

/**
 * Sets an RSA public key from BigIntegers modulus and exponent.
 *
 * @param n the modulus.
 * @param e the exponent.
 *
 * @return the public key.
 */
pki.setRsaPublicKey = pki.rsa.setPublicKey = function(n, e) {
  var key = {
    n: n,
    e: e
  };

  /**
   * Encrypts the given data with this public key. Newer applications
   * should use the 'RSA-OAEP' decryption scheme, 'RSAES-PKCS1-V1_5' is for
   * legacy applications.
   *
   * @param data the byte string to encrypt.
   * @param scheme the encryption scheme to use:
   *          'RSAES-PKCS1-V1_5' (default),
   *          'RSA-OAEP',
   *          'RAW', 'NONE', or null to perform raw RSA encryption,
   *          an object with an 'encode' property set to a function
   *          with the signature 'function(data, key)' that returns
   *          a binary-encoded string representing the encoded data.
   * @param schemeOptions any scheme-specific options.
   *
   * @return the encrypted byte string.
   */
  key.encrypt = function(data, scheme, schemeOptions) {
    if(typeof scheme === 'string') {
      scheme = scheme.toUpperCase();
    } else if(scheme === undefined) {
      scheme = 'RSAES-PKCS1-V1_5';
    }

    if(scheme === 'RSAES-PKCS1-V1_5') {
      scheme = {
        encode: function(m, key, pub) {
          return _encodePkcs1_v1_5(m, key, 0x02).getBytes();
        }
      };
    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {
      scheme = {
        encode: function(m, key) {
          return forge.pkcs1.encode_rsa_oaep(key, m, schemeOptions);
        }
      };
    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {
      scheme = { encode: function(e) { return e; } };
    } else if(typeof scheme === 'string') {
      throw new Error('Unsupported encryption scheme: "' + scheme + '".');
    }

    // do scheme-based encoding then rsa encryption
    var e = scheme.encode(data, key, true);
    return pki.rsa.encrypt(e, key, true);
  };

  /**
   * Verifies the given signature against the given digest.
   *
   * PKCS#1 supports multiple (currently two) signature schemes:
   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.
   *
   * By default this implementation uses the "old scheme", i.e.
   * RSASSA-PKCS1-V1_5, in which case once RSA-decrypted, the
   * signature is an OCTET STRING that holds a DigestInfo.
   *
   * DigestInfo ::= SEQUENCE {
   *   digestAlgorithm DigestAlgorithmIdentifier,
   *   digest Digest
   * }
   * DigestAlgorithmIdentifier ::= AlgorithmIdentifier
   * Digest ::= OCTET STRING
   *
   * To perform PSS signature verification, provide an instance
   * of Forge PSS object as the scheme parameter.
   *
   * @param digest the message digest hash to compare against the signature,
   *          as a binary-encoded string.
   * @param signature the signature to verify, as a binary-encoded string.
   * @param scheme signature verification scheme to use:
   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,
   *          a Forge PSS object for RSASSA-PSS,
   *          'NONE' or null for none, DigestInfo will not be expected, but
   *            PKCS#1 v1.5 padding will still be used.
   *
   * @return true if the signature was verified, false if not.
   */
   key.verify = function(digest, signature, scheme) {
     if(typeof scheme === 'string') {
       scheme = scheme.toUpperCase();
     } else if(scheme === undefined) {
       scheme = 'RSASSA-PKCS1-V1_5';
     }

     if(scheme === 'RSASSA-PKCS1-V1_5') {
       scheme = {
         verify: function(digest, d) {
           // remove padding
           d = _decodePkcs1_v1_5(d, key, true);
           // d is ASN.1 BER-encoded DigestInfo
           var obj = asn1.fromDer(d);
           // compare the given digest to the decrypted one
           return digest === obj.value[1].value;
         }
       };
     } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {
       scheme = {
         verify: function(digest, d) {
           // remove padding
           d = _decodePkcs1_v1_5(d, key, true);
           return digest === d;
         }
       };
     }

     // do rsa decryption w/o any decoding, then verify -- which does decoding
     var d = pki.rsa.decrypt(signature, key, true, false);
     return scheme.verify(digest, d, key.n.bitLength());
  };

  return key;
};

/**
 * Sets an RSA private key from BigIntegers modulus, exponent, primes,
 * prime exponents, and modular multiplicative inverse.
 *
 * @param n the modulus.
 * @param e the public exponent.
 * @param d the private exponent ((inverse of e) mod n).
 * @param p the first prime.
 * @param q the second prime.
 * @param dP exponent1 (d mod (p-1)).
 * @param dQ exponent2 (d mod (q-1)).
 * @param qInv ((inverse of q) mod p)
 *
 * @return the private key.
 */
pki.setRsaPrivateKey = pki.rsa.setPrivateKey = function(
  n, e, d, p, q, dP, dQ, qInv) {
  var key = {
    n: n,
    e: e,
    d: d,
    p: p,
    q: q,
    dP: dP,
    dQ: dQ,
    qInv: qInv
  };

  /**
   * Decrypts the given data with this private key. The decryption scheme
   * must match the one used to encrypt the data.
   *
   * @param data the byte string to decrypt.
   * @param scheme the decryption scheme to use:
   *          'RSAES-PKCS1-V1_5' (default),
   *          'RSA-OAEP',
   *          'RAW', 'NONE', or null to perform raw RSA decryption.
   * @param schemeOptions any scheme-specific options.
   *
   * @return the decrypted byte string.
   */
  key.decrypt = function(data, scheme, schemeOptions) {
    if(typeof scheme === 'string') {
      scheme = scheme.toUpperCase();
    } else if(scheme === undefined) {
      scheme = 'RSAES-PKCS1-V1_5';
    }

    // do rsa decryption w/o any decoding
    var d = pki.rsa.decrypt(data, key, false, false);

    if(scheme === 'RSAES-PKCS1-V1_5') {
      scheme = { decode: _decodePkcs1_v1_5 };
    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {
      scheme = {
        decode: function(d, key) {
          return forge.pkcs1.decode_rsa_oaep(key, d, schemeOptions);
        }
      };
    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {
      scheme = { decode: function(d) { return d; } };
    } else {
      throw new Error('Unsupported encryption scheme: "' + scheme + '".');
    }

    // decode according to scheme
    return scheme.decode(d, key, false);
  };

  /**
   * Signs the given digest, producing a signature.
   *
   * PKCS#1 supports multiple (currently two) signature schemes:
   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.
   *
   * By default this implementation uses the "old scheme", i.e.
   * RSASSA-PKCS1-V1_5. In order to generate a PSS signature, provide
   * an instance of Forge PSS object as the scheme parameter.
   *
   * @param md the message digest object with the hash to sign.
   * @param scheme the signature scheme to use:
   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,
   *          a Forge PSS object for RSASSA-PSS,
   *          'NONE' or null for none, DigestInfo will not be used but
   *            PKCS#1 v1.5 padding will still be used.
   *
   * @return the signature as a byte string.
   */
  key.sign = function(md, scheme) {
    /* Note: The internal implementation of RSA operations is being
      transitioned away from a PKCS#1 v1.5 hard-coded scheme. Some legacy
      code like the use of an encoding block identifier 'bt' will eventually
      be removed. */

    // private key operation
    var bt = false;

    if(typeof scheme === 'string') {
      scheme = scheme.toUpperCase();
    }

    if(scheme === undefined || scheme === 'RSASSA-PKCS1-V1_5') {
      scheme = { encode: emsaPkcs1v15encode };
      bt = 0x01;
    } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {
      scheme = { encode: function() { return md; } };
      bt = 0x01;
    }

    // encode and then encrypt
    var d = scheme.encode(md, key.n.bitLength());
    return pki.rsa.encrypt(d, key, bt);
  };

  return key;
};

/**
 * Wraps an RSAPrivateKey ASN.1 object in an ASN.1 PrivateKeyInfo object.
 *
 * @param rsaKey the ASN.1 RSAPrivateKey.
 *
 * @return the ASN.1 PrivateKeyInfo.
 */
pki.wrapRsaPrivateKey = function(rsaKey) {
  // PrivateKeyInfo
  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [
    // version (0)
    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,
      asn1.integerToDer(0).getBytes()),
    // privateKeyAlgorithm
    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [
      asn1.create(
        asn1.Class.UNIVERSAL, asn1.Type.OID, false,
        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),
      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')
    ]),
    // PrivateKey
    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,
      asn1.toDer(rsaKey).getBytes())
    ]);
};

/**
 * Converts a private key from an ASN.1 object.
 *
 * @param obj the ASN.1 representation of a PrivateKeyInfo containing an
 *          RSAPrivateKey or an RSAPrivateKey.
 *
 * @return the private key.
 */
pki.privateKeyFromAsn1 = function(obj) {
  // get PrivateKeyInfo
  var capture = {};
  var errors = [];
  if(asn1.validate(obj, privateKeyValidator, capture, errors)) {
    obj = asn1.fromDer(forge.util.createBuffer(capture.privateKey));
  }

  // get RSAPrivateKey
  capture = {};
  errors = [];
  if(!asn1.validate(obj, rsaPrivateKeyValidator, capture, errors)) {
    var error = new Error('Cannot read private key. ' +
      'ASN.1 object does not contain an RSAPrivateKey.');
    error.errors = errors;
    throw error;
  }

  // Note: Version is currently ignored.
  // capture.privateKeyVersion
  // FIXME: inefficient, get a BigInteger that uses byte strings
  var n, e, d, p, q, dP, dQ, qInv;
  n = forge.util.createBuffer(capture.privateKeyModulus).toHex();
  e = forge.util.createBuffer(capture.privateKeyPublicExponent).toHex();
  d = forge.util.createBuffer(capture.privateKeyPrivateExponent).toHex();
  p = forge.util.createBuffer(capture.privateKeyPrime1).toHex();
  q = forge.util.createBuffer(capture.privateKeyPrime2).toHex();
  dP = forge.util.createBuffer(capture.privateKeyExponent1).toHex();
  dQ = forge.util.createBuffer(capture.privateKeyExponent2).toHex();
  qInv = forge.util.createBuffer(capture.privateKeyCoefficient).toHex();

  // set private key
  return pki.setRsaPrivateKey(
    new BigInteger(n, 16),
    new BigInteger(e, 16),
    new BigInteger(d, 16),
    new BigInteger(p, 16),
    new BigInteger(q, 16),
    new BigInteger(dP, 16),
    new BigInteger(dQ, 16),
    new BigInteger(qInv, 16));
};

/**
 * Converts a private key to an ASN.1 RSAPrivateKey.
 *
 * @param key the private key.
 *
 * @return the ASN.1 representation of an RSAPrivateKey.
 */
pki.privateKeyToAsn1 = pki.privateKeyToRSAPrivateKey = function(key) {
  // RSAPrivateKey
  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [
    // version (0 = only 2 primes, 1 multiple primes)
    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,
      asn1.integerToDer(0).getBytes()),
    // modulus (n)
    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,
      _bnToBytes(key.n)),
    // publicExponent (e)
    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,
      _bnToBytes(key.e)),
    // privateExponent (d)
    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,
      _bnToBytes(key.d)),
    // privateKeyPrime1 (p)
    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,
      _bnToBytes(key.p)),
    // privateKeyPrime2 (q)
    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,
      _bnToBytes(key.q)),
    // privateKeyExponent1 (dP)
    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,
      _bnToBytes(key.dP)),
    // privateKeyExponent2 (dQ)
    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,
      _bnToBytes(key.dQ)),
    // coefficient (qInv)
    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,
      _bnToBytes(key.qInv))
  ]);
};

/**
 * Converts a public key from an ASN.1 SubjectPublicKeyInfo or RSAPublicKey.
 *
 * @param obj the asn1 representation of a SubjectPublicKeyInfo or RSAPublicKey.
 *
 * @return the public key.
 */
pki.publicKeyFromAsn1 = function(obj) {
  // get SubjectPublicKeyInfo
  var capture = {};
  var errors = [];
  if(asn1.validate(obj, publicKeyValidator, capture, errors)) {
    // get oid
    var oid = asn1.derToOid(capture.publicKeyOid);
    if(oid !== pki.oids.rsaEncryption) {
      var error = new Error('Cannot read public key. Unknown OID.');
      error.oid = oid;
      throw error;
    }
    obj = capture.rsaPublicKey;
  }

  // get RSA params
  errors = [];
  if(!asn1.validate(obj, rsaPublicKeyValidator, capture, errors)) {
    var error = new Error('Cannot read public key. ' +
      'ASN.1 object does not contain an RSAPublicKey.');
    error.errors = errors;
    throw error;
  }

  // FIXME: inefficient, get a BigInteger that uses byte strings
  var n = forge.util.createBuffer(capture.publicKeyModulus).toHex();
  var e = forge.util.createBuffer(capture.publicKeyExponent).toHex();

  // set public key
  return pki.setRsaPublicKey(
    new BigInteger(n, 16),
    new BigInteger(e, 16));
};

/**
 * Converts a public key to an ASN.1 SubjectPublicKeyInfo.
 *
 * @param key the public key.
 *
 * @return the asn1 representation of a SubjectPublicKeyInfo.
 */
pki.publicKeyToAsn1 = pki.publicKeyToSubjectPublicKeyInfo = function(key) {
  // SubjectPublicKeyInfo
  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [
    // AlgorithmIdentifier
    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [
      // algorithm
      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,
        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),
      // parameters (null)
      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')
    ]),
    // subjectPublicKey
    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, [
      pki.publicKeyToRSAPublicKey(key)
    ])
  ]);
};

/**
 * Converts a public key to an ASN.1 RSAPublicKey.
 *
 * @param key the public key.
 *
 * @return the asn1 representation of a RSAPublicKey.
 */
pki.publicKeyToRSAPublicKey = function(key) {
  // RSAPublicKey
  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [
    // modulus (n)
    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,
      _bnToBytes(key.n)),
    // publicExponent (e)
    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,
      _bnToBytes(key.e))
  ]);
};

/**
 * Encodes a message using PKCS#1 v1.5 padding.
 *
 * @param m the message to encode.
 * @param key the RSA key to use.
 * @param bt the block type to use, i.e. either 0x01 (for signing) or 0x02
 *          (for encryption).
 *
 * @return the padded byte buffer.
 */
function _encodePkcs1_v1_5(m, key, bt) {
  var eb = forge.util.createBuffer();

  // get the length of the modulus in bytes
  var k = Math.ceil(key.n.bitLength() / 8);

  /* use PKCS#1 v1.5 padding */
  if(m.length > (k - 11)) {
    var error = new Error('Message is too long for PKCS#1 v1.5 padding.');
    error.length = m.length;
    error.max = k - 11;
    throw error;
  }

  /* A block type BT, a padding string PS, and the data D shall be
    formatted into an octet string EB, the encryption block:

    EB = 00 || BT || PS || 00 || D

    The block type BT shall be a single octet indicating the structure of
    the encryption block. For this version of the document it shall have
    value 00, 01, or 02. For a private-key operation, the block type
    shall be 00 or 01. For a public-key operation, it shall be 02.

    The padding string PS shall consist of k-3-||D|| octets. For block
    type 00, the octets shall have value 00; for block type 01, they
    shall have value FF; and for block type 02, they shall be
    pseudorandomly generated and nonzero. This makes the length of the
    encryption block EB equal to k. */

  // build the encryption block
  eb.putByte(0x00);
  eb.putByte(bt);

  // create the padding
  var padNum = k - 3 - m.length;
  var padByte;
  // private key op
  if(bt === 0x00 || bt === 0x01) {
    padByte = (bt === 0x00) ? 0x00 : 0xFF;
    for(var i = 0; i < padNum; ++i) {
      eb.putByte(padByte);
    }
  } else {
    // public key op
    // pad with random non-zero values
    while(padNum > 0) {
      var numZeros = 0;
      var padBytes = forge.random.getBytes(padNum);
      for(var i = 0; i < padNum; ++i) {
        padByte = padBytes.charCodeAt(i);
        if(padByte === 0) {
          ++numZeros;
        } else {
          eb.putByte(padByte);
        }
      }
      padNum = numZeros;
    }
  }

  // zero followed by message
  eb.putByte(0x00);
  eb.putBytes(m);

  return eb;
}

/**
 * Decodes a message using PKCS#1 v1.5 padding.
 *
 * @param em the message to decode.
 * @param key the RSA key to use.
 * @param pub true if the key is a public key, false if it is private.
 * @param ml the message length, if specified.
 *
 * @return the decoded bytes.
 */
function _decodePkcs1_v1_5(em, key, pub, ml) {
  // get the length of the modulus in bytes
  var k = Math.ceil(key.n.bitLength() / 8);

  /* It is an error if any of the following conditions occurs:

    1. The encryption block EB cannot be parsed unambiguously.
    2. The padding string PS consists of fewer than eight octets
      or is inconsisent with the block type BT.
    3. The decryption process is a public-key operation and the block
      type BT is not 00 or 01, or the decryption process is a
      private-key operation and the block type is not 02.
   */

  // parse the encryption block
  var eb = forge.util.createBuffer(em);
  var first = eb.getByte();
  var bt = eb.getByte();
  if(first !== 0x00 ||
    (pub && bt !== 0x00 && bt !== 0x01) ||
    (!pub && bt != 0x02) ||
    (pub && bt === 0x00 && typeof(ml) === 'undefined')) {
    throw new Error('Encryption block is invalid.');
  }

  var padNum = 0;
  if(bt === 0x00) {
    // check all padding bytes for 0x00
    padNum = k - 3 - ml;
    for(var i = 0; i < padNum; ++i) {
      if(eb.getByte() !== 0x00) {
        throw new Error('Encryption block is invalid.');
      }
    }
  } else if(bt === 0x01) {
    // find the first byte that isn't 0xFF, should be after all padding
    padNum = 0;
    while(eb.length() > 1) {
      if(eb.getByte() !== 0xFF) {
        --eb.read;
        break;
      }
      ++padNum;
    }
  } else if(bt === 0x02) {
    // look for 0x00 byte
    padNum = 0;
    while(eb.length() > 1) {
      if(eb.getByte() === 0x00) {
        --eb.read;
        break;
      }
      ++padNum;
    }
  }

  // zero must be 0x00 and padNum must be (k - 3 - message length)
  var zero = eb.getByte();
  if(zero !== 0x00 || padNum !== (k - 3 - eb.length())) {
    throw new Error('Encryption block is invalid.');
  }

  return eb.getBytes();
}

/**
 * Runs the key-generation algorithm asynchronously, either in the background
 * via Web Workers, or using the main thread and setImmediate.
 *
 * @param state the key-pair generation state.
 * @param [options] options for key-pair generation:
 *          workerScript the worker script URL.
 *          workers the number of web workers (if supported) to use,
 *            (default: 2, -1 to use estimated cores minus one).
 *          workLoad the size of the work load, ie: number of possible prime
 *            numbers for each web worker to check per work assignment,
 *            (default: 100).
 * @param callback(err, keypair) called once the operation completes.
 */
function _generateKeyPair(state, options, callback) {
  if(typeof options === 'function') {
    callback = options;
    options = {};
  }
  options = options || {};

  var opts = {
    algorithm: {
      name: options.algorithm || 'PRIMEINC',
      options: {
        workers: options.workers || 2,
        workLoad: options.workLoad || 100,
        workerScript: options.workerScript
      }
    }
  };
  if('prng' in options) {
    opts.prng = options.prng;
  }

  generate();

  function generate() {
    // find p and then q (done in series to simplify)
    getPrime(state.pBits, function(err, num) {
      if(err) {
        return callback(err);
      }
      state.p = num;
      if(state.q !== null) {
        return finish(err, state.q);
      }
      getPrime(state.qBits, finish);
    });
  }

  function getPrime(bits, callback) {
    forge.prime.generateProbablePrime(bits, opts, callback);
  }

  function finish(err, num) {
    if(err) {
      return callback(err);
    }

    // set q
    state.q = num;

    // ensure p is larger than q (swap them if not)
    if(state.p.compareTo(state.q) < 0) {
      var tmp = state.p;
      state.p = state.q;
      state.q = tmp;
    }

    // ensure p is coprime with e
    if(state.p.subtract(BigInteger.ONE).gcd(state.e)
      .compareTo(BigInteger.ONE) !== 0) {
      state.p = null;
      generate();
      return;
    }

    // ensure q is coprime with e
    if(state.q.subtract(BigInteger.ONE).gcd(state.e)
      .compareTo(BigInteger.ONE) !== 0) {
      state.q = null;
      getPrime(state.qBits, finish);
      return;
    }

    // compute phi: (p - 1)(q - 1) (Euler's totient function)
    state.p1 = state.p.subtract(BigInteger.ONE);
    state.q1 = state.q.subtract(BigInteger.ONE);
    state.phi = state.p1.multiply(state.q1);

    // ensure e and phi are coprime
    if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) !== 0) {
      // phi and e aren't coprime, so generate a new p and q
      state.p = state.q = null;
      generate();
      return;
    }

    // create n, ensure n is has the right number of bits
    state.n = state.p.multiply(state.q);
    if(state.n.bitLength() !== state.bits) {
      // failed, get new q
      state.q = null;
      getPrime(state.qBits, finish);
      return;
    }

    // set keys
    var d = state.e.modInverse(state.phi);
    state.keys = {
      privateKey: pki.rsa.setPrivateKey(
        state.n, state.e, d, state.p, state.q,
        d.mod(state.p1), d.mod(state.q1),
        state.q.modInverse(state.p)),
      publicKey: pki.rsa.setPublicKey(state.n, state.e)
    };

    callback(null, state.keys);
  }
}

/**
 * Converts a positive BigInteger into 2's-complement big-endian bytes.
 *
 * @param b the big integer to convert.
 *
 * @return the bytes.
 */
function _bnToBytes(b) {
  // prepend 0x00 if first byte >= 0x80
  var hex = b.toString(16);
  if(hex[0] >= '8') {
    hex = '00' + hex;
  }
  return forge.util.hexToBytes(hex);
}

/**
 * Returns the required number of Miller-Rabin tests to generate a
 * prime with an error probability of (1/2)^80.
 *
 * See Handbook of Applied Cryptography Chapter 4, Table 4.4.
 *
 * @param bits the bit size.
 *
 * @return the required number of iterations.
 */
function _getMillerRabinTests(bits) {
  if(bits <= 100) return 27;
  if(bits <= 150) return 18;
  if(bits <= 200) return 15;
  if(bits <= 250) return 12;
  if(bits <= 300) return 9;
  if(bits <= 350) return 8;
  if(bits <= 400) return 7;
  if(bits <= 500) return 6;
  if(bits <= 600) return 5;
  if(bits <= 800) return 4;
  if(bits <= 1250) return 3;
  return 2;
}

} // end module implementation

/* ########## Begin module wrapper ########## */
var name = 'rsa';
if(typeof define !== 'function') {
  // NodeJS -> AMD
  if(typeof module === 'object' && module.exports) {
    var nodeJS = true;
    define = function(ids, factory) {
      factory(require, module);
    };
  } else {
    // <script>
    if(typeof forge === 'undefined') {
      forge = {};
    }
    return initModule(forge);
  }
}
// AMD
var deps;
var defineFunc = function(require, module) {
  module.exports = function(forge) {
    var mods = deps.map(function(dep) {
      return require(dep);
    }).concat(initModule);
    // handle circular dependencies
    forge = forge || {};
    forge.defined = forge.defined || {};
    if(forge.defined[name]) {
      return forge[name];
    }
    forge.defined[name] = true;
    for(var i = 0; i < mods.length; ++i) {
      mods[i](forge);
    }
    return forge[name];
  };
};
var tmpDefine = define;
define = function(ids, factory) {
  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);
  if(nodeJS) {
    delete define;
    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));
  }
  define = tmpDefine;
  return define.apply(null, Array.prototype.slice.call(arguments, 0));
};
define([
  'require',
  'module',
  './asn1',
  './jsbn',
  './oids',
  './pkcs1',
  './prime',
  './random',
  './util'
], function() {
  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));
});
})();
/**
 *  @author Fritz
 */
var EcCrypto = function() {};
EcCrypto = stjs.extend(EcCrypto, null, [], function(constructor, prototype) {
    constructor.caching = false;
    constructor.decryptionCache = new Object();
    constructor.md5 = function(s) {
        var m = forge.md.md5.create();
        m.update(s);
        return m.digest().toHex();
    };
}, {decryptionCache: "Object"}, {});
/**
 *  Helper classes for dealing with RSA Public Keys.
 * 
 *  @author fritz.ray@eduworks.com
 *  @class EcPk
 *  @module com.eduworks.ec
 */
var EcPk = function() {};
EcPk = stjs.extend(EcPk, null, [], function(constructor, prototype) {
    prototype.pk = null;
    prototype.jwk = null;
    prototype.key = null;
    prototype.signKey = null;
    /**
     *  Decodes a PEM encoded SubjectPublicKeyInfo (PKCS#8) or RSAPublicKey (PKCS#1) formatted RSA Public Key.
     *  (In case you were curious.)
     * 
     *  @param {string} pem PEM as a string.
     *  @return {EcPk} Object used to perform public key operations.
     *  @method fromPem
     *  @static
     */
    constructor.fromPem = function(pem) {
        var pk = new EcPk();
        try {
            pk.pk = forge.pki.publicKeyFromPem(pem);
        }catch (ex) {
            return null;
        }
        return pk;
    };
    /**
     *  Compares two public keys, and returns true if their PEM forms match.
     * 
     *  @param {EcPk} obj Object to compare to.
     *  @return {boolean} True if the keys match.
     *  @method equals
     */
    prototype.equals = function(obj) {
        if (stjs.isInstanceOf(obj.constructor, EcPk)) 
            return this.toPem().equals((obj).toPem());
        return Object.prototype.equals.call(this, obj);
    };
    /**
     *  Encodes the public key into a PEM encoded SubjectPublicKeyInfo (PKCS#8) formatted RSA Public Key.
     *  (In case you were curious.)
     * 
     *  @return {string} PEM encoded public key without whitespace.
     *  @method toPem
     */
    prototype.toPem = function() {
        return forge.pki.publicKeyToPem(this.pk).replaceAll("\r?\n", "");
    };
    /**
     *  Encodes the public key into a PEM encoded RSAPublicKey (PKCS#1) formatted RSA Public Key.
     *  (In case you were curious.)
     * 
     *  @return {string} PEM encoded public key without whitespace.
     *  @method toPkcs1Pem
     */
    prototype.toPkcs1Pem = function() {
        return forge.pki.publicKeyToRSAPublicKeyPem(this.pk).replaceAll("\r?\n", "");
    };
    /**
     *  Encodes the public key into a PEM encoded SubjectPublicKeyInfo (PKCS#8) formatted RSA Public Key.
     *  (In case you were curious.)
     * 
     *  @return {string} PEM encoded public key without whitespace.
     *  @method toPkcs8Pem
     */
    prototype.toPkcs8Pem = function() {
        return forge.pki.publicKeyToPem(this.pk).replaceAll("\r?\n", "");
    };
    prototype.toJwk = function() {
        if (this.jwk == null) 
            this.jwk = pemJwk.pem2jwk(forge.pki.publicKeyToPem(this.pk));
        return this.jwk;
    };
    /**
     *  Hashes the public key into an SSH compatible fingerprint.
     * 
     *  @return {string} Public key fingerprint.
     *  @method fingerprint
     */
    prototype.fingerprint = function() {
        var o = new Object();
        (o)["encoding"] = "hex";
        return forge.ssh.getPublicKeyFingerprint(this.pk, o);
    };
    prototype.verify = function(bytes, decode64) {
        return this.pk.verify(bytes, decode64);
    };
}, {pk: "forge.pk", jwk: "Object", key: "CryptoKey", signKey: "CryptoKey"}, {});
var CryptoKey = function() {};
CryptoKey = stjs.extend(CryptoKey, null, [], null, {}, {});
/**
 * Message Digest Algorithm 5 with 128-bit digest (MD5) implementation.
 *
 * @author Dave Longley
 *
 * Copyright (c) 2010-2014 Digital Bazaar, Inc.
 */
(function() {
/* ########## Begin module implementation ########## */
function initModule(forge) {

var md5 = forge.md5 = forge.md5 || {};
forge.md = forge.md || {};
forge.md.algorithms = forge.md.algorithms || {};
forge.md.md5 = forge.md.algorithms.md5 = md5;

/**
 * Creates an MD5 message digest object.
 *
 * @return a message digest object.
 */
md5.create = function() {
  // do initialization as necessary
  if(!_initialized) {
    _init();
  }

  // MD5 state contains four 32-bit integers
  var _state = null;

  // input buffer
  var _input = forge.util.createBuffer();

  // used for word storage
  var _w = new Array(16);

  // message digest object
  var md = {
    algorithm: 'md5',
    blockLength: 64,
    digestLength: 16,
    // 56-bit length of message so far (does not including padding)
    messageLength: 0,
    // true 64-bit message length as two 32-bit ints
    messageLength64: [0, 0]
  };

  /**
   * Starts the digest.
   *
   * @return this digest object.
   */
  md.start = function() {
    md.messageLength = 0;
    md.messageLength64 = [0, 0];
    _input = forge.util.createBuffer();
    _state = {
      h0: 0x67452301,
      h1: 0xEFCDAB89,
      h2: 0x98BADCFE,
      h3: 0x10325476
    };
    return md;
  };
  // start digest automatically for first time
  md.start();

  /**
   * Updates the digest with the given message input. The given input can
   * treated as raw input (no encoding will be applied) or an encoding of
   * 'utf8' maybe given to encode the input using UTF-8.
   *
   * @param msg the message input to update with.
   * @param encoding the encoding to use (default: 'raw', other: 'utf8').
   *
   * @return this digest object.
   */
  md.update = function(msg, encoding) {
    if(encoding === 'utf8') {
      msg = forge.util.encodeUtf8(msg);
    }

    // update message length
    md.messageLength += msg.length;
    md.messageLength64[0] += (msg.length / 0x100000000) >>> 0;
    md.messageLength64[1] += msg.length >>> 0;

    // add bytes to input buffer
    _input.putBytes(msg);

    // process bytes
    _update(_state, _w, _input);

    // compact input buffer every 2K or if empty
    if(_input.read > 2048 || _input.length() === 0) {
      _input.compact();
    }

    return md;
  };

  /**
   * Produces the digest.
   *
   * @return a byte buffer containing the digest value.
   */
  md.digest = function() {
    /* Note: Here we copy the remaining bytes in the input buffer and
    add the appropriate MD5 padding. Then we do the final update
    on a copy of the state so that if the user wants to get
    intermediate digests they can do so. */

    /* Determine the number of bytes that must be added to the message
    to ensure its length is congruent to 448 mod 512. In other words,
    the data to be digested must be a multiple of 512 bits (or 128 bytes).
    This data includes the message, some padding, and the length of the
    message. Since the length of the message will be encoded as 8 bytes (64
    bits), that means that the last segment of the data must have 56 bytes
    (448 bits) of message and padding. Therefore, the length of the message
    plus the padding must be congruent to 448 mod 512 because
    512 - 128 = 448.

    In order to fill up the message length it must be filled with
    padding that begins with 1 bit followed by all 0 bits. Padding
    must *always* be present, so if the message length is already
    congruent to 448 mod 512, then 512 padding bits must be added. */

    // 512 bits == 64 bytes, 448 bits == 56 bytes, 64 bits = 8 bytes
    // _padding starts with 1 byte with first bit is set in it which
    // is byte value 128, then there may be up to 63 other pad bytes
    var padBytes = forge.util.createBuffer();
    padBytes.putBytes(_input.bytes());
    // 64 - (remaining msg + 8 bytes msg length) mod 64
    padBytes.putBytes(
      _padding.substr(0, 64 - ((md.messageLength64[1] + 8) & 0x3F)));

    /* Now append length of the message. The length is appended in bits
    as a 64-bit number in little-endian order. Since we store the length in
    bytes, we must multiply the 64-bit length by 8 (or left shift by 3). */
    padBytes.putInt32Le(md.messageLength64[1] << 3);
    padBytes.putInt32Le(
      (md.messageLength64[0] << 3) | (md.messageLength64[0] >>> 28));
    var s2 = {
      h0: _state.h0,
      h1: _state.h1,
      h2: _state.h2,
      h3: _state.h3
    };
    _update(s2, _w, padBytes);
    var rval = forge.util.createBuffer();
    rval.putInt32Le(s2.h0);
    rval.putInt32Le(s2.h1);
    rval.putInt32Le(s2.h2);
    rval.putInt32Le(s2.h3);
    return rval;
  };

  return md;
};

// padding, constant tables for calculating md5
var _padding = null;
var _g = null;
var _r = null;
var _k = null;
var _initialized = false;

/**
 * Initializes the constant tables.
 */
function _init() {
  // create padding
  _padding = String.fromCharCode(128);
  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);

  // g values
  _g = [
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    1, 6, 11, 0, 5, 10, 15, 4, 9, 14, 3, 8, 13, 2, 7, 12,
    5, 8, 11, 14, 1, 4, 7, 10, 13, 0, 3, 6, 9, 12, 15, 2,
    0, 7, 14, 5, 12, 3, 10, 1, 8, 15, 6, 13, 4, 11, 2, 9];

  // rounds table
  _r = [
    7, 12, 17, 22,  7, 12, 17, 22,  7, 12, 17, 22,  7, 12, 17, 22,
    5,  9, 14, 20,  5,  9, 14, 20,  5,  9, 14, 20,  5,  9, 14, 20,
    4, 11, 16, 23,  4, 11, 16, 23,  4, 11, 16, 23,  4, 11, 16, 23,
    6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15, 21];

  // get the result of abs(sin(i + 1)) as a 32-bit integer
  _k = new Array(64);
  for(var i = 0; i < 64; ++i) {
    _k[i] = Math.floor(Math.abs(Math.sin(i + 1)) * 0x100000000);
  }

  // now initialized
  _initialized = true;
}

/**
 * Updates an MD5 state with the given byte buffer.
 *
 * @param s the MD5 state to update.
 * @param w the array to use to store words.
 * @param bytes the byte buffer to update with.
 */
function _update(s, w, bytes) {
  // consume 512 bit (64 byte) chunks
  var t, a, b, c, d, f, r, i;
  var len = bytes.length();
  while(len >= 64) {
    // initialize hash value for this chunk
    a = s.h0;
    b = s.h1;
    c = s.h2;
    d = s.h3;

    // round 1
    for(i = 0; i < 16; ++i) {
      w[i] = bytes.getInt32Le();
      f = d ^ (b & (c ^ d));
      t = (a + f + _k[i] + w[i]);
      r = _r[i];
      a = d;
      d = c;
      c = b;
      b += (t << r) | (t >>> (32 - r));
    }
    // round 2
    for(; i < 32; ++i) {
      f = c ^ (d & (b ^ c));
      t = (a + f + _k[i] + w[_g[i]]);
      r = _r[i];
      a = d;
      d = c;
      c = b;
      b += (t << r) | (t >>> (32 - r));
    }
    // round 3
    for(; i < 48; ++i) {
      f = b ^ c ^ d;
      t = (a + f + _k[i] + w[_g[i]]);
      r = _r[i];
      a = d;
      d = c;
      c = b;
      b += (t << r) | (t >>> (32 - r));
    }
    // round 4
    for(; i < 64; ++i) {
      f = c ^ (b | ~d);
      t = (a + f + _k[i] + w[_g[i]]);
      r = _r[i];
      a = d;
      d = c;
      c = b;
      b += (t << r) | (t >>> (32 - r));
    }

    // update hash state
    s.h0 = (s.h0 + a) | 0;
    s.h1 = (s.h1 + b) | 0;
    s.h2 = (s.h2 + c) | 0;
    s.h3 = (s.h3 + d) | 0;

    len -= 64;
  }
}

} // end module implementation

/* ########## Begin module wrapper ########## */
var name = 'md5';
if(typeof define !== 'function') {
  // NodeJS -> AMD
  if(typeof module === 'object' && module.exports) {
    var nodeJS = true;
    define = function(ids, factory) {
      factory(require, module);
    };
  } else {
    // <script>
    if(typeof forge === 'undefined') {
      forge = {};
    }
    return initModule(forge);
  }
}
// AMD
var deps;
var defineFunc = function(require, module) {
  module.exports = function(forge) {
    var mods = deps.map(function(dep) {
      return require(dep);
    }).concat(initModule);
    // handle circular dependencies
    forge = forge || {};
    forge.defined = forge.defined || {};
    if(forge.defined[name]) {
      return forge[name];
    }
    forge.defined[name] = true;
    for(var i = 0; i < mods.length; ++i) {
      mods[i](forge);
    }
    return forge[name];
  };
};
var tmpDefine = define;
define = function(ids, factory) {
  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);
  if(nodeJS) {
    delete define;
    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));
  }
  define = tmpDefine;
  return define.apply(null, Array.prototype.slice.call(arguments, 0));
};
define(['require', 'module', './util'], function() {
  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));
});
})();
/**
 * Javascript implementation of a basic Public Key Infrastructure, including
 * support for RSA public and private keys.
 *
 * @author Dave Longley
 *
 * Copyright (c) 2010-2013 Digital Bazaar, Inc.
 */
(function() {
/* ########## Begin module implementation ########## */
function initModule(forge) {

// shortcut for asn.1 API
var asn1 = forge.asn1;

/* Public Key Infrastructure (PKI) implementation. */
var pki = forge.pki = forge.pki || {};

/**
 * NOTE: THIS METHOD IS DEPRECATED. Use pem.decode() instead.
 *
 * Converts PEM-formatted data to DER.
 *
 * @param pem the PEM-formatted data.
 *
 * @return the DER-formatted data.
 */
pki.pemToDer = function(pem) {
  var msg = forge.pem.decode(pem)[0];
  if(msg.procType && msg.procType.type === 'ENCRYPTED') {
    throw new Error('Could not convert PEM to DER; PEM is encrypted.');
  }
  return forge.util.createBuffer(msg.body);
};

/**
 * Converts an RSA private key from PEM format.
 *
 * @param pem the PEM-formatted private key.
 *
 * @return the private key.
 */
pki.privateKeyFromPem = function(pem) {
  var msg = forge.pem.decode(pem)[0];

  if(msg.type !== 'PRIVATE KEY' && msg.type !== 'RSA PRIVATE KEY') {
    var error = new Error('Could not convert private key from PEM; PEM ' +
      'header type is not "PRIVATE KEY" or "RSA PRIVATE KEY".');
    error.headerType = msg.type;
    throw error;
  }
  if(msg.procType && msg.procType.type === 'ENCRYPTED') {
    throw new Error('Could not convert private key from PEM; PEM is encrypted.');
  }

  // convert DER to ASN.1 object
  var obj = asn1.fromDer(msg.body);

  return pki.privateKeyFromAsn1(obj);
};

/**
 * Converts an RSA private key to PEM format.
 *
 * @param key the private key.
 * @param maxline the maximum characters per line, defaults to 64.
 *
 * @return the PEM-formatted private key.
 */
pki.privateKeyToPem = function(key, maxline) {
  // convert to ASN.1, then DER, then PEM-encode
  var msg = {
    type: 'RSA PRIVATE KEY',
    body: asn1.toDer(pki.privateKeyToAsn1(key)).getBytes()
  };
  return forge.pem.encode(msg, {maxline: maxline});
};

/**
 * Converts a PrivateKeyInfo to PEM format.
 *
 * @param pki the PrivateKeyInfo.
 * @param maxline the maximum characters per line, defaults to 64.
 *
 * @return the PEM-formatted private key.
 */
pki.privateKeyInfoToPem = function(pki, maxline) {
  // convert to DER, then PEM-encode
  var msg = {
    type: 'PRIVATE KEY',
    body: asn1.toDer(pki).getBytes()
  };
  return forge.pem.encode(msg, {maxline: maxline});
};

} // end module implementation

/* ########## Begin module wrapper ########## */
var name = 'pki';
if(typeof define !== 'function') {
  // NodeJS -> AMD
  if(typeof module === 'object' && module.exports) {
    var nodeJS = true;
    define = function(ids, factory) {
      factory(require, module);
    };
  } else {
    // <script>
    if(typeof forge === 'undefined') {
      forge = {};
    }
    return initModule(forge);
  }
}
// AMD
var deps;
var defineFunc = function(require, module) {
  module.exports = function(forge) {
    var mods = deps.map(function(dep) {
      return require(dep);
    }).concat(initModule);
    // handle circular dependencies
    forge = forge || {};
    forge.defined = forge.defined || {};
    if(forge.defined[name]) {
      return forge[name];
    }
    forge.defined[name] = true;
    for(var i = 0; i < mods.length; ++i) {
      mods[i](forge);
    }
    return forge[name];
  };
};
var tmpDefine = define;
define = function(ids, factory) {
  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);
  if(nodeJS) {
    delete define;
    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));
  }
  define = tmpDefine;
  return define.apply(null, Array.prototype.slice.call(arguments, 0));
};
define([
  'require',
  'module',
  './asn1',
  './oids',
  './pbe',
  './pem',
  './pbkdf2',
  './pkcs12',
  './pss',
  './rsa',
  './util',
  './x509'
], function() {
  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));
});
})();
/**
 *  AES encryption tasks common across all variants of AES.
 *  @class EcAes
 *  @module com.eduworks.ec
 *  @author fritz.ray@eduworks.com
 */
var EcAes = function() {};
EcAes = stjs.extend(EcAes, null, [], function(constructor, prototype) {
    /**
     *  Generates a random secret of length @i
     *  @method newSecret
     *  @static
     *  @param {integer} i Length of secret
     *  @return {string} String representing the new secret, encoded using Base64.
     */
    constructor.newSecret = function(i) {
        return forge.util.encode64(forge.random.getBytesSync(i));
    };
    /**
     *  Generates a random Initialization Vector of length @i
     *  @method newIv
     *  @static
     *  @param {integer} i Length of initialization Vector
     *  @return {string} String representing the new Initialization Vector, encoded using Base64.
     */
    constructor.newIv = function(i) {
        return forge.util.encode64(forge.random.getBytesSync(i));
    };
}, {}, {});
var EcAesParameters = function(iv) {
    this.iv = forge.util.decode64(iv);
};
EcAesParameters = stjs.extend(EcAesParameters, null, [], function(constructor, prototype) {
    prototype.iv = null;
}, {iv: "forge.payload"}, {});
/**
 * Functions to output keys in SSH-friendly formats.
 *
 * This is part of the Forge project which may be used under the terms of
 * either the BSD License or the GNU General Public License (GPL) Version 2.
 *
 * See: https://github.com/digitalbazaar/forge/blob/cbebca3780658703d925b61b2caffb1d263a6c1d/LICENSE
 *
 * @author https://github.com/shellac
 */
(function() {
/* ########## Begin module implementation ########## */
function initModule(forge) {

var ssh = forge.ssh = forge.ssh || {};

/**
 * Encodes (and optionally encrypts) a private RSA key as a Putty PPK file.
 *
 * @param privateKey the key.
 * @param passphrase a passphrase to protect the key (falsy for no encryption).
 * @param comment a comment to include in the key file.
 *
 * @return the PPK file as a string.
 */
ssh.privateKeyToPutty = function(privateKey, passphrase, comment) {
  comment = comment || '';
  passphrase = passphrase || '';
  var algorithm = 'ssh-rsa';
  var encryptionAlgorithm = (passphrase === '') ? 'none' : 'aes256-cbc';

  var ppk = 'PuTTY-User-Key-File-2: ' + algorithm + '\r\n';
  ppk += 'Encryption: ' + encryptionAlgorithm + '\r\n';
  ppk += 'Comment: ' + comment + '\r\n';

  // public key into buffer for ppk
  var pubbuffer = forge.util.createBuffer();
  _addStringToBuffer(pubbuffer, algorithm);
  _addBigIntegerToBuffer(pubbuffer, privateKey.e);
  _addBigIntegerToBuffer(pubbuffer, privateKey.n);

  // write public key
  var pub = forge.util.encode64(pubbuffer.bytes(), 64);
  var length = Math.floor(pub.length / 66) + 1; // 66 = 64 + \r\n
  ppk += 'Public-Lines: ' + length + '\r\n';
  ppk += pub;

  // private key into a buffer
  var privbuffer = forge.util.createBuffer();
  _addBigIntegerToBuffer(privbuffer, privateKey.d);
  _addBigIntegerToBuffer(privbuffer, privateKey.p);
  _addBigIntegerToBuffer(privbuffer, privateKey.q);
  _addBigIntegerToBuffer(privbuffer, privateKey.qInv);

  // optionally encrypt the private key
  var priv;
  if(!passphrase) {
    // use the unencrypted buffer
    priv = forge.util.encode64(privbuffer.bytes(), 64);
  } else {
    // encrypt RSA key using passphrase
    var encLen = privbuffer.length() + 16 - 1;
    encLen -= encLen % 16;

    // pad private key with sha1-d data -- needs to be a multiple of 16
    var padding = _sha1(privbuffer.bytes());

    padding.truncate(padding.length() - encLen + privbuffer.length());
    privbuffer.putBuffer(padding);

    var aeskey = forge.util.createBuffer();
    aeskey.putBuffer(_sha1('\x00\x00\x00\x00', passphrase));
    aeskey.putBuffer(_sha1('\x00\x00\x00\x01', passphrase));

    // encrypt some bytes using CBC mode
    // key is 40 bytes, so truncate *by* 8 bytes
    var cipher = forge.aes.createEncryptionCipher(aeskey.truncate(8), 'CBC');
    cipher.start(forge.util.createBuffer().fillWithByte(0, 16));
    cipher.update(privbuffer.copy());
    cipher.finish();
    var encrypted = cipher.output;

    // Note: this appears to differ from Putty -- is forge wrong, or putty?
    // due to padding we finish as an exact multiple of 16
    encrypted.truncate(16); // all padding

    priv = forge.util.encode64(encrypted.bytes(), 64);
  }

  // output private key
  length = Math.floor(priv.length / 66) + 1; // 64 + \r\n
  ppk += '\r\nPrivate-Lines: ' + length + '\r\n';
  ppk += priv;

  // MAC
  var mackey = _sha1('putty-private-key-file-mac-key', passphrase);

  var macbuffer = forge.util.createBuffer();
  _addStringToBuffer(macbuffer, algorithm);
  _addStringToBuffer(macbuffer, encryptionAlgorithm);
  _addStringToBuffer(macbuffer, comment);
  macbuffer.putInt32(pubbuffer.length());
  macbuffer.putBuffer(pubbuffer);
  macbuffer.putInt32(privbuffer.length());
  macbuffer.putBuffer(privbuffer);

  var hmac = forge.hmac.create();
  hmac.start('sha1', mackey);
  hmac.update(macbuffer.bytes());

  ppk += '\r\nPrivate-MAC: ' + hmac.digest().toHex() + '\r\n';

  return ppk;
};

/**
 * Encodes a public RSA key as an OpenSSH file.
 *
 * @param key the key.
 * @param comment a comment.
 *
 * @return the public key in OpenSSH format.
 */
ssh.publicKeyToOpenSSH = function(key, comment) {
  var type = 'ssh-rsa';
  comment = comment || '';

  var buffer = forge.util.createBuffer();
  _addStringToBuffer(buffer, type);
  _addBigIntegerToBuffer(buffer, key.e);
  _addBigIntegerToBuffer(buffer, key.n);

  return type + ' ' + forge.util.encode64(buffer.bytes()) + ' ' + comment;
};

/**
 * Encodes a private RSA key as an OpenSSH file.
 *
 * @param key the key.
 * @param passphrase a passphrase to protect the key (falsy for no encryption).
 *
 * @return the public key in OpenSSH format.
 */
ssh.privateKeyToOpenSSH = function(privateKey, passphrase) {
  if(!passphrase) {
    return forge.pki.privateKeyToPem(privateKey);
  }
  // OpenSSH private key is just a legacy format, it seems
  return forge.pki.encryptRsaPrivateKey(privateKey, passphrase,
    {legacy: true, algorithm: 'aes128'});
};

/**
 * Gets the SSH fingerprint for the given public key.
 *
 * @param options the options to use.
 *          [md] the message digest object to use (defaults to forge.md.md5).
 *          [encoding] an alternative output encoding, such as 'hex'
 *            (defaults to none, outputs a byte buffer).
 *          [delimiter] the delimiter to use between bytes for 'hex' encoded
 *            output, eg: ':' (defaults to none).
 *
 * @return the fingerprint as a byte buffer or other encoding based on options.
 */
ssh.getPublicKeyFingerprint = function(key, options) {
  options = options || {};
  var md = options.md || forge.md.md5.create();

  var type = 'ssh-rsa';
  var buffer = forge.util.createBuffer();
  _addStringToBuffer(buffer, type);
  _addBigIntegerToBuffer(buffer, key.e);
  _addBigIntegerToBuffer(buffer, key.n);

  // hash public key bytes
  md.start();
  md.update(buffer.getBytes());
  var digest = md.digest();
  if(options.encoding === 'hex') {
    var hex = digest.toHex();
    if(options.delimiter) {
      return hex.match(/.{2}/g).join(options.delimiter);
    }
    return hex;
  } else if(options.encoding === 'binary') {
    return digest.getBytes();
  } else if(options.encoding) {
    throw new Error('Unknown encoding "' + options.encoding + '".');
  }
  return digest;
};

/**
 * Adds len(val) then val to a buffer.
 *
 * @param buffer the buffer to add to.
 * @param val a big integer.
 */
function _addBigIntegerToBuffer(buffer, val) {
  var hexVal = val.toString(16);
  // ensure 2s complement +ve
  if(hexVal[0] >= '8') {
    hexVal = '00' + hexVal;
  }
  var bytes = forge.util.hexToBytes(hexVal);
  buffer.putInt32(bytes.length);
  buffer.putBytes(bytes);
}

/**
 * Adds len(val) then val to a buffer.
 *
 * @param buffer the buffer to add to.
 * @param val a string.
 */
function _addStringToBuffer(buffer, val) {
  buffer.putInt32(val.length);
  buffer.putString(val);
}

/**
 * Hashes the arguments into one value using SHA-1.
 *
 * @return the sha1 hash of the provided arguments.
 */
function _sha1() {
  var sha = forge.md.sha1.create();
  var num = arguments.length;
  for (var i = 0; i < num; ++i) {
    sha.update(arguments[i]);
  }
  return sha.digest();
}

} // end module implementation

/* ########## Begin module wrapper ########## */
var name = 'ssh';
if(typeof define !== 'function') {
  // NodeJS -> AMD
  if(typeof module === 'object' && module.exports) {
    var nodeJS = true;
    define = function(ids, factory) {
      factory(require, module);
    };
  } else {
    // <script>
    if(typeof forge === 'undefined') {
      forge = {};
    }
    return initModule(forge);
  }
}
// AMD
var deps;
var defineFunc = function(require, module) {
  module.exports = function(forge) {
    var mods = deps.map(function(dep) {
      return require(dep);
    }).concat(initModule);
    // handle circular dependencies
    forge = forge || {};
    forge.defined = forge.defined || {};
    if(forge.defined[name]) {
      return forge[name];
    }
    forge.defined[name] = true;
    for(var i = 0; i < mods.length; ++i) {
      mods[i](forge);
    }
    return forge[name];
  };
};
var tmpDefine = define;
define = function(ids, factory) {
  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);
  if(nodeJS) {
    delete define;
    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));
  }
  define = tmpDefine;
  return define.apply(null, Array.prototype.slice.call(arguments, 0));
};
define([
  'require',
  'module',
  './aes',
  './hmac',
  './md5',
  './sha1',
  './util'
], function() {
  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));
});
})();
var SubtleCrypto = function() {};
SubtleCrypto = stjs.extend(SubtleCrypto, null, [], function(constructor, prototype) {
    prototype.encrypt = function(algorithm, key, data) {
        return null;
    };
    prototype.decrypt = function(algorithm, key, data) {
        return null;
    };
    prototype.sign = function(algorithm, key, data) {
        return null;
    };
    prototype.verify = function(algorithm, key, signature, data) {
        return null;
    };
    prototype.generateKey = function(algorithm, extractable, keyUsages) {
        return null;
    };
    prototype.deriveBits = function(algorithm, baseKey, length) {
        return null;
    };
    prototype.importKey = function(format, keyData, algorithm, extractable, keyUsages) {
        return null;
    };
}, {}, {});
/**
 * Secure Hash Algorithm with 160-bit digest (SHA-1) implementation.
 *
 * @author Dave Longley
 *
 * Copyright (c) 2010-2014 Digital Bazaar, Inc.
 */
(function() {
/* ########## Begin module implementation ########## */
function initModule(forge) {

var sha1 = forge.sha1 = forge.sha1 || {};
forge.md = forge.md || {};
forge.md.algorithms = forge.md.algorithms || {};
forge.md.sha1 = forge.md.algorithms.sha1 = sha1;

/**
 * Creates a SHA-1 message digest object.
 *
 * @return a message digest object.
 */
sha1.create = function() {
  // do initialization as necessary
  if(!_initialized) {
    _init();
  }

  // SHA-1 state contains five 32-bit integers
  var _state = null;

  // input buffer
  var _input = forge.util.createBuffer();

  // used for word storage
  var _w = new Array(80);

  // message digest object
  var md = {
    algorithm: 'sha1',
    blockLength: 64,
    digestLength: 20,
    // 56-bit length of message so far (does not including padding)
    messageLength: 0,
    // true 64-bit message length as two 32-bit ints
    messageLength64: [0, 0]
  };

  /**
   * Starts the digest.
   *
   * @return this digest object.
   */
  md.start = function() {
    md.messageLength = 0;
    md.messageLength64 = [0, 0];
    _input = forge.util.createBuffer();
    _state = {
      h0: 0x67452301,
      h1: 0xEFCDAB89,
      h2: 0x98BADCFE,
      h3: 0x10325476,
      h4: 0xC3D2E1F0
    };
    return md;
  };
  // start digest automatically for first time
  md.start();

  /**
   * Updates the digest with the given message input. The given input can
   * treated as raw input (no encoding will be applied) or an encoding of
   * 'utf8' maybe given to encode the input using UTF-8.
   *
   * @param msg the message input to update with.
   * @param encoding the encoding to use (default: 'raw', other: 'utf8').
   *
   * @return this digest object.
   */
  md.update = function(msg, encoding) {
    if(encoding === 'utf8') {
      msg = forge.util.encodeUtf8(msg);
    }

    // update message length
    md.messageLength += msg.length;
    md.messageLength64[0] += (msg.length / 0x100000000) >>> 0;
    md.messageLength64[1] += msg.length >>> 0;

    // add bytes to input buffer
    _input.putBytes(msg);

    // process bytes
    _update(_state, _w, _input);

    // compact input buffer every 2K or if empty
    if(_input.read > 2048 || _input.length() === 0) {
      _input.compact();
    }

    return md;
  };

   /**
    * Produces the digest.
    *
    * @return a byte buffer containing the digest value.
    */
   md.digest = function() {
    /* Note: Here we copy the remaining bytes in the input buffer and
    add the appropriate SHA-1 padding. Then we do the final update
    on a copy of the state so that if the user wants to get
    intermediate digests they can do so. */

    /* Determine the number of bytes that must be added to the message
    to ensure its length is congruent to 448 mod 512. In other words,
    the data to be digested must be a multiple of 512 bits (or 128 bytes).
    This data includes the message, some padding, and the length of the
    message. Since the length of the message will be encoded as 8 bytes (64
    bits), that means that the last segment of the data must have 56 bytes
    (448 bits) of message and padding. Therefore, the length of the message
    plus the padding must be congruent to 448 mod 512 because
    512 - 128 = 448.

    In order to fill up the message length it must be filled with
    padding that begins with 1 bit followed by all 0 bits. Padding
    must *always* be present, so if the message length is already
    congruent to 448 mod 512, then 512 padding bits must be added. */

    // 512 bits == 64 bytes, 448 bits == 56 bytes, 64 bits = 8 bytes
    // _padding starts with 1 byte with first bit is set in it which
    // is byte value 128, then there may be up to 63 other pad bytes
    var padBytes = forge.util.createBuffer();
    padBytes.putBytes(_input.bytes());
    // 64 - (remaining msg + 8 bytes msg length) mod 64
    padBytes.putBytes(
      _padding.substr(0, 64 - ((md.messageLength64[1] + 8) & 0x3F)));

    /* Now append length of the message. The length is appended in bits
    as a 64-bit number in big-endian order. Since we store the length in
    bytes, we must multiply the 64-bit length by 8 (or left shift by 3). */
    padBytes.putInt32(
      (md.messageLength64[0] << 3) | (md.messageLength64[0] >>> 28));
    padBytes.putInt32(md.messageLength64[1] << 3);
    var s2 = {
      h0: _state.h0,
      h1: _state.h1,
      h2: _state.h2,
      h3: _state.h3,
      h4: _state.h4
    };
    _update(s2, _w, padBytes);
    var rval = forge.util.createBuffer();
    rval.putInt32(s2.h0);
    rval.putInt32(s2.h1);
    rval.putInt32(s2.h2);
    rval.putInt32(s2.h3);
    rval.putInt32(s2.h4);
    return rval;
  };

  return md;
};

// sha-1 padding bytes not initialized yet
var _padding = null;
var _initialized = false;

/**
 * Initializes the constant tables.
 */
function _init() {
  // create padding
  _padding = String.fromCharCode(128);
  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);

  // now initialized
  _initialized = true;
}

/**
 * Updates a SHA-1 state with the given byte buffer.
 *
 * @param s the SHA-1 state to update.
 * @param w the array to use to store words.
 * @param bytes the byte buffer to update with.
 */
function _update(s, w, bytes) {
  // consume 512 bit (64 byte) chunks
  var t, a, b, c, d, e, f, i;
  var len = bytes.length();
  while(len >= 64) {
    // the w array will be populated with sixteen 32-bit big-endian words
    // and then extended into 80 32-bit words according to SHA-1 algorithm
    // and for 32-79 using Max Locktyukhin's optimization

    // initialize hash value for this chunk
    a = s.h0;
    b = s.h1;
    c = s.h2;
    d = s.h3;
    e = s.h4;

    // round 1
    for(i = 0; i < 16; ++i) {
      t = bytes.getInt32();
      w[i] = t;
      f = d ^ (b & (c ^ d));
      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;
      e = d;
      d = c;
      c = (b << 30) | (b >>> 2);
      b = a;
      a = t;
    }
    for(; i < 20; ++i) {
      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);
      t = (t << 1) | (t >>> 31);
      w[i] = t;
      f = d ^ (b & (c ^ d));
      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;
      e = d;
      d = c;
      c = (b << 30) | (b >>> 2);
      b = a;
      a = t;
    }
    // round 2
    for(; i < 32; ++i) {
      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);
      t = (t << 1) | (t >>> 31);
      w[i] = t;
      f = b ^ c ^ d;
      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;
      e = d;
      d = c;
      c = (b << 30) | (b >>> 2);
      b = a;
      a = t;
    }
    for(; i < 40; ++i) {
      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);
      t = (t << 2) | (t >>> 30);
      w[i] = t;
      f = b ^ c ^ d;
      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;
      e = d;
      d = c;
      c = (b << 30) | (b >>> 2);
      b = a;
      a = t;
    }
    // round 3
    for(; i < 60; ++i) {
      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);
      t = (t << 2) | (t >>> 30);
      w[i] = t;
      f = (b & c) | (d & (b ^ c));
      t = ((a << 5) | (a >>> 27)) + f + e + 0x8F1BBCDC + t;
      e = d;
      d = c;
      c = (b << 30) | (b >>> 2);
      b = a;
      a = t;
    }
    // round 4
    for(; i < 80; ++i) {
      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);
      t = (t << 2) | (t >>> 30);
      w[i] = t;
      f = b ^ c ^ d;
      t = ((a << 5) | (a >>> 27)) + f + e + 0xCA62C1D6 + t;
      e = d;
      d = c;
      c = (b << 30) | (b >>> 2);
      b = a;
      a = t;
    }

    // update hash state
    s.h0 = (s.h0 + a) | 0;
    s.h1 = (s.h1 + b) | 0;
    s.h2 = (s.h2 + c) | 0;
    s.h3 = (s.h3 + d) | 0;
    s.h4 = (s.h4 + e) | 0;

    len -= 64;
  }
}

} // end module implementation

/* ########## Begin module wrapper ########## */
var name = 'sha1';
if(typeof define !== 'function') {
  // NodeJS -> AMD
  if(typeof module === 'object' && module.exports) {
    var nodeJS = true;
    define = function(ids, factory) {
      factory(require, module);
    };
  } else {
    // <script>
    if(typeof forge === 'undefined') {
      forge = {};
    }
    return initModule(forge);
  }
}
// AMD
var deps;
var defineFunc = function(require, module) {
  module.exports = function(forge) {
    var mods = deps.map(function(dep) {
      return require(dep);
    }).concat(initModule);
    // handle circular dependencies
    forge = forge || {};
    forge.defined = forge.defined || {};
    if(forge.defined[name]) {
      return forge[name];
    }
    forge.defined[name] = true;
    for(var i = 0; i < mods.length; ++i) {
      mods[i](forge);
    }
    return forge[name];
  };
};
var tmpDefine = define;
define = function(ids, factory) {
  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);
  if(nodeJS) {
    delete define;
    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));
  }
  define = tmpDefine;
  return define.apply(null, Array.prototype.slice.call(arguments, 0));
};
define(['require', 'module', './util'], function() {
  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));
});
})();
/**
 * An API for getting cryptographically-secure random bytes. The bytes are
 * generated using the Fortuna algorithm devised by Bruce Schneier and
 * Niels Ferguson.
 *
 * Getting strong random bytes is not yet easy to do in javascript. The only
 * truish random entropy that can be collected is from the mouse, keyboard, or
 * from timing with respect to page loads, etc. This generator makes a poor
 * attempt at providing random bytes when those sources haven't yet provided
 * enough entropy to initially seed or to reseed the PRNG.
 *
 * @author Dave Longley
 *
 * Copyright (c) 2009-2014 Digital Bazaar, Inc.
 */
(function() {
/* ########## Begin module implementation ########## */
function initModule(forge) {

// forge.random already defined
if(forge.random && forge.random.getBytes) {
  return;
}

(function(jQuery) {

// the default prng plugin, uses AES-128
var prng_aes = {};
var _prng_aes_output = new Array(4);
var _prng_aes_buffer = forge.util.createBuffer();
prng_aes.formatKey = function(key) {
  // convert the key into 32-bit integers
  var tmp = forge.util.createBuffer(key);
  key = new Array(4);
  key[0] = tmp.getInt32();
  key[1] = tmp.getInt32();
  key[2] = tmp.getInt32();
  key[3] = tmp.getInt32();

  // return the expanded key
  return forge.aes._expandKey(key, false);
};
prng_aes.formatSeed = function(seed) {
  // convert seed into 32-bit integers
  var tmp = forge.util.createBuffer(seed);
  seed = new Array(4);
  seed[0] = tmp.getInt32();
  seed[1] = tmp.getInt32();
  seed[2] = tmp.getInt32();
  seed[3] = tmp.getInt32();
  return seed;
};
prng_aes.cipher = function(key, seed) {
  forge.aes._updateBlock(key, seed, _prng_aes_output, false);
  _prng_aes_buffer.putInt32(_prng_aes_output[0]);
  _prng_aes_buffer.putInt32(_prng_aes_output[1]);
  _prng_aes_buffer.putInt32(_prng_aes_output[2]);
  _prng_aes_buffer.putInt32(_prng_aes_output[3]);
  return _prng_aes_buffer.getBytes();
};
prng_aes.increment = function(seed) {
  // FIXME: do we care about carry or signed issues?
  ++seed[3];
  return seed;
};
prng_aes.md = forge.md.sha256;

/**
 * Creates a new PRNG.
 */
function spawnPrng() {
  var ctx = forge.prng.create(prng_aes);

  /**
   * Gets random bytes. If a native secure crypto API is unavailable, this
   * method tries to make the bytes more unpredictable by drawing from data that
   * can be collected from the user of the browser, eg: mouse movement.
   *
   * If a callback is given, this method will be called asynchronously.
   *
   * @param count the number of random bytes to get.
   * @param [callback(err, bytes)] called once the operation completes.
   *
   * @return the random bytes in a string.
   */
  ctx.getBytes = function(count, callback) {
    return ctx.generate(count, callback);
  };

  /**
   * Gets random bytes asynchronously. If a native secure crypto API is
   * unavailable, this method tries to make the bytes more unpredictable by
   * drawing from data that can be collected from the user of the browser,
   * eg: mouse movement.
   *
   * @param count the number of random bytes to get.
   *
   * @return the random bytes in a string.
   */
  ctx.getBytesSync = function(count) {
    return ctx.generate(count);
  };

  return ctx;
}

// create default prng context
var _ctx = spawnPrng();

// add other sources of entropy only if window.crypto.getRandomValues is not
// available -- otherwise this source will be automatically used by the prng
var _nodejs = (
  typeof process !== 'undefined' && process.versions && process.versions.node);
var getRandomValues = null;
if(typeof window !== 'undefined') {
  var _crypto = window.crypto || window.msCrypto;
  if(_crypto && _crypto.getRandomValues) {
    getRandomValues = function(arr) {
      return _crypto.getRandomValues(arr);
    };
  }
}
if(forge.disableNativeCode || (!_nodejs && !getRandomValues)) {
  // if this is a web worker, do not use weak entropy, instead register to
  // receive strong entropy asynchronously from the main thread
  if(typeof window === 'undefined' || window.document === undefined) {
    // FIXME:
  }

  // get load time entropy
  _ctx.collectInt(+new Date(), 32);

  // add some entropy from navigator object
  if(typeof(navigator) !== 'undefined') {
    var _navBytes = '';
    for(var key in navigator) {
      try {
        if(typeof(navigator[key]) == 'string') {
          _navBytes += navigator[key];
        }
      } catch(e) {
        /* Some navigator keys might not be accessible, e.g. the geolocation
          attribute throws an exception if touched in Mozilla chrome://
          context.

          Silently ignore this and just don't use this as a source of
          entropy. */
      }
    }
    _ctx.collect(_navBytes);
    _navBytes = null;
  }

  // add mouse and keyboard collectors if jquery is available
  if(jQuery) {
    // set up mouse entropy capture
    jQuery().mousemove(function(e) {
      // add mouse coords
      _ctx.collectInt(e.clientX, 16);
      _ctx.collectInt(e.clientY, 16);
    });

    // set up keyboard entropy capture
    jQuery().keypress(function(e) {
      _ctx.collectInt(e.charCode, 8);
    });
  }
}

/* Random API */
if(!forge.random) {
  forge.random = _ctx;
} else {
  // extend forge.random with _ctx
  for(var key in _ctx) {
    forge.random[key] = _ctx[key];
  }
}

// expose spawn PRNG
forge.random.createInstance = spawnPrng;

})(typeof(jQuery) !== 'undefined' ? jQuery : null);

} // end module implementation

/* ########## Begin module wrapper ########## */
var name = 'random';
if(typeof define !== 'function') {
  // NodeJS -> AMD
  if(typeof module === 'object' && module.exports) {
    var nodeJS = true;
    define = function(ids, factory) {
      factory(require, module);
    };
  } else {
    // <script>
    if(typeof forge === 'undefined') {
      forge = {};
    }
    return initModule(forge);
  }
}
// AMD
var deps;
var defineFunc = function(require, module) {
  module.exports = function(forge) {
    var mods = deps.map(function(dep) {
      return require(dep);
    }).concat(initModule);
    // handle circular dependencies
    forge = forge || {};
    forge.defined = forge.defined || {};
    if(forge.defined[name]) {
      return forge[name];
    }
    forge.defined[name] = true;
    for(var i = 0; i < mods.length; ++i) {
      mods[i](forge);
    }
    return forge[name];
  };
};
var tmpDefine = define;
define = function(ids, factory) {
  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);
  if(nodeJS) {
    delete define;
    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));
  }
  define = tmpDefine;
  return define.apply(null, Array.prototype.slice.call(arguments, 0));
};
define(['require', 'module', './aes', './md', './prng', './util'], function() {
  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));
});
})();
/**
 * Cipher base API.
 *
 * @author Dave Longley
 *
 * Copyright (c) 2010-2014 Digital Bazaar, Inc.
 */
(function() {
/* ########## Begin module implementation ########## */
function initModule(forge) {

forge.cipher = forge.cipher || {};

// registered algorithms
forge.cipher.algorithms = forge.cipher.algorithms || {};

/**
 * Creates a cipher object that can be used to encrypt data using the given
 * algorithm and key. The algorithm may be provided as a string value for a
 * previously registered algorithm or it may be given as a cipher algorithm
 * API object.
 *
 * @param algorithm the algorithm to use, either a string or an algorithm API
 *          object.
 * @param key the key to use, as a binary-encoded string of bytes or a
 *          byte buffer.
 *
 * @return the cipher.
 */
forge.cipher.createCipher = function(algorithm, key) {
  var api = algorithm;
  if(typeof api === 'string') {
    api = forge.cipher.getAlgorithm(api);
    if(api) {
      api = api();
    }
  }
  if(!api) {
    throw new Error('Unsupported algorithm: ' + algorithm);
  }

  // assume block cipher
  return new forge.cipher.BlockCipher({
    algorithm: api,
    key: key,
    decrypt: false
  });
};

/**
 * Creates a decipher object that can be used to decrypt data using the given
 * algorithm and key. The algorithm may be provided as a string value for a
 * previously registered algorithm or it may be given as a cipher algorithm
 * API object.
 *
 * @param algorithm the algorithm to use, either a string or an algorithm API
 *          object.
 * @param key the key to use, as a binary-encoded string of bytes or a
 *          byte buffer.
 *
 * @return the cipher.
 */
forge.cipher.createDecipher = function(algorithm, key) {
  var api = algorithm;
  if(typeof api === 'string') {
    api = forge.cipher.getAlgorithm(api);
    if(api) {
      api = api();
    }
  }
  if(!api) {
    throw new Error('Unsupported algorithm: ' + algorithm);
  }

  // assume block cipher
  return new forge.cipher.BlockCipher({
    algorithm: api,
    key: key,
    decrypt: true
  });
};

/**
 * Registers an algorithm by name. If the name was already registered, the
 * algorithm API object will be overwritten.
 *
 * @param name the name of the algorithm.
 * @param algorithm the algorithm API object.
 */
forge.cipher.registerAlgorithm = function(name, algorithm) {
  name = name.toUpperCase();
  forge.cipher.algorithms[name] = algorithm;
};

/**
 * Gets a registered algorithm by name.
 *
 * @param name the name of the algorithm.
 *
 * @return the algorithm, if found, null if not.
 */
forge.cipher.getAlgorithm = function(name) {
  name = name.toUpperCase();
  if(name in forge.cipher.algorithms) {
    return forge.cipher.algorithms[name];
  }
  return null;
};

var BlockCipher = forge.cipher.BlockCipher = function(options) {
  this.algorithm = options.algorithm;
  this.mode = this.algorithm.mode;
  this.blockSize = this.mode.blockSize;
  this._finish = false;
  this._input = null;
  this.output = null;
  this._op = options.decrypt ? this.mode.decrypt : this.mode.encrypt;
  this._decrypt = options.decrypt;
  this.algorithm.initialize(options);
};

/**
 * Starts or restarts the encryption or decryption process, whichever
 * was previously configured.
 *
 * For non-GCM mode, the IV may be a binary-encoded string of bytes, an array
 * of bytes, a byte buffer, or an array of 32-bit integers. If the IV is in
 * bytes, then it must be Nb (16) bytes in length. If the IV is given in as
 * 32-bit integers, then it must be 4 integers long.
 *
 * Note: an IV is not required or used in ECB mode.
 *
 * For GCM-mode, the IV must be given as a binary-encoded string of bytes or
 * a byte buffer. The number of bytes should be 12 (96 bits) as recommended
 * by NIST SP-800-38D but another length may be given.
 *
 * @param options the options to use:
 *          iv the initialization vector to use as a binary-encoded string of
 *            bytes, null to reuse the last ciphered block from a previous
 *            update() (this "residue" method is for legacy support only).
 *          additionalData additional authentication data as a binary-encoded
 *            string of bytes, for 'GCM' mode, (default: none).
 *          tagLength desired length of authentication tag, in bits, for
 *            'GCM' mode (0-128, default: 128).
 *          tag the authentication tag to check if decrypting, as a
 *             binary-encoded string of bytes.
 *          output the output the buffer to write to, null to create one.
 */
BlockCipher.prototype.start = function(options) {
  options = options || {};
  var opts = {};
  for(var key in options) {
    opts[key] = options[key];
  }
  opts.decrypt = this._decrypt;
  this._finish = false;
  this._input = forge.util.createBuffer();
  this.output = options.output || forge.util.createBuffer();
  this.mode.start(opts);
};

/**
 * Updates the next block according to the cipher mode.
 *
 * @param input the buffer to read from.
 */
BlockCipher.prototype.update = function(input) {
  if(input) {
    // input given, so empty it into the input buffer
    this._input.putBuffer(input);
  }

  // do cipher operation until it needs more input and not finished
  while(!this._op.call(this.mode, this._input, this.output, this._finish) &&
    !this._finish) {}

  // free consumed memory from input buffer
  this._input.compact();
};

/**
 * Finishes encrypting or decrypting.
 *
 * @param pad a padding function to use in CBC mode, null for default,
 *          signature(blockSize, buffer, decrypt).
 *
 * @return true if successful, false on error.
 */
BlockCipher.prototype.finish = function(pad) {
  // backwards-compatibility w/deprecated padding API
  // Note: will overwrite padding functions even after another start() call
  if(pad && (this.mode.name === 'ECB' || this.mode.name === 'CBC')) {
    this.mode.pad = function(input) {
      return pad(this.blockSize, input, false);
    };
    this.mode.unpad = function(output) {
      return pad(this.blockSize, output, true);
    };
  }

  // build options for padding and afterFinish functions
  var options = {};
  options.decrypt = this._decrypt;

  // get # of bytes that won't fill a block
  options.overflow = this._input.length() % this.blockSize;

  if(!this._decrypt && this.mode.pad) {
    if(!this.mode.pad(this._input, options)) {
      return false;
    }
  }

  // do final update
  this._finish = true;
  this.update();

  if(this._decrypt && this.mode.unpad) {
    if(!this.mode.unpad(this.output, options)) {
      return false;
    }
  }

  if(this.mode.afterFinish) {
    if(!this.mode.afterFinish(this.output, options)) {
      return false;
    }
  }

  return true;
};


} // end module implementation

/* ########## Begin module wrapper ########## */
var name = 'cipher';
if(typeof define !== 'function') {
  // NodeJS -> AMD
  if(typeof module === 'object' && module.exports) {
    var nodeJS = true;
    define = function(ids, factory) {
      factory(require, module);
    };
  } else {
    // <script>
    if(typeof forge === 'undefined') {
      forge = {};
    }
    return initModule(forge);
  }
}
// AMD
var deps;
var defineFunc = function(require, module) {
  module.exports = function(forge) {
    var mods = deps.map(function(dep) {
      return require(dep);
    }).concat(initModule);
    // handle circular dependencies
    forge = forge || {};
    forge.defined = forge.defined || {};
    if(forge.defined[name]) {
      return forge[name];
    }
    forge.defined[name] = true;
    for(var i = 0; i < mods.length; ++i) {
      mods[i](forge);
    }
    return forge[name];
  };
};
var tmpDefine = define;
define = function(ids, factory) {
  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);
  if(nodeJS) {
    delete define;
    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));
  }
  define = tmpDefine;
  return define.apply(null, Array.prototype.slice.call(arguments, 0));
};
define(['require', 'module', './util'], function() {
  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));
});
})();
/**
 * Utility functions for web applications.
 *
 * @author Dave Longley
 *
 * Copyright (c) 2010-2014 Digital Bazaar, Inc.
 */
(function() {
/* ########## Begin module implementation ########## */
function initModule(forge) {

/* Utilities API */
var util = forge.util = forge.util || {};

// define setImmediate and nextTick
(function() {
  // use native nextTick
  if(typeof process !== 'undefined' && process.nextTick) {
    util.nextTick = process.nextTick;
    if(typeof setImmediate === 'function') {
      util.setImmediate = setImmediate;
    } else {
      // polyfill setImmediate with nextTick, older versions of node
      // (those w/o setImmediate) won't totally starve IO
      util.setImmediate = util.nextTick;
    }
    return;
  }

  // polyfill nextTick with native setImmediate
  if(typeof setImmediate === 'function') {
    util.setImmediate = setImmediate;
    util.nextTick = function(callback) {
      return setImmediate(callback);
    };
    return;
  }

  /* Note: A polyfill upgrade pattern is used here to allow combining
  polyfills. For example, MutationObserver is fast, but blocks UI updates,
  so it needs to allow UI updates periodically, so it falls back on
  postMessage or setTimeout. */

  // polyfill with setTimeout
  util.setImmediate = function(callback) {
    setTimeout(callback, 0);
  };

  // upgrade polyfill to use postMessage
  if(typeof window !== 'undefined' &&
    typeof window.postMessage === 'function') {
    var msg = 'forge.setImmediate';
    var callbacks = [];
    util.setImmediate = function(callback) {
      callbacks.push(callback);
      // only send message when one hasn't been sent in
      // the current turn of the event loop
      if(callbacks.length === 1) {
        window.postMessage(msg, '*');
      }
    };
    function handler(event) {
      if(event.source === window && event.data === msg) {
        event.stopPropagation();
        var copy = callbacks.slice();
        callbacks.length = 0;
        copy.forEach(function(callback) {
          callback();
        });
      }
    }
    window.addEventListener('message', handler, true);
  }

  // upgrade polyfill to use MutationObserver
  if(typeof MutationObserver !== 'undefined') {
    // polyfill with MutationObserver
    var now = Date.now();
    var attr = true;
    var div = document.createElement('div');
    var callbacks = [];
    new MutationObserver(function() {
      var copy = callbacks.slice();
      callbacks.length = 0;
      copy.forEach(function(callback) {
        callback();
      });
    }).observe(div, {attributes: true});
    var oldSetImmediate = util.setImmediate;
    util.setImmediate = function(callback) {
      if(Date.now() - now > 15) {
        now = Date.now();
        oldSetImmediate(callback);
      } else {
        callbacks.push(callback);
        // only trigger observer when it hasn't been triggered in
        // the current turn of the event loop
        if(callbacks.length === 1) {
          div.setAttribute('a', attr = !attr);
        }
      }
    };
  }

  util.nextTick = util.setImmediate;
})();

// define isArray
util.isArray = Array.isArray || function(x) {
  return Object.prototype.toString.call(x) === '[object Array]';
};

// define isArrayBuffer
util.isArrayBuffer = function(x) {
  return typeof ArrayBuffer !== 'undefined' && x instanceof ArrayBuffer;
};

// define isArrayBufferView
util.isArrayBufferView = function(x) {
  return x && util.isArrayBuffer(x.buffer) && x.byteLength !== undefined;
};

// TODO: set ByteBuffer to best available backing
util.ByteBuffer = ByteStringBuffer;

/** Buffer w/BinaryString backing */

/**
 * Constructor for a binary string backed byte buffer.
 *
 * @param [b] the bytes to wrap (either encoded as string, one byte per
 *          character, or as an ArrayBuffer or Typed Array).
 */
function ByteStringBuffer(b) {
  // TODO: update to match DataBuffer API

  // the data in this buffer
  this.data = '';
  // the pointer for reading from this buffer
  this.read = 0;

  if(typeof b === 'string') {
    this.data = b;
  } else if(util.isArrayBuffer(b) || util.isArrayBufferView(b)) {
    // convert native buffer to forge buffer
    // FIXME: support native buffers internally instead
    var arr = new Uint8Array(b);
    try {
      this.data = String.fromCharCode.apply(null, arr);
    } catch(e) {
      for(var i = 0; i < arr.length; ++i) {
        this.putByte(arr[i]);
      }
    }
  } else if(b instanceof ByteStringBuffer ||
    (typeof b === 'object' && typeof b.data === 'string' &&
    typeof b.read === 'number')) {
    // copy existing buffer
    this.data = b.data;
    this.read = b.read;
  }

  // used for v8 optimization
  this._constructedStringLength = 0;
}
util.ByteStringBuffer = ByteStringBuffer;

/* Note: This is an optimization for V8-based browsers. When V8 concatenates
  a string, the strings are only joined logically using a "cons string" or
  "constructed/concatenated string". These containers keep references to one
  another and can result in very large memory usage. For example, if a 2MB
  string is constructed by concatenating 4 bytes together at a time, the
  memory usage will be ~44MB; so ~22x increase. The strings are only joined
  together when an operation requiring their joining takes place, such as
  substr(). This function is called when adding data to this buffer to ensure
  these types of strings are periodically joined to reduce the memory
  footprint. */
var _MAX_CONSTRUCTED_STRING_LENGTH = 4096;
util.ByteStringBuffer.prototype._optimizeConstructedString = function(x) {
  this._constructedStringLength += x;
  if(this._constructedStringLength > _MAX_CONSTRUCTED_STRING_LENGTH) {
    // this substr() should cause the constructed string to join
    this.data.substr(0, 1);
    this._constructedStringLength = 0;
  }
};

/**
 * Gets the number of bytes in this buffer.
 *
 * @return the number of bytes in this buffer.
 */
util.ByteStringBuffer.prototype.length = function() {
  return this.data.length - this.read;
};

/**
 * Gets whether or not this buffer is empty.
 *
 * @return true if this buffer is empty, false if not.
 */
util.ByteStringBuffer.prototype.isEmpty = function() {
  return this.length() <= 0;
};

/**
 * Puts a byte in this buffer.
 *
 * @param b the byte to put.
 *
 * @return this buffer.
 */
util.ByteStringBuffer.prototype.putByte = function(b) {
  return this.putBytes(String.fromCharCode(b));
};

/**
 * Puts a byte in this buffer N times.
 *
 * @param b the byte to put.
 * @param n the number of bytes of value b to put.
 *
 * @return this buffer.
 */
util.ByteStringBuffer.prototype.fillWithByte = function(b, n) {
  b = String.fromCharCode(b);
  var d = this.data;
  while(n > 0) {
    if(n & 1) {
      d += b;
    }
    n >>>= 1;
    if(n > 0) {
      b += b;
    }
  }
  this.data = d;
  this._optimizeConstructedString(n);
  return this;
};

/**
 * Puts bytes in this buffer.
 *
 * @param bytes the bytes (as a UTF-8 encoded string) to put.
 *
 * @return this buffer.
 */
util.ByteStringBuffer.prototype.putBytes = function(bytes) {
  this.data += bytes;
  this._optimizeConstructedString(bytes.length);
  return this;
};

/**
 * Puts a UTF-16 encoded string into this buffer.
 *
 * @param str the string to put.
 *
 * @return this buffer.
 */
util.ByteStringBuffer.prototype.putString = function(str) {
  return this.putBytes(util.encodeUtf8(str));
};

/**
 * Puts a 16-bit integer in this buffer in big-endian order.
 *
 * @param i the 16-bit integer.
 *
 * @return this buffer.
 */
util.ByteStringBuffer.prototype.putInt16 = function(i) {
  return this.putBytes(
    String.fromCharCode(i >> 8 & 0xFF) +
    String.fromCharCode(i & 0xFF));
};

/**
 * Puts a 24-bit integer in this buffer in big-endian order.
 *
 * @param i the 24-bit integer.
 *
 * @return this buffer.
 */
util.ByteStringBuffer.prototype.putInt24 = function(i) {
  return this.putBytes(
    String.fromCharCode(i >> 16 & 0xFF) +
    String.fromCharCode(i >> 8 & 0xFF) +
    String.fromCharCode(i & 0xFF));
};

/**
 * Puts a 32-bit integer in this buffer in big-endian order.
 *
 * @param i the 32-bit integer.
 *
 * @return this buffer.
 */
util.ByteStringBuffer.prototype.putInt32 = function(i) {
  return this.putBytes(
    String.fromCharCode(i >> 24 & 0xFF) +
    String.fromCharCode(i >> 16 & 0xFF) +
    String.fromCharCode(i >> 8 & 0xFF) +
    String.fromCharCode(i & 0xFF));
};

/**
 * Puts a 16-bit integer in this buffer in little-endian order.
 *
 * @param i the 16-bit integer.
 *
 * @return this buffer.
 */
util.ByteStringBuffer.prototype.putInt16Le = function(i) {
  return this.putBytes(
    String.fromCharCode(i & 0xFF) +
    String.fromCharCode(i >> 8 & 0xFF));
};

/**
 * Puts a 24-bit integer in this buffer in little-endian order.
 *
 * @param i the 24-bit integer.
 *
 * @return this buffer.
 */
util.ByteStringBuffer.prototype.putInt24Le = function(i) {
  return this.putBytes(
    String.fromCharCode(i & 0xFF) +
    String.fromCharCode(i >> 8 & 0xFF) +
    String.fromCharCode(i >> 16 & 0xFF));
};

/**
 * Puts a 32-bit integer in this buffer in little-endian order.
 *
 * @param i the 32-bit integer.
 *
 * @return this buffer.
 */
util.ByteStringBuffer.prototype.putInt32Le = function(i) {
  return this.putBytes(
    String.fromCharCode(i & 0xFF) +
    String.fromCharCode(i >> 8 & 0xFF) +
    String.fromCharCode(i >> 16 & 0xFF) +
    String.fromCharCode(i >> 24 & 0xFF));
};

/**
 * Puts an n-bit integer in this buffer in big-endian order.
 *
 * @param i the n-bit integer.
 * @param n the number of bits in the integer.
 *
 * @return this buffer.
 */
util.ByteStringBuffer.prototype.putInt = function(i, n) {
  var bytes = '';
  do {
    n -= 8;
    bytes += String.fromCharCode((i >> n) & 0xFF);
  } while(n > 0);
  return this.putBytes(bytes);
};

/**
 * Puts a signed n-bit integer in this buffer in big-endian order. Two's
 * complement representation is used.
 *
 * @param i the n-bit integer.
 * @param n the number of bits in the integer.
 *
 * @return this buffer.
 */
util.ByteStringBuffer.prototype.putSignedInt = function(i, n) {
  if(i < 0) {
    i += 2 << (n - 1);
  }
  return this.putInt(i, n);
};

/**
 * Puts the given buffer into this buffer.
 *
 * @param buffer the buffer to put into this one.
 *
 * @return this buffer.
 */
util.ByteStringBuffer.prototype.putBuffer = function(buffer) {
  return this.putBytes(buffer.getBytes());
};

/**
 * Gets a byte from this buffer and advances the read pointer by 1.
 *
 * @return the byte.
 */
util.ByteStringBuffer.prototype.getByte = function() {
  return this.data.charCodeAt(this.read++);
};

/**
 * Gets a uint16 from this buffer in big-endian order and advances the read
 * pointer by 2.
 *
 * @return the uint16.
 */
util.ByteStringBuffer.prototype.getInt16 = function() {
  var rval = (
    this.data.charCodeAt(this.read) << 8 ^
    this.data.charCodeAt(this.read + 1));
  this.read += 2;
  return rval;
};

/**
 * Gets a uint24 from this buffer in big-endian order and advances the read
 * pointer by 3.
 *
 * @return the uint24.
 */
util.ByteStringBuffer.prototype.getInt24 = function() {
  var rval = (
    this.data.charCodeAt(this.read) << 16 ^
    this.data.charCodeAt(this.read + 1) << 8 ^
    this.data.charCodeAt(this.read + 2));
  this.read += 3;
  return rval;
};

/**
 * Gets a uint32 from this buffer in big-endian order and advances the read
 * pointer by 4.
 *
 * @return the word.
 */
util.ByteStringBuffer.prototype.getInt32 = function() {
  var rval = (
    this.data.charCodeAt(this.read) << 24 ^
    this.data.charCodeAt(this.read + 1) << 16 ^
    this.data.charCodeAt(this.read + 2) << 8 ^
    this.data.charCodeAt(this.read + 3));
  this.read += 4;
  return rval;
};

/**
 * Gets a uint16 from this buffer in little-endian order and advances the read
 * pointer by 2.
 *
 * @return the uint16.
 */
util.ByteStringBuffer.prototype.getInt16Le = function() {
  var rval = (
    this.data.charCodeAt(this.read) ^
    this.data.charCodeAt(this.read + 1) << 8);
  this.read += 2;
  return rval;
};

/**
 * Gets a uint24 from this buffer in little-endian order and advances the read
 * pointer by 3.
 *
 * @return the uint24.
 */
util.ByteStringBuffer.prototype.getInt24Le = function() {
  var rval = (
    this.data.charCodeAt(this.read) ^
    this.data.charCodeAt(this.read + 1) << 8 ^
    this.data.charCodeAt(this.read + 2) << 16);
  this.read += 3;
  return rval;
};

/**
 * Gets a uint32 from this buffer in little-endian order and advances the read
 * pointer by 4.
 *
 * @return the word.
 */
util.ByteStringBuffer.prototype.getInt32Le = function() {
  var rval = (
    this.data.charCodeAt(this.read) ^
    this.data.charCodeAt(this.read + 1) << 8 ^
    this.data.charCodeAt(this.read + 2) << 16 ^
    this.data.charCodeAt(this.read + 3) << 24);
  this.read += 4;
  return rval;
};

/**
 * Gets an n-bit integer from this buffer in big-endian order and advances the
 * read pointer by n/8.
 *
 * @param n the number of bits in the integer.
 *
 * @return the integer.
 */
util.ByteStringBuffer.prototype.getInt = function(n) {
  var rval = 0;
  do {
    rval = (rval << 8) + this.data.charCodeAt(this.read++);
    n -= 8;
  } while(n > 0);
  return rval;
};

/**
 * Gets a signed n-bit integer from this buffer in big-endian order, using
 * two's complement, and advances the read pointer by n/8.
 *
 * @param n the number of bits in the integer.
 *
 * @return the integer.
 */
util.ByteStringBuffer.prototype.getSignedInt = function(n) {
  var x = this.getInt(n);
  var max = 2 << (n - 2);
  if(x >= max) {
    x -= max << 1;
  }
  return x;
};

/**
 * Reads bytes out into a UTF-8 string and clears them from the buffer.
 *
 * @param count the number of bytes to read, undefined or null for all.
 *
 * @return a UTF-8 string of bytes.
 */
util.ByteStringBuffer.prototype.getBytes = function(count) {
  var rval;
  if(count) {
    // read count bytes
    count = Math.min(this.length(), count);
    rval = this.data.slice(this.read, this.read + count);
    this.read += count;
  } else if(count === 0) {
    rval = '';
  } else {
    // read all bytes, optimize to only copy when needed
    rval = (this.read === 0) ? this.data : this.data.slice(this.read);
    this.clear();
  }
  return rval;
};

/**
 * Gets a UTF-8 encoded string of the bytes from this buffer without modifying
 * the read pointer.
 *
 * @param count the number of bytes to get, omit to get all.
 *
 * @return a string full of UTF-8 encoded characters.
 */
util.ByteStringBuffer.prototype.bytes = function(count) {
  return (typeof(count) === 'undefined' ?
    this.data.slice(this.read) :
    this.data.slice(this.read, this.read + count));
};

/**
 * Gets a byte at the given index without modifying the read pointer.
 *
 * @param i the byte index.
 *
 * @return the byte.
 */
util.ByteStringBuffer.prototype.at = function(i) {
  return this.data.charCodeAt(this.read + i);
};

/**
 * Puts a byte at the given index without modifying the read pointer.
 *
 * @param i the byte index.
 * @param b the byte to put.
 *
 * @return this buffer.
 */
util.ByteStringBuffer.prototype.setAt = function(i, b) {
  this.data = this.data.substr(0, this.read + i) +
    String.fromCharCode(b) +
    this.data.substr(this.read + i + 1);
  return this;
};

/**
 * Gets the last byte without modifying the read pointer.
 *
 * @return the last byte.
 */
util.ByteStringBuffer.prototype.last = function() {
  return this.data.charCodeAt(this.data.length - 1);
};

/**
 * Creates a copy of this buffer.
 *
 * @return the copy.
 */
util.ByteStringBuffer.prototype.copy = function() {
  var c = util.createBuffer(this.data);
  c.read = this.read;
  return c;
};

/**
 * Compacts this buffer.
 *
 * @return this buffer.
 */
util.ByteStringBuffer.prototype.compact = function() {
  if(this.read > 0) {
    this.data = this.data.slice(this.read);
    this.read = 0;
  }
  return this;
};

/**
 * Clears this buffer.
 *
 * @return this buffer.
 */
util.ByteStringBuffer.prototype.clear = function() {
  this.data = '';
  this.read = 0;
  return this;
};

/**
 * Shortens this buffer by triming bytes off of the end of this buffer.
 *
 * @param count the number of bytes to trim off.
 *
 * @return this buffer.
 */
util.ByteStringBuffer.prototype.truncate = function(count) {
  var len = Math.max(0, this.length() - count);
  this.data = this.data.substr(this.read, len);
  this.read = 0;
  return this;
};

/**
 * Converts this buffer to a hexadecimal string.
 *
 * @return a hexadecimal string.
 */
util.ByteStringBuffer.prototype.toHex = function() {
  var rval = '';
  for(var i = this.read; i < this.data.length; ++i) {
    var b = this.data.charCodeAt(i);
    if(b < 16) {
      rval += '0';
    }
    rval += b.toString(16);
  }
  return rval;
};

/**
 * Converts this buffer to a UTF-16 string (standard JavaScript string).
 *
 * @return a UTF-16 string.
 */
util.ByteStringBuffer.prototype.toString = function() {
  return util.decodeUtf8(this.bytes());
};

/** End Buffer w/BinaryString backing */


/** Buffer w/UInt8Array backing */

/**
 * FIXME: Experimental. Do not use yet.
 *
 * Constructor for an ArrayBuffer-backed byte buffer.
 *
 * The buffer may be constructed from a string, an ArrayBuffer, DataView, or a
 * TypedArray.
 *
 * If a string is given, its encoding should be provided as an option,
 * otherwise it will default to 'binary'. A 'binary' string is encoded such
 * that each character is one byte in length and size.
 *
 * If an ArrayBuffer, DataView, or TypedArray is given, it will be used
 * *directly* without any copying. Note that, if a write to the buffer requires
 * more space, the buffer will allocate a new backing ArrayBuffer to
 * accommodate. The starting read and write offsets for the buffer may be
 * given as options.
 *
 * @param [b] the initial bytes for this buffer.
 * @param options the options to use:
 *          [readOffset] the starting read offset to use (default: 0).
 *          [writeOffset] the starting write offset to use (default: the
 *            length of the first parameter).
 *          [growSize] the minimum amount, in bytes, to grow the buffer by to
 *            accommodate writes (default: 1024).
 *          [encoding] the encoding ('binary', 'utf8', 'utf16', 'hex') for the
 *            first parameter, if it is a string (default: 'binary').
 */
function DataBuffer(b, options) {
  // default options
  options = options || {};

  // pointers for read from/write to buffer
  this.read = options.readOffset || 0;
  this.growSize = options.growSize || 1024;

  var isArrayBuffer = util.isArrayBuffer(b);
  var isArrayBufferView = util.isArrayBufferView(b);
  if(isArrayBuffer || isArrayBufferView) {
    // use ArrayBuffer directly
    if(isArrayBuffer) {
      this.data = new DataView(b);
    } else {
      // TODO: adjust read/write offset based on the type of view
      // or specify that this must be done in the options ... that the
      // offsets are byte-based
      this.data = new DataView(b.buffer, b.byteOffset, b.byteLength);
    }
    this.write = ('writeOffset' in options ?
      options.writeOffset : this.data.byteLength);
    return;
  }

  // initialize to empty array buffer and add any given bytes using putBytes
  this.data = new DataView(new ArrayBuffer(0));
  this.write = 0;

  if(b !== null && b !== undefined) {
    this.putBytes(b);
  }

  if('writeOffset' in options) {
    this.write = options.writeOffset;
  }
}
util.DataBuffer = DataBuffer;

/**
 * Gets the number of bytes in this buffer.
 *
 * @return the number of bytes in this buffer.
 */
util.DataBuffer.prototype.length = function() {
  return this.write - this.read;
};

/**
 * Gets whether or not this buffer is empty.
 *
 * @return true if this buffer is empty, false if not.
 */
util.DataBuffer.prototype.isEmpty = function() {
  return this.length() <= 0;
};

/**
 * Ensures this buffer has enough empty space to accommodate the given number
 * of bytes. An optional parameter may be given that indicates a minimum
 * amount to grow the buffer if necessary. If the parameter is not given,
 * the buffer will be grown by some previously-specified default amount
 * or heuristic.
 *
 * @param amount the number of bytes to accommodate.
 * @param [growSize] the minimum amount, in bytes, to grow the buffer by if
 *          necessary.
 */
util.DataBuffer.prototype.accommodate = function(amount, growSize) {
  if(this.length() >= amount) {
    return this;
  }
  growSize = Math.max(growSize || this.growSize, amount);

  // grow buffer
  var src = new Uint8Array(
    this.data.buffer, this.data.byteOffset, this.data.byteLength);
  var dst = new Uint8Array(this.length() + growSize);
  dst.set(src);
  this.data = new DataView(dst.buffer);

  return this;
};

/**
 * Puts a byte in this buffer.
 *
 * @param b the byte to put.
 *
 * @return this buffer.
 */
util.DataBuffer.prototype.putByte = function(b) {
  this.accommodate(1);
  this.data.setUint8(this.write++, b);
  return this;
};

/**
 * Puts a byte in this buffer N times.
 *
 * @param b the byte to put.
 * @param n the number of bytes of value b to put.
 *
 * @return this buffer.
 */
util.DataBuffer.prototype.fillWithByte = function(b, n) {
  this.accommodate(n);
  for(var i = 0; i < n; ++i) {
    this.data.setUint8(b);
  }
  return this;
};

/**
 * Puts bytes in this buffer. The bytes may be given as a string, an
 * ArrayBuffer, a DataView, or a TypedArray.
 *
 * @param bytes the bytes to put.
 * @param [encoding] the encoding for the first parameter ('binary', 'utf8',
 *          'utf16', 'hex'), if it is a string (default: 'binary').
 *
 * @return this buffer.
 */
util.DataBuffer.prototype.putBytes = function(bytes, encoding) {
  if(util.isArrayBufferView(bytes)) {
    var src = new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);
    var len = src.byteLength - src.byteOffset;
    this.accommodate(len);
    var dst = new Uint8Array(this.data.buffer, this.write);
    dst.set(src);
    this.write += len;
    return this;
  }

  if(util.isArrayBuffer(bytes)) {
    var src = new Uint8Array(bytes);
    this.accommodate(src.byteLength);
    var dst = new Uint8Array(this.data.buffer);
    dst.set(src, this.write);
    this.write += src.byteLength;
    return this;
  }

  // bytes is a util.DataBuffer or equivalent
  if(bytes instanceof util.DataBuffer ||
    (typeof bytes === 'object' &&
    typeof bytes.read === 'number' && typeof bytes.write === 'number' &&
    util.isArrayBufferView(bytes.data))) {
    var src = new Uint8Array(bytes.data.byteLength, bytes.read, bytes.length());
    this.accommodate(src.byteLength);
    var dst = new Uint8Array(bytes.data.byteLength, this.write);
    dst.set(src);
    this.write += src.byteLength;
    return this;
  }

  if(bytes instanceof util.ByteStringBuffer) {
    // copy binary string and process as the same as a string parameter below
    bytes = bytes.data;
    encoding = 'binary';
  }

  // string conversion
  encoding = encoding || 'binary';
  if(typeof bytes === 'string') {
    var view;

    // decode from string
    if(encoding === 'hex') {
      this.accommodate(Math.ceil(bytes.length / 2));
      view = new Uint8Array(this.data.buffer, this.write);
      this.write += util.binary.hex.decode(bytes, view, this.write);
      return this;
    }
    if(encoding === 'base64') {
      this.accommodate(Math.ceil(bytes.length / 4) * 3);
      view = new Uint8Array(this.data.buffer, this.write);
      this.write += util.binary.base64.decode(bytes, view, this.write);
      return this;
    }

    // encode text as UTF-8 bytes
    if(encoding === 'utf8') {
      // encode as UTF-8 then decode string as raw binary
      bytes = util.encodeUtf8(bytes);
      encoding = 'binary';
    }

    // decode string as raw binary
    if(encoding === 'binary' || encoding === 'raw') {
      // one byte per character
      this.accommodate(bytes.length);
      view = new Uint8Array(this.data.buffer, this.write);
      this.write += util.binary.raw.decode(view);
      return this;
    }

    // encode text as UTF-16 bytes
    if(encoding === 'utf16') {
      // two bytes per character
      this.accommodate(bytes.length * 2);
      view = new Uint16Array(this.data.buffer, this.write);
      this.write += util.text.utf16.encode(view);
      return this;
    }

    throw new Error('Invalid encoding: ' + encoding);
  }

  throw Error('Invalid parameter: ' + bytes);
};

/**
 * Puts the given buffer into this buffer.
 *
 * @param buffer the buffer to put into this one.
 *
 * @return this buffer.
 */
util.DataBuffer.prototype.putBuffer = function(buffer) {
  this.putBytes(buffer);
  buffer.clear();
  return this;
};

/**
 * Puts a string into this buffer.
 *
 * @param str the string to put.
 * @param [encoding] the encoding for the string (default: 'utf16').
 *
 * @return this buffer.
 */
util.DataBuffer.prototype.putString = function(str) {
  return this.putBytes(str, 'utf16');
};

/**
 * Puts a 16-bit integer in this buffer in big-endian order.
 *
 * @param i the 16-bit integer.
 *
 * @return this buffer.
 */
util.DataBuffer.prototype.putInt16 = function(i) {
  this.accommodate(2);
  this.data.setInt16(this.write, i);
  this.write += 2;
  return this;
};

/**
 * Puts a 24-bit integer in this buffer in big-endian order.
 *
 * @param i the 24-bit integer.
 *
 * @return this buffer.
 */
util.DataBuffer.prototype.putInt24 = function(i) {
  this.accommodate(3);
  this.data.setInt16(this.write, i >> 8 & 0xFFFF);
  this.data.setInt8(this.write, i >> 16 & 0xFF);
  this.write += 3;
  return this;
};

/**
 * Puts a 32-bit integer in this buffer in big-endian order.
 *
 * @param i the 32-bit integer.
 *
 * @return this buffer.
 */
util.DataBuffer.prototype.putInt32 = function(i) {
  this.accommodate(4);
  this.data.setInt32(this.write, i);
  this.write += 4;
  return this;
};

/**
 * Puts a 16-bit integer in this buffer in little-endian order.
 *
 * @param i the 16-bit integer.
 *
 * @return this buffer.
 */
util.DataBuffer.prototype.putInt16Le = function(i) {
  this.accommodate(2);
  this.data.setInt16(this.write, i, true);
  this.write += 2;
  return this;
};

/**
 * Puts a 24-bit integer in this buffer in little-endian order.
 *
 * @param i the 24-bit integer.
 *
 * @return this buffer.
 */
util.DataBuffer.prototype.putInt24Le = function(i) {
  this.accommodate(3);
  this.data.setInt8(this.write, i >> 16 & 0xFF);
  this.data.setInt16(this.write, i >> 8 & 0xFFFF, true);
  this.write += 3;
  return this;
};

/**
 * Puts a 32-bit integer in this buffer in little-endian order.
 *
 * @param i the 32-bit integer.
 *
 * @return this buffer.
 */
util.DataBuffer.prototype.putInt32Le = function(i) {
  this.accommodate(4);
  this.data.setInt32(this.write, i, true);
  this.write += 4;
  return this;
};

/**
 * Puts an n-bit integer in this buffer in big-endian order.
 *
 * @param i the n-bit integer.
 * @param n the number of bits in the integer.
 *
 * @return this buffer.
 */
util.DataBuffer.prototype.putInt = function(i, n) {
  this.accommodate(n / 8);
  do {
    n -= 8;
    this.data.setInt8(this.write++, (i >> n) & 0xFF);
  } while(n > 0);
  return this;
};

/**
 * Puts a signed n-bit integer in this buffer in big-endian order. Two's
 * complement representation is used.
 *
 * @param i the n-bit integer.
 * @param n the number of bits in the integer.
 *
 * @return this buffer.
 */
util.DataBuffer.prototype.putSignedInt = function(i, n) {
  this.accommodate(n / 8);
  if(i < 0) {
    i += 2 << (n - 1);
  }
  return this.putInt(i, n);
};

/**
 * Gets a byte from this buffer and advances the read pointer by 1.
 *
 * @return the byte.
 */
util.DataBuffer.prototype.getByte = function() {
  return this.data.getInt8(this.read++);
};

/**
 * Gets a uint16 from this buffer in big-endian order and advances the read
 * pointer by 2.
 *
 * @return the uint16.
 */
util.DataBuffer.prototype.getInt16 = function() {
  var rval = this.data.getInt16(this.read);
  this.read += 2;
  return rval;
};

/**
 * Gets a uint24 from this buffer in big-endian order and advances the read
 * pointer by 3.
 *
 * @return the uint24.
 */
util.DataBuffer.prototype.getInt24 = function() {
  var rval = (
    this.data.getInt16(this.read) << 8 ^
    this.data.getInt8(this.read + 2));
  this.read += 3;
  return rval;
};

/**
 * Gets a uint32 from this buffer in big-endian order and advances the read
 * pointer by 4.
 *
 * @return the word.
 */
util.DataBuffer.prototype.getInt32 = function() {
  var rval = this.data.getInt32(this.read);
  this.read += 4;
  return rval;
};

/**
 * Gets a uint16 from this buffer in little-endian order and advances the read
 * pointer by 2.
 *
 * @return the uint16.
 */
util.DataBuffer.prototype.getInt16Le = function() {
  var rval = this.data.getInt16(this.read, true);
  this.read += 2;
  return rval;
};

/**
 * Gets a uint24 from this buffer in little-endian order and advances the read
 * pointer by 3.
 *
 * @return the uint24.
 */
util.DataBuffer.prototype.getInt24Le = function() {
  var rval = (
    this.data.getInt8(this.read) ^
    this.data.getInt16(this.read + 1, true) << 8);
  this.read += 3;
  return rval;
};

/**
 * Gets a uint32 from this buffer in little-endian order and advances the read
 * pointer by 4.
 *
 * @return the word.
 */
util.DataBuffer.prototype.getInt32Le = function() {
  var rval = this.data.getInt32(this.read, true);
  this.read += 4;
  return rval;
};

/**
 * Gets an n-bit integer from this buffer in big-endian order and advances the
 * read pointer by n/8.
 *
 * @param n the number of bits in the integer.
 *
 * @return the integer.
 */
util.DataBuffer.prototype.getInt = function(n) {
  var rval = 0;
  do {
    rval = (rval << 8) + this.data.getInt8(this.read++);
    n -= 8;
  } while(n > 0);
  return rval;
};

/**
 * Gets a signed n-bit integer from this buffer in big-endian order, using
 * two's complement, and advances the read pointer by n/8.
 *
 * @param n the number of bits in the integer.
 *
 * @return the integer.
 */
util.DataBuffer.prototype.getSignedInt = function(n) {
  var x = this.getInt(n);
  var max = 2 << (n - 2);
  if(x >= max) {
    x -= max << 1;
  }
  return x;
};

/**
 * Reads bytes out into a UTF-8 string and clears them from the buffer.
 *
 * @param count the number of bytes to read, undefined or null for all.
 *
 * @return a UTF-8 string of bytes.
 */
util.DataBuffer.prototype.getBytes = function(count) {
  // TODO: deprecate this method, it is poorly named and
  // this.toString('binary') replaces it
  // add a toTypedArray()/toArrayBuffer() function
  var rval;
  if(count) {
    // read count bytes
    count = Math.min(this.length(), count);
    rval = this.data.slice(this.read, this.read + count);
    this.read += count;
  } else if(count === 0) {
    rval = '';
  } else {
    // read all bytes, optimize to only copy when needed
    rval = (this.read === 0) ? this.data : this.data.slice(this.read);
    this.clear();
  }
  return rval;
};

/**
 * Gets a UTF-8 encoded string of the bytes from this buffer without modifying
 * the read pointer.
 *
 * @param count the number of bytes to get, omit to get all.
 *
 * @return a string full of UTF-8 encoded characters.
 */
util.DataBuffer.prototype.bytes = function(count) {
  // TODO: deprecate this method, it is poorly named, add "getString()"
  return (typeof(count) === 'undefined' ?
    this.data.slice(this.read) :
    this.data.slice(this.read, this.read + count));
};

/**
 * Gets a byte at the given index without modifying the read pointer.
 *
 * @param i the byte index.
 *
 * @return the byte.
 */
util.DataBuffer.prototype.at = function(i) {
  return this.data.getUint8(this.read + i);
};

/**
 * Puts a byte at the given index without modifying the read pointer.
 *
 * @param i the byte index.
 * @param b the byte to put.
 *
 * @return this buffer.
 */
util.DataBuffer.prototype.setAt = function(i, b) {
  this.data.setUint8(i, b);
  return this;
};

/**
 * Gets the last byte without modifying the read pointer.
 *
 * @return the last byte.
 */
util.DataBuffer.prototype.last = function() {
  return this.data.getUint8(this.write - 1);
};

/**
 * Creates a copy of this buffer.
 *
 * @return the copy.
 */
util.DataBuffer.prototype.copy = function() {
  return new util.DataBuffer(this);
};

/**
 * Compacts this buffer.
 *
 * @return this buffer.
 */
util.DataBuffer.prototype.compact = function() {
  if(this.read > 0) {
    var src = new Uint8Array(this.data.buffer, this.read);
    var dst = new Uint8Array(src.byteLength);
    dst.set(src);
    this.data = new DataView(dst);
    this.write -= this.read;
    this.read = 0;
  }
  return this;
};

/**
 * Clears this buffer.
 *
 * @return this buffer.
 */
util.DataBuffer.prototype.clear = function() {
  this.data = new DataView(new ArrayBuffer(0));
  this.read = this.write = 0;
  return this;
};

/**
 * Shortens this buffer by triming bytes off of the end of this buffer.
 *
 * @param count the number of bytes to trim off.
 *
 * @return this buffer.
 */
util.DataBuffer.prototype.truncate = function(count) {
  this.write = Math.max(0, this.length() - count);
  this.read = Math.min(this.read, this.write);
  return this;
};

/**
 * Converts this buffer to a hexadecimal string.
 *
 * @return a hexadecimal string.
 */
util.DataBuffer.prototype.toHex = function() {
  var rval = '';
  for(var i = this.read; i < this.data.byteLength; ++i) {
    var b = this.data.getUint8(i);
    if(b < 16) {
      rval += '0';
    }
    rval += b.toString(16);
  }
  return rval;
};

/**
 * Converts this buffer to a string, using the given encoding. If no
 * encoding is given, 'utf8' (UTF-8) is used.
 *
 * @param [encoding] the encoding to use: 'binary', 'utf8', 'utf16', 'hex',
 *          'base64' (default: 'utf8').
 *
 * @return a string representation of the bytes in this buffer.
 */
util.DataBuffer.prototype.toString = function(encoding) {
  var view = new Uint8Array(this.data, this.read, this.length());
  encoding = encoding || 'utf8';

  // encode to string
  if(encoding === 'binary' || encoding === 'raw') {
    return util.binary.raw.encode(view);
  }
  if(encoding === 'hex') {
    return util.binary.hex.encode(view);
  }
  if(encoding === 'base64') {
    return util.binary.base64.encode(view);
  }

  // decode to text
  if(encoding === 'utf8') {
    return util.text.utf8.decode(view);
  }
  if(encoding === 'utf16') {
    return util.text.utf16.decode(view);
  }

  throw new Error('Invalid encoding: ' + encoding);
};

/** End Buffer w/UInt8Array backing */


/**
 * Creates a buffer that stores bytes. A value may be given to put into the
 * buffer that is either a string of bytes or a UTF-16 string that will
 * be encoded using UTF-8 (to do the latter, specify 'utf8' as the encoding).
 *
 * @param [input] the bytes to wrap (as a string) or a UTF-16 string to encode
 *          as UTF-8.
 * @param [encoding] (default: 'raw', other: 'utf8').
 */
util.createBuffer = function(input, encoding) {
  // TODO: deprecate, use new ByteBuffer() instead
  encoding = encoding || 'raw';
  if(input !== undefined && encoding === 'utf8') {
    input = util.encodeUtf8(input);
  }
  return new util.ByteBuffer(input);
};

/**
 * Fills a string with a particular value. If you want the string to be a byte
 * string, pass in String.fromCharCode(theByte).
 *
 * @param c the character to fill the string with, use String.fromCharCode
 *          to fill the string with a byte value.
 * @param n the number of characters of value c to fill with.
 *
 * @return the filled string.
 */
util.fillString = function(c, n) {
  var s = '';
  while(n > 0) {
    if(n & 1) {
      s += c;
    }
    n >>>= 1;
    if(n > 0) {
      c += c;
    }
  }
  return s;
};

/**
 * Performs a per byte XOR between two byte strings and returns the result as a
 * string of bytes.
 *
 * @param s1 first string of bytes.
 * @param s2 second string of bytes.
 * @param n the number of bytes to XOR.
 *
 * @return the XOR'd result.
 */
util.xorBytes = function(s1, s2, n) {
  var s3 = '';
  var b = '';
  var t = '';
  var i = 0;
  var c = 0;
  for(; n > 0; --n, ++i) {
    b = s1.charCodeAt(i) ^ s2.charCodeAt(i);
    if(c >= 10) {
      s3 += t;
      t = '';
      c = 0;
    }
    t += String.fromCharCode(b);
    ++c;
  }
  s3 += t;
  return s3;
};

/**
 * Converts a hex string into a 'binary' encoded string of bytes.
 *
 * @param hex the hexadecimal string to convert.
 *
 * @return the binary-encoded string of bytes.
 */
util.hexToBytes = function(hex) {
  // TODO: deprecate: "Deprecated. Use util.binary.hex.decode instead."
  var rval = '';
  var i = 0;
  if(hex.length & 1 == 1) {
    // odd number of characters, convert first character alone
    i = 1;
    rval += String.fromCharCode(parseInt(hex[0], 16));
  }
  // convert 2 characters (1 byte) at a time
  for(; i < hex.length; i += 2) {
    rval += String.fromCharCode(parseInt(hex.substr(i, 2), 16));
  }
  return rval;
};

/**
 * Converts a 'binary' encoded string of bytes to hex.
 *
 * @param bytes the byte string to convert.
 *
 * @return the string of hexadecimal characters.
 */
util.bytesToHex = function(bytes) {
  // TODO: deprecate: "Deprecated. Use util.binary.hex.encode instead."
  return util.createBuffer(bytes).toHex();
};

/**
 * Converts an 32-bit integer to 4-big-endian byte string.
 *
 * @param i the integer.
 *
 * @return the byte string.
 */
util.int32ToBytes = function(i) {
  return (
    String.fromCharCode(i >> 24 & 0xFF) +
    String.fromCharCode(i >> 16 & 0xFF) +
    String.fromCharCode(i >> 8 & 0xFF) +
    String.fromCharCode(i & 0xFF));
};

// base64 characters, reverse mapping
var _base64 =
  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
var _base64Idx = [
/*43 -43 = 0*/
/*'+',  1,  2,  3,'/' */
   62, -1, -1, -1, 63,

/*'0','1','2','3','4','5','6','7','8','9' */
   52, 53, 54, 55, 56, 57, 58, 59, 60, 61,

/*15, 16, 17,'=', 19, 20, 21 */
  -1, -1, -1, 64, -1, -1, -1,

/*65 - 43 = 22*/
/*'A','B','C','D','E','F','G','H','I','J','K','L','M', */
   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12,

/*'N','O','P','Q','R','S','T','U','V','W','X','Y','Z' */
   13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,

/*91 - 43 = 48 */
/*48, 49, 50, 51, 52, 53 */
  -1, -1, -1, -1, -1, -1,

/*97 - 43 = 54*/
/*'a','b','c','d','e','f','g','h','i','j','k','l','m' */
   26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,

/*'n','o','p','q','r','s','t','u','v','w','x','y','z' */
   39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51
];

/**
 * Base64 encodes a 'binary' encoded string of bytes.
 *
 * @param input the binary encoded string of bytes to base64-encode.
 * @param maxline the maximum number of encoded characters per line to use,
 *          defaults to none.
 *
 * @return the base64-encoded output.
 */
util.encode64 = function(input, maxline) {
  // TODO: deprecate: "Deprecated. Use util.binary.base64.encode instead."
  var line = '';
  var output = '';
  var chr1, chr2, chr3;
  var i = 0;
  while(i < input.length) {
    chr1 = input.charCodeAt(i++);
    chr2 = input.charCodeAt(i++);
    chr3 = input.charCodeAt(i++);

    // encode 4 character group
    line += _base64.charAt(chr1 >> 2);
    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));
    if(isNaN(chr2)) {
      line += '==';
    } else {
      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));
      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);
    }

    if(maxline && line.length > maxline) {
      output += line.substr(0, maxline) + '\r\n';
      line = line.substr(maxline);
    }
  }
  output += line;
  return output;
};

/**
 * Base64 decodes a string into a 'binary' encoded string of bytes.
 *
 * @param input the base64-encoded input.
 *
 * @return the binary encoded string.
 */
util.decode64 = function(input) {
  // TODO: deprecate: "Deprecated. Use util.binary.base64.decode instead."

  // remove all non-base64 characters
  input = input.replace(/[^A-Za-z0-9\+\/\=]/g, '');

  var output = '';
  var enc1, enc2, enc3, enc4;
  var i = 0;

  while(i < input.length) {
    enc1 = _base64Idx[input.charCodeAt(i++) - 43];
    enc2 = _base64Idx[input.charCodeAt(i++) - 43];
    enc3 = _base64Idx[input.charCodeAt(i++) - 43];
    enc4 = _base64Idx[input.charCodeAt(i++) - 43];

    output += String.fromCharCode((enc1 << 2) | (enc2 >> 4));
    if(enc3 !== 64) {
      // decoded at least 2 bytes
      output += String.fromCharCode(((enc2 & 15) << 4) | (enc3 >> 2));
      if(enc4 !== 64) {
        // decoded 3 bytes
        output += String.fromCharCode(((enc3 & 3) << 6) | enc4);
      }
    }
  }

  return output;
};

/**
 * UTF-8 encodes the given UTF-16 encoded string (a standard JavaScript
 * string). Non-ASCII characters will be encoded as multiple bytes according
 * to UTF-8.
 *
 * @param str the string to encode.
 *
 * @return the UTF-8 encoded string.
 */
util.encodeUtf8 = function(str) {
  return unescape(encodeURIComponent(str));
};

/**
 * Decodes a UTF-8 encoded string into a UTF-16 string.
 *
 * @param str the string to decode.
 *
 * @return the UTF-16 encoded string (standard JavaScript string).
 */
util.decodeUtf8 = function(str) {
  return decodeURIComponent(escape(str));
};

// binary encoding/decoding tools
// FIXME: Experimental. Do not use yet.
util.binary = {
  raw: {},
  hex: {},
  base64: {}
};

/**
 * Encodes a Uint8Array as a binary-encoded string. This encoding uses
 * a value between 0 and 255 for each character.
 *
 * @param bytes the Uint8Array to encode.
 *
 * @return the binary-encoded string.
 */
util.binary.raw.encode = function(bytes) {
  return String.fromCharCode.apply(null, bytes);
};

/**
 * Decodes a binary-encoded string to a Uint8Array. This encoding uses
 * a value between 0 and 255 for each character.
 *
 * @param str the binary-encoded string to decode.
 * @param [output] an optional Uint8Array to write the output to; if it
 *          is too small, an exception will be thrown.
 * @param [offset] the start offset for writing to the output (default: 0).
 *
 * @return the Uint8Array or the number of bytes written if output was given.
 */
util.binary.raw.decode = function(str, output, offset) {
  var out = output;
  if(!out) {
    out = new Uint8Array(str.length);
  }
  offset = offset || 0;
  var j = offset;
  for(var i = 0; i < str.length; ++i) {
    out[j++] = str.charCodeAt(i);
  }
  return output ? (j - offset) : out;
};

/**
 * Encodes a 'binary' string, ArrayBuffer, DataView, TypedArray, or
 * ByteBuffer as a string of hexadecimal characters.
 *
 * @param bytes the bytes to convert.
 *
 * @return the string of hexadecimal characters.
 */
util.binary.hex.encode = util.bytesToHex;

/**
 * Decodes a hex-encoded string to a Uint8Array.
 *
 * @param hex the hexadecimal string to convert.
 * @param [output] an optional Uint8Array to write the output to; if it
 *          is too small, an exception will be thrown.
 * @param [offset] the start offset for writing to the output (default: 0).
 *
 * @return the Uint8Array or the number of bytes written if output was given.
 */
util.binary.hex.decode = function(hex, output, offset) {
  var out = output;
  if(!out) {
    out = new Uint8Array(Math.ceil(hex.length / 2));
  }
  offset = offset || 0;
  var i = 0, j = offset;
  if(hex.length & 1) {
    // odd number of characters, convert first character alone
    i = 1;
    out[j++] = parseInt(hex[0], 16);
  }
  // convert 2 characters (1 byte) at a time
  for(; i < hex.length; i += 2) {
    out[j++] = parseInt(hex.substr(i, 2), 16);
  }
  return output ? (j - offset) : out;
};

/**
 * Base64-encodes a Uint8Array.
 *
 * @param input the Uint8Array to encode.
 * @param maxline the maximum number of encoded characters per line to use,
 *          defaults to none.
 *
 * @return the base64-encoded output string.
 */
util.binary.base64.encode = function(input, maxline) {
  var line = '';
  var output = '';
  var chr1, chr2, chr3;
  var i = 0;
  while(i < input.byteLength) {
    chr1 = input[i++];
    chr2 = input[i++];
    chr3 = input[i++];

    // encode 4 character group
    line += _base64.charAt(chr1 >> 2);
    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));
    if(isNaN(chr2)) {
      line += '==';
    } else {
      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));
      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);
    }

    if(maxline && line.length > maxline) {
      output += line.substr(0, maxline) + '\r\n';
      line = line.substr(maxline);
    }
  }
  output += line;
  return output;
};

/**
 * Decodes a base64-encoded string to a Uint8Array.
 *
 * @param input the base64-encoded input string.
 * @param [output] an optional Uint8Array to write the output to; if it
 *          is too small, an exception will be thrown.
 * @param [offset] the start offset for writing to the output (default: 0).
 *
 * @return the Uint8Array or the number of bytes written if output was given.
 */
util.binary.base64.decode = function(input, output, offset) {
  var out = output;
  if(!out) {
    out = new Uint8Array(Math.ceil(input.length / 4) * 3);
  }

  // remove all non-base64 characters
  input = input.replace(/[^A-Za-z0-9\+\/\=]/g, '');

  offset = offset || 0;
  var enc1, enc2, enc3, enc4;
  var i = 0, j = offset;

  while(i < input.length) {
    enc1 = _base64Idx[input.charCodeAt(i++) - 43];
    enc2 = _base64Idx[input.charCodeAt(i++) - 43];
    enc3 = _base64Idx[input.charCodeAt(i++) - 43];
    enc4 = _base64Idx[input.charCodeAt(i++) - 43];

    out[j++] = (enc1 << 2) | (enc2 >> 4);
    if(enc3 !== 64) {
      // decoded at least 2 bytes
      out[j++] = ((enc2 & 15) << 4) | (enc3 >> 2);
      if(enc4 !== 64) {
        // decoded 3 bytes
        out[j++] = ((enc3 & 3) << 6) | enc4;
      }
    }
  }

  // make sure result is the exact decoded length
  return output ?
         (j - offset) :
         out.subarray(0, j);
};

// text encoding/decoding tools
// FIXME: Experimental. Do not use yet.
util.text = {
  utf8: {},
  utf16: {}
};

/**
 * Encodes the given string as UTF-8 in a Uint8Array.
 *
 * @param str the string to encode.
 * @param [output] an optional Uint8Array to write the output to; if it
 *          is too small, an exception will be thrown.
 * @param [offset] the start offset for writing to the output (default: 0).
 *
 * @return the Uint8Array or the number of bytes written if output was given.
 */
util.text.utf8.encode = function(str, output, offset) {
  str = util.encodeUtf8(str);
  var out = output;
  if(!out) {
    out = new Uint8Array(str.length);
  }
  offset = offset || 0;
  var j = offset;
  for(var i = 0; i < str.length; ++i) {
    out[j++] = str.charCodeAt(i);
  }
  return output ? (j - offset) : out;
};

/**
 * Decodes the UTF-8 contents from a Uint8Array.
 *
 * @param bytes the Uint8Array to decode.
 *
 * @return the resulting string.
 */
util.text.utf8.decode = function(bytes) {
  return util.decodeUtf8(String.fromCharCode.apply(null, bytes));
};

/**
 * Encodes the given string as UTF-16 in a Uint8Array.
 *
 * @param str the string to encode.
 * @param [output] an optional Uint8Array to write the output to; if it
 *          is too small, an exception will be thrown.
 * @param [offset] the start offset for writing to the output (default: 0).
 *
 * @return the Uint8Array or the number of bytes written if output was given.
 */
util.text.utf16.encode = function(str, output, offset) {
  var out = output;
  if(!out) {
    out = new Uint8Array(str.length);
  }
  var view = new Uint16Array(out);
  offset = offset || 0;
  var j = offset;
  var k = offset;
  for(var i = 0; i < str.length; ++i) {
    view[k++] = str.charCodeAt(i);
    j += 2;
  }
  return output ? (j - offset) : out;
};

/**
 * Decodes the UTF-16 contents from a Uint8Array.
 *
 * @param bytes the Uint8Array to decode.
 *
 * @return the resulting string.
 */
util.text.utf16.decode = function(bytes) {
  return String.fromCharCode.apply(null, new Uint16Array(bytes));
};

/**
 * Deflates the given data using a flash interface.
 *
 * @param api the flash interface.
 * @param bytes the data.
 * @param raw true to return only raw deflate data, false to include zlib
 *          header and trailer.
 *
 * @return the deflated data as a string.
 */
util.deflate = function(api, bytes, raw) {
  bytes = util.decode64(api.deflate(util.encode64(bytes)).rval);

  // strip zlib header and trailer if necessary
  if(raw) {
    // zlib header is 2 bytes (CMF,FLG) where FLG indicates that
    // there is a 4-byte DICT (alder-32) block before the data if
    // its 5th bit is set
    var start = 2;
    var flg = bytes.charCodeAt(1);
    if(flg & 0x20) {
      start = 6;
    }
    // zlib trailer is 4 bytes of adler-32
    bytes = bytes.substring(start, bytes.length - 4);
  }

  return bytes;
};

/**
 * Inflates the given data using a flash interface.
 *
 * @param api the flash interface.
 * @param bytes the data.
 * @param raw true if the incoming data has no zlib header or trailer and is
 *          raw DEFLATE data.
 *
 * @return the inflated data as a string, null on error.
 */
util.inflate = function(api, bytes, raw) {
  // TODO: add zlib header and trailer if necessary/possible
  var rval = api.inflate(util.encode64(bytes)).rval;
  return (rval === null) ? null : util.decode64(rval);
};

/**
 * Sets a storage object.
 *
 * @param api the storage interface.
 * @param id the storage ID to use.
 * @param obj the storage object, null to remove.
 */
var _setStorageObject = function(api, id, obj) {
  if(!api) {
    throw new Error('WebStorage not available.');
  }

  var rval;
  if(obj === null) {
    rval = api.removeItem(id);
  } else {
    // json-encode and base64-encode object
    obj = util.encode64(JSON.stringify(obj));
    rval = api.setItem(id, obj);
  }

  // handle potential flash error
  if(typeof(rval) !== 'undefined' && rval.rval !== true) {
    var error = new Error(rval.error.message);
    error.id = rval.error.id;
    error.name = rval.error.name;
    throw error;
  }
};

/**
 * Gets a storage object.
 *
 * @param api the storage interface.
 * @param id the storage ID to use.
 *
 * @return the storage object entry or null if none exists.
 */
var _getStorageObject = function(api, id) {
  if(!api) {
    throw new Error('WebStorage not available.');
  }

  // get the existing entry
  var rval = api.getItem(id);

  /* Note: We check api.init because we can't do (api == localStorage)
    on IE because of "Class doesn't support Automation" exception. Only
    the flash api has an init method so this works too, but we need a
    better solution in the future. */

  // flash returns item wrapped in an object, handle special case
  if(api.init) {
    if(rval.rval === null) {
      if(rval.error) {
        var error = new Error(rval.error.message);
        error.id = rval.error.id;
        error.name = rval.error.name;
        throw error;
      }
      // no error, but also no item
      rval = null;
    } else {
      rval = rval.rval;
    }
  }

  // handle decoding
  if(rval !== null) {
    // base64-decode and json-decode data
    rval = JSON.parse(util.decode64(rval));
  }

  return rval;
};

/**
 * Stores an item in local storage.
 *
 * @param api the storage interface.
 * @param id the storage ID to use.
 * @param key the key for the item.
 * @param data the data for the item (any javascript object/primitive).
 */
var _setItem = function(api, id, key, data) {
  // get storage object
  var obj = _getStorageObject(api, id);
  if(obj === null) {
    // create a new storage object
    obj = {};
  }
  // update key
  obj[key] = data;

  // set storage object
  _setStorageObject(api, id, obj);
};

/**
 * Gets an item from local storage.
 *
 * @param api the storage interface.
 * @param id the storage ID to use.
 * @param key the key for the item.
 *
 * @return the item.
 */
var _getItem = function(api, id, key) {
  // get storage object
  var rval = _getStorageObject(api, id);
  if(rval !== null) {
    // return data at key
    rval = (key in rval) ? rval[key] : null;
  }

  return rval;
};

/**
 * Removes an item from local storage.
 *
 * @param api the storage interface.
 * @param id the storage ID to use.
 * @param key the key for the item.
 */
var _removeItem = function(api, id, key) {
  // get storage object
  var obj = _getStorageObject(api, id);
  if(obj !== null && key in obj) {
    // remove key
    delete obj[key];

    // see if entry has no keys remaining
    var empty = true;
    for(var prop in obj) {
      empty = false;
      break;
    }
    if(empty) {
      // remove entry entirely if no keys are left
      obj = null;
    }

    // set storage object
    _setStorageObject(api, id, obj);
  }
};

/**
 * Clears the local disk storage identified by the given ID.
 *
 * @param api the storage interface.
 * @param id the storage ID to use.
 */
var _clearItems = function(api, id) {
  _setStorageObject(api, id, null);
};

/**
 * Calls a storage function.
 *
 * @param func the function to call.
 * @param args the arguments for the function.
 * @param location the location argument.
 *
 * @return the return value from the function.
 */
var _callStorageFunction = function(func, args, location) {
  var rval = null;

  // default storage types
  if(typeof(location) === 'undefined') {
    location = ['web', 'flash'];
  }

  // apply storage types in order of preference
  var type;
  var done = false;
  var exception = null;
  for(var idx in location) {
    type = location[idx];
    try {
      if(type === 'flash' || type === 'both') {
        if(args[0] === null) {
          throw new Error('Flash local storage not available.');
        }
        rval = func.apply(this, args);
        done = (type === 'flash');
      }
      if(type === 'web' || type === 'both') {
        args[0] = localStorage;
        rval = func.apply(this, args);
        done = true;
      }
    } catch(ex) {
      exception = ex;
    }
    if(done) {
      break;
    }
  }

  if(!done) {
    throw exception;
  }

  return rval;
};

/**
 * Stores an item on local disk.
 *
 * The available types of local storage include 'flash', 'web', and 'both'.
 *
 * The type 'flash' refers to flash local storage (SharedObject). In order
 * to use flash local storage, the 'api' parameter must be valid. The type
 * 'web' refers to WebStorage, if supported by the browser. The type 'both'
 * refers to storing using both 'flash' and 'web', not just one or the
 * other.
 *
 * The location array should list the storage types to use in order of
 * preference:
 *
 * ['flash']: flash only storage
 * ['web']: web only storage
 * ['both']: try to store in both
 * ['flash','web']: store in flash first, but if not available, 'web'
 * ['web','flash']: store in web first, but if not available, 'flash'
 *
 * The location array defaults to: ['web', 'flash']
 *
 * @param api the flash interface, null to use only WebStorage.
 * @param id the storage ID to use.
 * @param key the key for the item.
 * @param data the data for the item (any javascript object/primitive).
 * @param location an array with the preferred types of storage to use.
 */
util.setItem = function(api, id, key, data, location) {
  _callStorageFunction(_setItem, arguments, location);
};

/**
 * Gets an item on local disk.
 *
 * Set setItem() for details on storage types.
 *
 * @param api the flash interface, null to use only WebStorage.
 * @param id the storage ID to use.
 * @param key the key for the item.
 * @param location an array with the preferred types of storage to use.
 *
 * @return the item.
 */
util.getItem = function(api, id, key, location) {
  return _callStorageFunction(_getItem, arguments, location);
};

/**
 * Removes an item on local disk.
 *
 * Set setItem() for details on storage types.
 *
 * @param api the flash interface.
 * @param id the storage ID to use.
 * @param key the key for the item.
 * @param location an array with the preferred types of storage to use.
 */
util.removeItem = function(api, id, key, location) {
  _callStorageFunction(_removeItem, arguments, location);
};

/**
 * Clears the local disk storage identified by the given ID.
 *
 * Set setItem() for details on storage types.
 *
 * @param api the flash interface if flash is available.
 * @param id the storage ID to use.
 * @param location an array with the preferred types of storage to use.
 */
util.clearItems = function(api, id, location) {
  _callStorageFunction(_clearItems, arguments, location);
};

/**
 * Parses the scheme, host, and port from an http(s) url.
 *
 * @param str the url string.
 *
 * @return the parsed url object or null if the url is invalid.
 */
util.parseUrl = function(str) {
  // FIXME: this regex looks a bit broken
  var regex = /^(https?):\/\/([^:&^\/]*):?(\d*)(.*)$/g;
  regex.lastIndex = 0;
  var m = regex.exec(str);
  var url = (m === null) ? null : {
    full: str,
    scheme: m[1],
    host: m[2],
    port: m[3],
    path: m[4]
  };
  if(url) {
    url.fullHost = url.host;
    if(url.port) {
      if(url.port !== 80 && url.scheme === 'http') {
        url.fullHost += ':' + url.port;
      } else if(url.port !== 443 && url.scheme === 'https') {
        url.fullHost += ':' + url.port;
      }
    } else if(url.scheme === 'http') {
      url.port = 80;
    } else if(url.scheme === 'https') {
      url.port = 443;
    }
    url.full = url.scheme + '://' + url.fullHost;
  }
  return url;
};

/* Storage for query variables */
var _queryVariables = null;

/**
 * Returns the window location query variables. Query is parsed on the first
 * call and the same object is returned on subsequent calls. The mapping
 * is from keys to an array of values. Parameters without values will have
 * an object key set but no value added to the value array. Values are
 * unescaped.
 *
 * ...?k1=v1&k2=v2:
 * {
 *   "k1": ["v1"],
 *   "k2": ["v2"]
 * }
 *
 * ...?k1=v1&k1=v2:
 * {
 *   "k1": ["v1", "v2"]
 * }
 *
 * ...?k1=v1&k2:
 * {
 *   "k1": ["v1"],
 *   "k2": []
 * }
 *
 * ...?k1=v1&k1:
 * {
 *   "k1": ["v1"]
 * }
 *
 * ...?k1&k1:
 * {
 *   "k1": []
 * }
 *
 * @param query the query string to parse (optional, default to cached
 *          results from parsing window location search query).
 *
 * @return object mapping keys to variables.
 */
util.getQueryVariables = function(query) {
  var parse = function(q) {
    var rval = {};
    var kvpairs = q.split('&');
    for(var i = 0; i < kvpairs.length; i++) {
      var pos = kvpairs[i].indexOf('=');
      var key;
      var val;
      if(pos > 0) {
        key = kvpairs[i].substring(0, pos);
        val = kvpairs[i].substring(pos + 1);
      } else {
        key = kvpairs[i];
        val = null;
      }
      if(!(key in rval)) {
        rval[key] = [];
      }
      // disallow overriding object prototype keys
      if(!(key in Object.prototype) && val !== null) {
        rval[key].push(unescape(val));
      }
    }
    return rval;
  };

   var rval;
   if(typeof(query) === 'undefined') {
     // set cached variables if needed
     if(_queryVariables === null) {
       if(typeof(window) !== 'undefined' && window.location && window.location.search) {
          // parse window search query
          _queryVariables = parse(window.location.search.substring(1));
       } else {
          // no query variables available
          _queryVariables = {};
       }
     }
     rval = _queryVariables;
   } else {
     // parse given query
     rval = parse(query);
   }
   return rval;
};

/**
 * Parses a fragment into a path and query. This method will take a URI
 * fragment and break it up as if it were the main URI. For example:
 *    /bar/baz?a=1&b=2
 * results in:
 *    {
 *       path: ["bar", "baz"],
 *       query: {"k1": ["v1"], "k2": ["v2"]}
 *    }
 *
 * @return object with a path array and query object.
 */
util.parseFragment = function(fragment) {
  // default to whole fragment
  var fp = fragment;
  var fq = '';
  // split into path and query if possible at the first '?'
  var pos = fragment.indexOf('?');
  if(pos > 0) {
    fp = fragment.substring(0, pos);
    fq = fragment.substring(pos + 1);
  }
  // split path based on '/' and ignore first element if empty
  var path = fp.split('/');
  if(path.length > 0 && path[0] === '') {
    path.shift();
  }
  // convert query into object
  var query = (fq === '') ? {} : util.getQueryVariables(fq);

  return {
    pathString: fp,
    queryString: fq,
    path: path,
    query: query
  };
};

/**
 * Makes a request out of a URI-like request string. This is intended to
 * be used where a fragment id (after a URI '#') is parsed as a URI with
 * path and query parts. The string should have a path beginning and
 * delimited by '/' and optional query parameters following a '?'. The
 * query should be a standard URL set of key value pairs delimited by
 * '&'. For backwards compatibility the initial '/' on the path is not
 * required. The request object has the following API, (fully described
 * in the method code):
 *    {
 *       path: <the path string part>.
 *       query: <the query string part>,
 *       getPath(i): get part or all of the split path array,
 *       getQuery(k, i): get part or all of a query key array,
 *       getQueryLast(k, _default): get last element of a query key array.
 *    }
 *
 * @return object with request parameters.
 */
util.makeRequest = function(reqString) {
  var frag = util.parseFragment(reqString);
  var req = {
    // full path string
    path: frag.pathString,
    // full query string
    query: frag.queryString,
    /**
     * Get path or element in path.
     *
     * @param i optional path index.
     *
     * @return path or part of path if i provided.
     */
    getPath: function(i) {
      return (typeof(i) === 'undefined') ? frag.path : frag.path[i];
    },
    /**
     * Get query, values for a key, or value for a key index.
     *
     * @param k optional query key.
     * @param i optional query key index.
     *
     * @return query, values for a key, or value for a key index.
     */
    getQuery: function(k, i) {
      var rval;
      if(typeof(k) === 'undefined') {
        rval = frag.query;
      } else {
        rval = frag.query[k];
        if(rval && typeof(i) !== 'undefined') {
           rval = rval[i];
        }
      }
      return rval;
    },
    getQueryLast: function(k, _default) {
      var rval;
      var vals = req.getQuery(k);
      if(vals) {
        rval = vals[vals.length - 1];
      } else {
        rval = _default;
      }
      return rval;
    }
  };
  return req;
};

/**
 * Makes a URI out of a path, an object with query parameters, and a
 * fragment. Uses jQuery.param() internally for query string creation.
 * If the path is an array, it will be joined with '/'.
 *
 * @param path string path or array of strings.
 * @param query object with query parameters. (optional)
 * @param fragment fragment string. (optional)
 *
 * @return string object with request parameters.
 */
util.makeLink = function(path, query, fragment) {
  // join path parts if needed
  path = jQuery.isArray(path) ? path.join('/') : path;

  var qstr = jQuery.param(query || {});
  fragment = fragment || '';
  return path +
    ((qstr.length > 0) ? ('?' + qstr) : '') +
    ((fragment.length > 0) ? ('#' + fragment) : '');
};

/**
 * Follows a path of keys deep into an object hierarchy and set a value.
 * If a key does not exist or it's value is not an object, create an
 * object in it's place. This can be destructive to a object tree if
 * leaf nodes are given as non-final path keys.
 * Used to avoid exceptions from missing parts of the path.
 *
 * @param object the starting object.
 * @param keys an array of string keys.
 * @param value the value to set.
 */
util.setPath = function(object, keys, value) {
  // need to start at an object
  if(typeof(object) === 'object' && object !== null) {
    var i = 0;
    var len = keys.length;
    while(i < len) {
      var next = keys[i++];
      if(i == len) {
        // last
        object[next] = value;
      } else {
        // more
        var hasNext = (next in object);
        if(!hasNext ||
          (hasNext && typeof(object[next]) !== 'object') ||
          (hasNext && object[next] === null)) {
          object[next] = {};
        }
        object = object[next];
      }
    }
  }
};

/**
 * Follows a path of keys deep into an object hierarchy and return a value.
 * If a key does not exist, create an object in it's place.
 * Used to avoid exceptions from missing parts of the path.
 *
 * @param object the starting object.
 * @param keys an array of string keys.
 * @param _default value to return if path not found.
 *
 * @return the value at the path if found, else default if given, else
 *         undefined.
 */
util.getPath = function(object, keys, _default) {
  var i = 0;
  var len = keys.length;
  var hasNext = true;
  while(hasNext && i < len &&
    typeof(object) === 'object' && object !== null) {
    var next = keys[i++];
    hasNext = next in object;
    if(hasNext) {
      object = object[next];
    }
  }
  return (hasNext ? object : _default);
};

/**
 * Follow a path of keys deep into an object hierarchy and delete the
 * last one. If a key does not exist, do nothing.
 * Used to avoid exceptions from missing parts of the path.
 *
 * @param object the starting object.
 * @param keys an array of string keys.
 */
util.deletePath = function(object, keys) {
  // need to start at an object
  if(typeof(object) === 'object' && object !== null) {
    var i = 0;
    var len = keys.length;
    while(i < len) {
      var next = keys[i++];
      if(i == len) {
        // last
        delete object[next];
      } else {
        // more
        if(!(next in object) ||
          (typeof(object[next]) !== 'object') ||
          (object[next] === null)) {
           break;
        }
        object = object[next];
      }
    }
  }
};

/**
 * Check if an object is empty.
 *
 * Taken from:
 * http://stackoverflow.com/questions/679915/how-do-i-test-for-an-empty-javascript-object-from-json/679937#679937
 *
 * @param object the object to check.
 */
util.isEmpty = function(obj) {
  for(var prop in obj) {
    if(obj.hasOwnProperty(prop)) {
      return false;
    }
  }
  return true;
};

/**
 * Format with simple printf-style interpolation.
 *
 * %%: literal '%'
 * %s,%o: convert next argument into a string.
 *
 * @param format the string to format.
 * @param ... arguments to interpolate into the format string.
 */
util.format = function(format) {
  var re = /%./g;
  // current match
  var match;
  // current part
  var part;
  // current arg index
  var argi = 0;
  // collected parts to recombine later
  var parts = [];
  // last index found
  var last = 0;
  // loop while matches remain
  while((match = re.exec(format))) {
    part = format.substring(last, re.lastIndex - 2);
    // don't add empty strings (ie, parts between %s%s)
    if(part.length > 0) {
      parts.push(part);
    }
    last = re.lastIndex;
    // switch on % code
    var code = match[0][1];
    switch(code) {
    case 's':
    case 'o':
      // check if enough arguments were given
      if(argi < arguments.length) {
        parts.push(arguments[argi++ + 1]);
      } else {
        parts.push('<?>');
      }
      break;
    // FIXME: do proper formating for numbers, etc
    //case 'f':
    //case 'd':
    case '%':
      parts.push('%');
      break;
    default:
      parts.push('<%' + code + '?>');
    }
  }
  // add trailing part of format string
  parts.push(format.substring(last));
  return parts.join('');
};

/**
 * Formats a number.
 *
 * http://snipplr.com/view/5945/javascript-numberformat--ported-from-php/
 */
util.formatNumber = function(number, decimals, dec_point, thousands_sep) {
  // http://kevin.vanzonneveld.net
  // +   original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)
  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
  // +     bugfix by: Michael White (http://crestidg.com)
  // +     bugfix by: Benjamin Lupton
  // +     bugfix by: Allan Jensen (http://www.winternet.no)
  // +    revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)
  // *     example 1: number_format(1234.5678, 2, '.', '');
  // *     returns 1: 1234.57

  var n = number, c = isNaN(decimals = Math.abs(decimals)) ? 2 : decimals;
  var d = dec_point === undefined ? ',' : dec_point;
  var t = thousands_sep === undefined ?
   '.' : thousands_sep, s = n < 0 ? '-' : '';
  var i = parseInt((n = Math.abs(+n || 0).toFixed(c)), 10) + '';
  var j = (i.length > 3) ? i.length % 3 : 0;
  return s + (j ? i.substr(0, j) + t : '') +
    i.substr(j).replace(/(\d{3})(?=\d)/g, '$1' + t) +
    (c ? d + Math.abs(n - i).toFixed(c).slice(2) : '');
};

/**
 * Formats a byte size.
 *
 * http://snipplr.com/view/5949/format-humanize-file-byte-size-presentation-in-javascript/
 */
util.formatSize = function(size) {
  if(size >= 1073741824) {
    size = util.formatNumber(size / 1073741824, 2, '.', '') + ' GiB';
  } else if(size >= 1048576) {
    size = util.formatNumber(size / 1048576, 2, '.', '') + ' MiB';
  } else if(size >= 1024) {
    size = util.formatNumber(size / 1024, 0) + ' KiB';
  } else {
    size = util.formatNumber(size, 0) + ' bytes';
  }
  return size;
};

/**
 * Converts an IPv4 or IPv6 string representation into bytes (in network order).
 *
 * @param ip the IPv4 or IPv6 address to convert.
 *
 * @return the 4-byte IPv6 or 16-byte IPv6 address or null if the address can't
 *         be parsed.
 */
util.bytesFromIP = function(ip) {
  if(ip.indexOf('.') !== -1) {
    return util.bytesFromIPv4(ip);
  }
  if(ip.indexOf(':') !== -1) {
    return util.bytesFromIPv6(ip);
  }
  return null;
};

/**
 * Converts an IPv4 string representation into bytes (in network order).
 *
 * @param ip the IPv4 address to convert.
 *
 * @return the 4-byte address or null if the address can't be parsed.
 */
util.bytesFromIPv4 = function(ip) {
  ip = ip.split('.');
  if(ip.length !== 4) {
    return null;
  }
  var b = util.createBuffer();
  for(var i = 0; i < ip.length; ++i) {
    var num = parseInt(ip[i], 10);
    if(isNaN(num)) {
      return null;
    }
    b.putByte(num);
  }
  return b.getBytes();
};

/**
 * Converts an IPv6 string representation into bytes (in network order).
 *
 * @param ip the IPv6 address to convert.
 *
 * @return the 16-byte address or null if the address can't be parsed.
 */
util.bytesFromIPv6 = function(ip) {
  var blanks = 0;
  ip = ip.split(':').filter(function(e) {
    if(e.length === 0) ++blanks;
    return true;
  });
  var zeros = (8 - ip.length + blanks) * 2;
  var b = util.createBuffer();
  for(var i = 0; i < 8; ++i) {
    if(!ip[i] || ip[i].length === 0) {
      b.fillWithByte(0, zeros);
      zeros = 0;
      continue;
    }
    var bytes = util.hexToBytes(ip[i]);
    if(bytes.length < 2) {
      b.putByte(0);
    }
    b.putBytes(bytes);
  }
  return b.getBytes();
};

/**
 * Converts 4-bytes into an IPv4 string representation or 16-bytes into
 * an IPv6 string representation. The bytes must be in network order.
 *
 * @param bytes the bytes to convert.
 *
 * @return the IPv4 or IPv6 string representation if 4 or 16 bytes,
 *         respectively, are given, otherwise null.
 */
util.bytesToIP = function(bytes) {
  if(bytes.length === 4) {
    return util.bytesToIPv4(bytes);
  }
  if(bytes.length === 16) {
    return util.bytesToIPv6(bytes);
  }
  return null;
};

/**
 * Converts 4-bytes into an IPv4 string representation. The bytes must be
 * in network order.
 *
 * @param bytes the bytes to convert.
 *
 * @return the IPv4 string representation or null for an invalid # of bytes.
 */
util.bytesToIPv4 = function(bytes) {
  if(bytes.length !== 4) {
    return null;
  }
  var ip = [];
  for(var i = 0; i < bytes.length; ++i) {
    ip.push(bytes.charCodeAt(i));
  }
  return ip.join('.');
};

/**
 * Converts 16-bytes into an IPv16 string representation. The bytes must be
 * in network order.
 *
 * @param bytes the bytes to convert.
 *
 * @return the IPv16 string representation or null for an invalid # of bytes.
 */
util.bytesToIPv6 = function(bytes) {
  if(bytes.length !== 16) {
    return null;
  }
  var ip = [];
  var zeroGroups = [];
  var zeroMaxGroup = 0;
  for(var i = 0; i < bytes.length; i += 2) {
    var hex = util.bytesToHex(bytes[i] + bytes[i + 1]);
    // canonicalize zero representation
    while(hex[0] === '0' && hex !== '0') {
      hex = hex.substr(1);
    }
    if(hex === '0') {
      var last = zeroGroups[zeroGroups.length - 1];
      var idx = ip.length;
      if(!last || idx !== last.end + 1) {
        zeroGroups.push({start: idx, end: idx});
      } else {
        last.end = idx;
        if((last.end - last.start) >
          (zeroGroups[zeroMaxGroup].end - zeroGroups[zeroMaxGroup].start)) {
          zeroMaxGroup = zeroGroups.length - 1;
        }
      }
    }
    ip.push(hex);
  }
  if(zeroGroups.length > 0) {
    var group = zeroGroups[zeroMaxGroup];
    // only shorten group of length > 0
    if(group.end - group.start > 0) {
      ip.splice(group.start, group.end - group.start + 1, '');
      if(group.start === 0) {
        ip.unshift('');
      }
      if(group.end === 7) {
        ip.push('');
      }
    }
  }
  return ip.join(':');
};

/**
 * Estimates the number of processes that can be run concurrently. If
 * creating Web Workers, keep in mind that the main JavaScript process needs
 * its own core.
 *
 * @param options the options to use:
 *          update true to force an update (not use the cached value).
 * @param callback(err, max) called once the operation completes.
 */
util.estimateCores = function(options, callback) {
  if(typeof options === 'function') {
    callback = options;
    options = {};
  }
  options = options || {};
  if('cores' in util && !options.update) {
    return callback(null, util.cores);
  }
  if(typeof navigator !== 'undefined' &&
    'hardwareConcurrency' in navigator &&
    navigator.hardwareConcurrency > 0) {
    util.cores = navigator.hardwareConcurrency;
    return callback(null, util.cores);
  }
  if(typeof Worker === 'undefined') {
    // workers not available
    util.cores = 1;
    return callback(null, util.cores);
  }
  if(typeof Blob === 'undefined') {
    // can't estimate, default to 2
    util.cores = 2;
    return callback(null, util.cores);
  }

  // create worker concurrency estimation code as blob
  var blobUrl = URL.createObjectURL(new Blob(['(',
    function() {
      self.addEventListener('message', function(e) {
        // run worker for 4 ms
        var st = Date.now();
        var et = st + 4;
        while(Date.now() < et);
        self.postMessage({st: st, et: et});
      });
    }.toString(),
  ')()'], {type: 'application/javascript'}));

  // take 5 samples using 16 workers
  sample([], 5, 16);

  function sample(max, samples, numWorkers) {
    if(samples === 0) {
      // get overlap average
      var avg = Math.floor(max.reduce(function(avg, x) {
        return avg + x;
      }, 0) / max.length);
      util.cores = Math.max(1, avg);
      URL.revokeObjectURL(blobUrl);
      return callback(null, util.cores);
    }
    map(numWorkers, function(err, results) {
      max.push(reduce(numWorkers, results));
      sample(max, samples - 1, numWorkers);
    });
  }

  function map(numWorkers, callback) {
    var workers = [];
    var results = [];
    for(var i = 0; i < numWorkers; ++i) {
      var worker = new Worker(blobUrl);
      worker.addEventListener('message', function(e) {
        results.push(e.data);
        if(results.length === numWorkers) {
          for(var i = 0; i < numWorkers; ++i) {
            workers[i].terminate();
          }
          callback(null, results);
        }
      });
      workers.push(worker);
    }
    for(var i = 0; i < numWorkers; ++i) {
      workers[i].postMessage(i);
    }
  }

  function reduce(numWorkers, results) {
    // find overlapping time windows
    var overlaps = [];
    for(var n = 0; n < numWorkers; ++n) {
      var r1 = results[n];
      var overlap = overlaps[n] = [];
      for(var i = 0; i < numWorkers; ++i) {
        if(n === i) {
          continue;
        }
        var r2 = results[i];
        if((r1.st > r2.st && r1.st < r2.et) ||
          (r2.st > r1.st && r2.st < r1.et)) {
          overlap.push(i);
        }
      }
    }
    // get maximum overlaps ... don't include overlapping worker itself
    // as the main JS process was also being scheduled during the work and
    // would have to be subtracted from the estimate anyway
    return overlaps.reduce(function(max, overlap) {
      return Math.max(max, overlap.length);
    }, 0);
  }
};

} // end module implementation

/* ########## Begin module wrapper ########## */
var name = 'util';
if(typeof define !== 'function') {
  // NodeJS -> AMD
  if(typeof module === 'object' && module.exports) {
    var nodeJS = true;
    define = function(ids, factory) {
      factory(require, module);
    };
  } else {
    // <script>
    if(typeof forge === 'undefined') {
      forge = {};
    }
    return initModule(forge);
  }
}
// AMD
var deps;
var defineFunc = function(require, module) {
  module.exports = function(forge) {
    var mods = deps.map(function(dep) {
      return require(dep);
    }).concat(initModule);
    // handle circular dependencies
    forge = forge || {};
    forge.defined = forge.defined || {};
    if(forge.defined[name]) {
      return forge[name];
    }
    forge.defined[name] = true;
    for(var i = 0; i < mods.length; ++i) {
      mods[i](forge);
    }
    return forge[name];
  };
};
var tmpDefine = define;
define = function(ids, factory) {
  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);
  if(nodeJS) {
    delete define;
    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));
  }
  define = tmpDefine;
  return define.apply(null, Array.prototype.slice.call(arguments, 0));
};
define(['require', 'module'], function() {
  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));
});
})();
/**
 *  Helper methods for performing RSA Encryption methods. Uses Optimal Asymmetric
 *  Encryption Padding (OAEP) encryption and decryption. Uses RSA SSA PKCS#1 v1.5
 *  (RSASSA-PKCS1-V1_5) signing and verifying with UTF8 encoding.
 * 
 *  @author fritz.ray@eduworks.com
 *  @module com.eduworks.ec
 *  @class EcRsaOaep
 */
var EcRsaOaep = function() {};
EcRsaOaep = stjs.extend(EcRsaOaep, null, [], function(constructor, prototype) {
    /**
     *  Encrypts a block of plaintext (no more than 256 bytes) with a public key
     *  using RSA OAEP encryption. Returns a base64 encoded ciphertext.
     * 
     *  @param {EcPk}   pk Public Key.
     *  @param {string} plaintext Plaintext. Does not perform encoding.
     *  @method encrypt
     *  @static
     */
    constructor.encrypt = function(pk, plaintext) {
        if ($ == null) {
            return rsaEncrypt(plaintext, pk.toPem());
        }
        return forge.util.encode64(pk.pk.encrypt(plaintext, "RSA-OAEP"));
    };
    /**
     *  Decrypts a block of ciphertext (no more than 256 bytes) with a private
     *  key using RSA OAEP encryption. Returns a unencoded plaintext.
     * 
     *  @param {EcPpk}  ppk Public private keypair.
     *  @param {string} ciphertext Ciphertext.
     *  @return {string} Unencoded plaintext.
     *  @method decrypt
     *  @static
     */
    constructor.decrypt = function(ppk, ciphertext) {
        if (EcCrypto.caching) {
            var cacheGet = null;
            cacheGet = (EcCrypto.decryptionCache)[ppk.toPem() + ciphertext];
            if (cacheGet != null) {
                return cacheGet;
            }
        }
        var result;
        if ($ == null) {
            result = rsaDecrypt(ciphertext, ppk.toPem());
        } else {
            result = ppk.ppk.decrypt(forge.util.decode64(ciphertext), "RSA-OAEP");
        }
        if (EcCrypto.caching) {
            (EcCrypto.decryptionCache)[ppk.toPem() + ciphertext] = result;
        }
        return result;
    };
    /**
     *  Creates a signature for the provided text using the public private
     *  keypair. May be verified with the public key. Uses SHA1 hash with a UTF8
     *  decoding of the text. Returns base64 encoded signature.
     * 
     *  @param {EcPpk}  ppk Public private keypair.
     *  @param {string} text Text to sign.
     *  @return Base64 encoded signature.
     *  @method sign
     *  @static
     */
    constructor.sign = function(ppk, text) {
        if ($ == null) {
            return rsaSign(text, ppk.toPem());
        }
        var s = forge.md.sha1.create();
        s.update(text, "utf8");
        return forge.util.encode64(ppk.ppk.sign(s));
    };
    /**
     *  Creates a signature for the provided text using the public private
     *  keypair. May be verified with the public key. Uses SHA256 hash with a
     *  UTF8 decoding of the text. Returns base64 encoded signature.
     * 
     *  @param {EcPpk}  ppk Public private keypair.
     *  @param {string} text Text to sign.
     *  @return Base64 encoded signature.
     *  @method signSha256
     *  @static
     */
    constructor.signSha256 = function(ppk, text) {
        var s = forge.md.sha256.create();
        s.update(text, "utf8");
        return forge.util.encode64(ppk.ppk.sign(s));
    };
    /**
     *  Verifies the integrity of the provided text using a signature and a
     *  public key. Uses SHA1 hash with a UTF8 decoding of the text.
     * 
     *  @param {EcPk}   pk Public key.
     *  @param {string} text Text to verify.
     *  @param {string} signature Base64 encoded signature.
     *  @return True IFF the signature is valid.
     *  @static
     *  @method verify
     */
    constructor.verify = function(pk, text, signature) {
        if ($ == null) {
            return rsaVerify(signature, pk.toPem(), text);
        }
        var s = forge.md.sha1.create();
        s.update(text, "utf8");
        try {
            return pk.verify(s.digest().bytes(), forge.util.decode64(signature));
        }catch (ex) {
            return false;
        }
    };
}, {}, {});
/**
 *  Helper classes for dealing with RSA Private Keys.
 * 
 *  @author fritz.ray@eduworks.com
 *  @class EcPpk
 *  @module com.eduworks.ec
 */
var EcPpk = function() {};
EcPpk = stjs.extend(EcPpk, null, [], function(constructor, prototype) {
    prototype.jwk = null;
    prototype.key = null;
    prototype.signKey = null;
    prototype.ppk = null;
    /**
     *  Decodes a PEM encoded PrivateKeyInfo (PKCS#8) or RSAPrivateKey (PKCS#1) formatted RSA Public Key.
     *  (In case you were curious.)
     * 
     *  @param {string} pem PEM as a string.
     *  @return {EcPk} Object used to perform public key operations.
     *  @method fromPem
     *  @static
     */
    constructor.fromPem = function(pem) {
        var pk = new EcPpk();
        try {
            pk.ppk = forge.pki.privateKeyFromPem(pem);
        }catch (ex) {
            return null;
        }
        return pk;
    };
    /**
     *  Generates an RSA Keypair using web workers.
     * 
     *  @param {function(EcPpk)} callback Method called when the keypair is generated.
     *  @method generateKeyAsync
     *  @static
     */
    constructor.generateKeyAsync = function(callback) {
        var o = new Object();
        (o)["workers"] = -1;
        forge.pki.rsa.generateKeyPair(o, function(err, keypair) {
            var ppk = new EcPpk();
            ppk.ppk = keypair.privateKey;
            callback(ppk);
        });
    };
    /**
     *  Generates an RSA Keypair synchronously. Can take a while.
     * 
     *  @return {EcPpk} Public private keypair.
     *  @method generateKey
     *  @static
     */
    constructor.generateKey = function() {
        var o = new Object();
        (o)["workers"] = -1;
        var keypair = forge.pki.rsa.generateKeyPair(o, null);
        var ppk = new EcPpk();
        ppk.ppk = keypair.privateKey;
        return ppk;
    };
    /**
     *  Returns true iff the PEM forms of the public private keypair match.
     *  Can also match against a public key if the public portion of the keypair match.
     * 
     *  @param {EcPpk|EcPk} Key to compare to.
     *  @return boolean If they match.
     *  @method equals
     */
    prototype.equals = function(obj) {
        if (stjs.isInstanceOf(obj.constructor, EcPpk)) 
            return this.toPem().equals((obj).toPem());
        if (stjs.isInstanceOf(obj.constructor, EcPk)) 
            return this.toPk().toPem().equals((obj).toPem());
        return Object.prototype.equals.call(this, obj);
    };
    /**
     *  Encodes the private key into a PEM encoded RSAPrivateKey (PKCS#1) formatted RSA Public Key.
     *  (In case you were curious.)
     * 
     *  @return {string} PEM encoded public key without whitespace.
     *  @method toPem
     */
    prototype.toPem = function() {
        return forge.pki.privateKeyToPem(this.ppk).replaceAll("\r?\n", "");
    };
    /**
     *  Encodes the private key into a PEM encoded RSAPrivateKey (PKCS#1) formatted RSA Public Key.
     *  (In case you were curious.)
     * 
     *  @return {string} PEM encoded public key without whitespace.
     *  @method toPkcs1Pem
     */
    prototype.toPkcs1Pem = function() {
        return forge.pki.privateKeyToPem(this.ppk).replaceAll("\r?\n", "");
    };
    /**
     *  Encodes the private key into a PEM encoded PrivateKeyInfo (PKCS#8) formatted RSA Public Key.
     *  (In case you were curious.)
     * 
     *  @return {string} PEM encoded public key without whitespace.
     *  @method toPkcs8Pem
     */
    prototype.toPkcs8Pem = function() {
        return forge.pki.privateKeyInfoToPem(forge.pki.wrapRsaPrivateKey(forge.pki.privateKeyToAsn1(this.ppk))).replaceAll("\r?\n", "");
    };
    prototype.toJwk = function() {
        if (this.jwk == null) 
            this.jwk = pemJwk.pem2jwk(forge.pki.privateKeyToPem(this.ppk));
        return this.jwk;
    };
    prototype.toPkcs8 = function() {
        return forge.pki.wrapRsaPrivateKey(forge.pki.privateKeyToAsn1(this.ppk));
    };
    /**
     *  Extracts the public key portion from the public private keypair.
     * 
     *  @return {EcPk} Public Key Helper.
     *  @method toPk
     */
    prototype.toPk = function() {
        var pk = new EcPk();
        pk.pk = forge.pki.rsa.setPublicKey(this.ppk.n, this.ppk.e);
        return pk;
    };
    /**
     *  Returns true if this PPK is in an array of PPKs.
     * 
     *  @param {Array<EcPpk>} ppks Array of ppks
     *  @return true iff this PPK in ppks.
     *  @method inArray
     */
    prototype.inArray = function(ppks) {
        for (var i = 0; i < ppks.length; i++) {
            if (ppks[i].equals(this)) 
                return true;
        }
        return false;
    };
}, {jwk: "Object", key: "CryptoKey", signKey: "CryptoKey", ppk: "forge.ppk"}, {});
/**
 *  Encrypts data synchronously using AES-256-CTR. Requires secret and iv to be 32 bytes.
 *  Output is encoded in base64 for easier handling.
 * 
 *  @author fritz.ray@eduworks.com
 *  @module com.eduworks.ec
 *  @class EcAesCtr
 */
var EcAesCtr = function() {};
EcAesCtr = stjs.extend(EcAesCtr, null, [], function(constructor, prototype) {
    /**
     *  Encrypts plaintext using AES-256-CTR.
     *  Plaintext is treated as as a sequence of bytes, does not perform UTF8 decoding.
     *  Returns base64 encoded ciphertext.
     * 
     *  @param {string} plaintext Text to encrypt.
     *  @param {string} secret Secret to use to encrypt.
     *  @param {string} iv Initialization Vector to use to encrypt.
     *  @return {string} Ciphertext encoded using base64.
     *  @method encrypt
     *  @static
     */
    constructor.encrypt = function(plaintext, secret, iv) {
        if ($ == null && forge.util.decode64(secret).length == 16 && forge.util.decode64(iv).length == 16) 
            return aesEncrypt(plaintext, iv, secret);
        var c = forge.cipher.createCipher("AES-CTR", forge.util.decode64(secret));
        c.start(new EcAesParameters(iv));
        c.update(forge.util.createBuffer(plaintext));
        c.finish();
        var encrypted = c.output;
        return forge.util.encode64(encrypted.bytes());
    };
    /**
     *  Decrypts ciphertext using AES-256-CTR.
     *  Ciphertext must be base64 encoded ciphertext.
     *  Returns plaintext as a string (Sequence of bytes, no encoding).
     * 
     *  @param {string} ciphertext Ciphertext to decrypt.
     *  @param {string} secret Secret to use to decrypt.
     *  @param {string} iv Initialization Vector to use to decrypt.
     *  @return {string} Plaintext with no encoding.
     *  @method decrypt
     *  @static
     */
    constructor.decrypt = function(ciphertext, secret, iv) {
        if (EcCrypto.caching) {
            var cacheGet = (EcCrypto.decryptionCache)[secret + iv + ciphertext];
            if (cacheGet != null) 
                return cacheGet;
        }
        if ($ == null && forge.util.decode64(secret).length == 16 && forge.util.decode64(iv).length == 16) {
            var result = aesDecrypt(ciphertext, iv, secret);
            if (EcCrypto.caching) 
                (EcCrypto.decryptionCache)[secret + iv + ciphertext] = result;
            return result;
        }
        var c = forge.cipher.createDecipher("AES-CTR", forge.util.decode64(secret));
        c.start(new EcAesParameters(iv));
        c.update(forge.util.createBuffer(forge.util.decode64(ciphertext)));
        c.finish();
        var decrypted = c.output;
        if (EcCrypto.caching) 
            (EcCrypto.decryptionCache)[secret + iv + ciphertext] = decrypted.data;
        return decrypted.data;
    };
}, {}, {});
/**
 *  Asynchronous implementation of {{#crossLink
 *  "EcRsaOaep"}}EcRsaOaep{{/crossLink}}. Uses web workers and assumes 8 workers.
 * 
 *  @author fritz.ray@eduworks.com
 *  @class EcRsaOaepAsync
 *  @module com.eduworks.ec
 */
var EcRsaOaepAsyncWorker = function() {};
EcRsaOaepAsyncWorker = stjs.extend(EcRsaOaepAsyncWorker, null, [], function(constructor, prototype) {
    constructor.rotator = 0;
    constructor.w = null;
    constructor.q1 = null;
    constructor.q2 = null;
    constructor.initWorker = function() {
        if (window == null && (typeof self).equals("undefined")) {
            return;
        }
        if (!EcRemote.async) {
            return;
        }
        if (EcRsaOaepAsyncWorker.w != null) {
            return;
        }
        EcRsaOaepAsyncWorker.rotator = 0;
        EcRsaOaepAsyncWorker.q1 = new Array();
        EcRsaOaepAsyncWorker.q2 = new Array();
        EcRsaOaepAsyncWorker.w = new Array();
        for (var index = 0; index < 8; index++) {
            EcRsaOaepAsyncWorker.createWorker(index);
        }
    };
    constructor.createWorker = function(index) {
        EcRsaOaepAsyncWorker.q1.push(new Array());
        EcRsaOaepAsyncWorker.q2.push(new Array());
        var wkr;
        EcRsaOaepAsyncWorker.w.push(wkr = new Worker((window)["scriptPath"] + "forgeAsync.js"));
        wkr.onmessage = function(p1) {
            var o = p1.data;
            var success = EcRsaOaepAsyncWorker.q1[index].shift();
            var failure = EcRsaOaepAsyncWorker.q2[index].shift();
            if ((o)["error"] != null) {
                if (failure != null) 
                    failure((o)["error"]);
            } else if (success != null) {
                success((o)["result"]);
            }
        };
        wkr.onerror = function(p1) {
            var success = EcRsaOaepAsyncWorker.q1[index].shift();
            var failure = EcRsaOaepAsyncWorker.q2[index].shift();
            if (failure != null) {
                failure(p1.toString());
            }
        };
    };
    /**
     *  Asynchronous form of {{#crossLink
     *  "EcRsaOaep/encrypt:method"}}EcRsaOaep.encrypt{{/crossLink}}
     * 
     *  @param {EcPk}             pk Public Key to use to encrypt.
     *  @param {string}           plaintext Plaintext to encrypt.
     *  @param {function(string)} success Success method, result is Base64
     *                            encoded Ciphertext.
     *  @param {function(string)} failure Failure method, parameter is error
     *                            message.
     *  @method encrypt
     *  @static
     */
    constructor.encrypt = function(pk, plaintext, success, failure) {
        EcRsaOaepAsyncWorker.initWorker();
        if (!EcRemote.async || EcRsaOaepAsyncWorker.w == null) {
            success(EcRsaOaep.encrypt(pk, plaintext));
        } else {
            var worker = EcRsaOaepAsyncWorker.rotator++;
            EcRsaOaepAsyncWorker.rotator = EcRsaOaepAsyncWorker.rotator % 8;
            var o = new Object();
            (o)["pk"] = pk.toPem();
            (o)["text"] = plaintext;
            (o)["cmd"] = "encryptRsaOaep";
            EcRsaOaepAsyncWorker.q1[worker].push(success);
            EcRsaOaepAsyncWorker.q2[worker].push(failure);
            EcRsaOaepAsyncWorker.w[worker].postMessage(o);
        }
    };
    /**
     *  Asynchronous form of {{#crossLink
     *  "EcRsaOaep/decrypt:method"}}EcRsaOaep.decrypt{{/crossLink}}
     * 
     *  @param {EcPpk}            ppk Public private keypair to use to decrypt.
     *  @param {string}           ciphertext Ciphertext to decrypt.
     *  @param {function(string)} success Success method, result is unencoded
     *                            plaintext.
     *  @param {function(string)} failure Failure method, parameter is error
     *                            message.
     *  @method decrypt
     *  @static
     */
    constructor.decrypt = function(ppk, ciphertext, success, failure) {
        if (EcCrypto.caching) {
            var cacheGet = null;
            cacheGet = (EcCrypto.decryptionCache)[ppk.toPem() + ciphertext];
            if (cacheGet != null) {
                success(cacheGet);
                return;
            }
        }
        EcRsaOaepAsyncWorker.initWorker();
        if (!EcRemote.async || EcRsaOaepAsyncWorker.w == null) {
            success(EcRsaOaep.decrypt(ppk, ciphertext));
        } else {
            var worker = EcRsaOaepAsyncWorker.rotator++;
            EcRsaOaepAsyncWorker.rotator = EcRsaOaepAsyncWorker.rotator % 8;
            var o = new Object();
            (o)["ppk"] = ppk.toPem();
            (o)["text"] = ciphertext;
            (o)["cmd"] = "decryptRsaOaep";
            if (EcCrypto.caching) {
                EcRsaOaepAsyncWorker.q1[worker].push(function(p1) {
                    (EcCrypto.decryptionCache)[ppk.toPem() + ciphertext] = p1;
                    success(p1);
                });
            } else {
                EcRsaOaepAsyncWorker.q1[worker].push(success);
            }
            EcRsaOaepAsyncWorker.q2[worker].push(failure);
            EcRsaOaepAsyncWorker.w[worker].postMessage(o);
        }
    };
    /**
     *  Asynchronous form of {{#crossLink
     *  "EcRsaOaep/sign:method"}}EcRsaOaep.sign{{/crossLink}}
     * 
     *  @param {EcPpk}            ppk Public private keypair to use to sign message.
     *  @param {string}           text Text to sign.
     *  @param {function(string)} success Success method, result is Base64
     *                            encoded signature.
     *  @param {function(string)} failure Failure method, parameter is error
     *                            message.
     *  @method sign
     *  @static
     */
    constructor.sign = function(ppk, text, success, failure) {
        EcRsaOaepAsyncWorker.initWorker();
        if (!EcRemote.async || EcRsaOaepAsyncWorker.w == null) {
            success(EcRsaOaep.sign(ppk, text));
        } else {
            var worker = EcRsaOaepAsyncWorker.rotator++;
            EcRsaOaepAsyncWorker.rotator = EcRsaOaepAsyncWorker.rotator % 8;
            var o = new Object();
            (o)["ppk"] = ppk.toPem();
            (o)["text"] = text;
            (o)["cmd"] = "signRsaOaep";
            EcRsaOaepAsyncWorker.q1[worker].push(success);
            EcRsaOaepAsyncWorker.q2[worker].push(failure);
            EcRsaOaepAsyncWorker.w[worker].postMessage(o);
        }
    };
    /**
     *  Asynchronous form of {{#crossLink
     *  "EcRsaOaep/signSha256:method"}}EcRsaOaep.signSha256{{/crossLink}}
     * 
     *  @param {EcPpk}            ppk Public private keypair to use to sign message.
     *  @param {string}           text Text to sign.
     *  @param {function(string)} success Success method, result is Base64
     *                            encoded signature.
     *  @param {function(string)} failure Failure method, parameter is error
     *                            message.
     *  @method signSha256
     *  @static
     */
    constructor.signSha256 = function(ppk, text, success, failure) {
        EcRsaOaepAsyncWorker.initWorker();
        if (!EcRemote.async || EcRsaOaepAsyncWorker.w == null) {
            success(EcRsaOaep.signSha256(ppk, text));
        } else {
            var worker = EcRsaOaepAsyncWorker.rotator++;
            EcRsaOaepAsyncWorker.rotator = EcRsaOaepAsyncWorker.rotator % 8;
            var o = new Object();
            (o)["ppk"] = ppk.toPem();
            (o)["text"] = text;
            (o)["cmd"] = "signSha256RsaOaep";
            EcRsaOaepAsyncWorker.q1[worker].push(success);
            EcRsaOaepAsyncWorker.q2[worker].push(failure);
            EcRsaOaepAsyncWorker.w[worker].postMessage(o);
        }
    };
    /**
     *  Asynchronous form of {{#crossLink
     *  "EcRsaOaep/verify:method"}}EcRsaOaep.verify{{/crossLink}}
     * 
     *  @param {EcPk}              pk Public key to use to verify message.
     *  @param {string}            text Text to use in verification.
     *  @param {string}            signature Signature to use in verification.
     *  @param {function(boolean)} success Success method, result is whether
     *                             signature is valid.
     *  @param {function(string)}  failure Failure method, parameter is error
     *                             message.
     *  @method verify
     *  @static
     */
    constructor.verify = function(pk, text, signature, success, failure) {
        EcRsaOaepAsyncWorker.initWorker();
        if (!EcRemote.async || EcRsaOaepAsyncWorker.w == null) {
            success(EcRsaOaep.verify(pk, text, signature));
        } else {
            var worker = EcRsaOaepAsyncWorker.rotator++;
            EcRsaOaepAsyncWorker.rotator = EcRsaOaepAsyncWorker.rotator % 8;
            var o = new Object();
            (o)["pk"] = pk.toPem();
            (o)["text"] = text;
            (o)["signature"] = signature;
            (o)["cmd"] = "verifyRsaOaep";
            EcRsaOaepAsyncWorker.q1[worker].push(success);
            EcRsaOaepAsyncWorker.q2[worker].push(failure);
            EcRsaOaepAsyncWorker.w[worker].postMessage(o);
        }
    };
}, {w: {name: "Array", arguments: [{name: "Worker", arguments: ["Object"]}]}, q1: {name: "Array", arguments: [{name: "Array", arguments: ["Callback1"]}]}, q2: {name: "Array", arguments: [{name: "Array", arguments: ["Callback1"]}]}}, {});
/**
 *  Asynchronous implementation of {{#crossLink
 *  "EcAesCtr"}}EcAesCtr{{/crossLink}}. Uses web workers and assumes 8 workers.
 * 
 *  @author fritz.ray@eduworks.com
 *  @class EcAesCtrAsync
 *  @module com.eduworks.ec
 */
var EcAesCtrAsyncWorker = function() {};
EcAesCtrAsyncWorker = stjs.extend(EcAesCtrAsyncWorker, null, [], function(constructor, prototype) {
    constructor.rotator = 0;
    constructor.w = null;
    constructor.q1 = null;
    constructor.q2 = null;
    constructor.initWorker = function() {
        if (window == null && (typeof self).equals("undefined")) {
            return;
        }
        if (!EcRemote.async) {
            return;
        }
        if (EcAesCtrAsyncWorker.w != null) {
            return;
        }
        EcAesCtrAsyncWorker.rotator = 0;
        EcAesCtrAsyncWorker.q1 = new Array();
        EcAesCtrAsyncWorker.q2 = new Array();
        EcAesCtrAsyncWorker.w = new Array();
        for (var index = 0; index < 8; index++) {
            EcAesCtrAsyncWorker.createWorker(index);
        }
    };
    constructor.createWorker = function(index) {
        EcAesCtrAsyncWorker.q1.push(new Array());
        EcAesCtrAsyncWorker.q2.push(new Array());
        var wkr;
        EcAesCtrAsyncWorker.w.push(wkr = new Worker((window)["scriptPath"] + "forgeAsync.js"));
        wkr.onmessage = function(p1) {
            var o = p1.data;
            var success = EcAesCtrAsyncWorker.q1[index].shift();
            var failure = EcAesCtrAsyncWorker.q2[index].shift();
            if ((o)["error"] != null) {
                if (failure != null) 
                    failure((o)["error"]);
            } else if (success != null) {
                success((o)["result"]);
            }
        };
        wkr.onerror = function(p1) {
            var success = EcAesCtrAsyncWorker.q1[index].shift();
            var failure = EcAesCtrAsyncWorker.q2[index].shift();
            if (failure != null) {
                failure(p1.toString());
            }
        };
    };
    /**
     *  Asynchronous form of {{#crossLink
     *  "EcAesCtr/encrypt:method"}}EcAesCtr.encrypt{{/crossLink}}
     * 
     *  @param {string}           plaintext Text to encrypt.
     *  @param {string}           secret Secret to use to encrypt.
     *  @param {string}           iv Initialization Vector to use to encrypt.
     *  @param {function(string)} success Success method, result is Base64
     *                            encoded Ciphertext.
     *  @param {function(string)} failure Failure method, parameter is error
     *                            message.
     *  @method encrypt
     *  @static
     */
    constructor.encrypt = function(plaintext, secret, iv, success, failure) {
        EcAesCtrAsyncWorker.initWorker();
        if (!EcRemote.async || EcAesCtrAsyncWorker.w == null) {
            success(EcAesCtr.encrypt(plaintext, secret, iv));
        } else {
            var worker = EcAesCtrAsyncWorker.rotator++;
            EcAesCtrAsyncWorker.rotator = EcAesCtrAsyncWorker.rotator % 8;
            var o = new Object();
            (o)["secret"] = secret;
            (o)["iv"] = iv;
            (o)["text"] = plaintext;
            (o)["cmd"] = "encryptAesCtr";
            EcAesCtrAsyncWorker.q1[worker].push(success);
            EcAesCtrAsyncWorker.q2[worker].push(failure);
            EcAesCtrAsyncWorker.w[worker].postMessage(o);
        }
    };
    /**
     *  Asynchronous form of {{#crossLink
     *  "EcAesCtr/decrypt:method"}}EcAesCtr.decrypt{{/crossLink}}
     * 
     *  @param {string}           ciphertext Text to decrypt.
     *  @param {string}           secret Secret to use to decrypt.
     *  @param {string}           iv Initialization Vector to use to decrypt.
     *  @param {function(string)} success Success method, result is Plaintext
     *                            with no encoding.
     *  @param {function(string)} failure Failure method, parameter is error
     *                            message.
     *  @method decrypt
     *  @static
     */
    constructor.decrypt = function(ciphertext, secret, iv, success, failure) {
        if (EcCrypto.caching) {
            var cacheGet = null;
            cacheGet = (EcCrypto.decryptionCache)[secret + iv + ciphertext];
            if (cacheGet != null) {
                success(cacheGet);
                return;
            }
        }
        EcAesCtrAsyncWorker.initWorker();
        if (!EcRemote.async || EcAesCtrAsyncWorker.w == null) {
            success(EcAesCtr.decrypt(ciphertext, secret, iv));
        } else {
            var worker = EcAesCtrAsyncWorker.rotator++;
            EcAesCtrAsyncWorker.rotator = EcAesCtrAsyncWorker.rotator % 8;
            var o = new Object();
            (o)["secret"] = secret;
            (o)["iv"] = iv;
            (o)["text"] = ciphertext;
            (o)["cmd"] = "decryptAesCtr";
            if (EcCrypto.caching) {
                EcAesCtrAsyncWorker.q1[worker].push(function(p1) {
                    (EcCrypto.decryptionCache)[secret + iv + ciphertext] = p1;
                    success(p1);
                });
            } else {
                EcAesCtrAsyncWorker.q1[worker].push(success);
            }
            EcAesCtrAsyncWorker.q2[worker].push(failure);
            EcAesCtrAsyncWorker.w[worker].postMessage(o);
        }
    };
}, {w: {name: "Array", arguments: [{name: "Worker", arguments: ["Object"]}]}, q1: {name: "Array", arguments: [{name: "Array", arguments: ["Callback1"]}]}, q2: {name: "Array", arguments: [{name: "Array", arguments: ["Callback1"]}]}}, {});
var EcRsaOaepAsync = function() {};
EcRsaOaepAsync = stjs.extend(EcRsaOaepAsync, null, [], function(constructor, prototype) {
    constructor.encrypt = function(pk, text, success, failure) {
        if (EcRemote.async == false) {
            success(EcRsaOaep.encrypt(pk, text));
            return;
        }
        if (window.crypto == null || window.crypto.subtle == null) {
            EcRsaOaepAsyncWorker.encrypt(pk, text, success, failure);
            return;
        }
        var keyUsages = new Array();
        keyUsages.push("encrypt");
        var algorithm = new Object();
        algorithm.name = "RSA-OAEP";
        algorithm.hash = "SHA-1";
        if (pk.key == null) 
            window.crypto.subtle.importKey("jwk", pk.toJwk(), algorithm, false, keyUsages).then(function(key) {
                pk.key = key;
                window.crypto.subtle.encrypt(algorithm, key, str2ab(text)).then(function(p1) {
                    success(base64.encode(p1));
                }, failure);
            }, failure);
         else 
            window.crypto.subtle.encrypt(algorithm, pk.key, str2ab(text)).then(function(p1) {
                success(base64.encode(p1));
            }, failure);
    };
    constructor.decrypt = function(ppk, text, success, failure) {
        if (EcCrypto.caching) {
            var cacheGet = null;
            cacheGet = (EcCrypto.decryptionCache)[ppk.toPem() + text];
            if (cacheGet != null) {
                success(cacheGet);
                return;
            }
        }
        if (EcRemote.async == false) {
            success(EcRsaOaep.decrypt(ppk, text));
            return;
        }
        if (window.crypto == null || window.crypto.subtle == null) {
            EcRsaOaepAsyncWorker.decrypt(ppk, text, success, failure);
            return;
        }
        var keyUsages = new Array();
        keyUsages.push("decrypt");
        var algorithm = new Object();
        algorithm.name = "RSA-OAEP";
        algorithm.hash = "SHA-1";
        if (ppk.key == null) 
            window.crypto.subtle.importKey("jwk", ppk.toJwk(), algorithm, false, keyUsages).then(function(key) {
                ppk.key = key;
                window.crypto.subtle.decrypt(algorithm, key, base64.decode(text)).then(function(p1) {
                    success(ab2str(p1));
                }, failure);
            }, failure);
         else 
            window.crypto.subtle.decrypt(algorithm, ppk.key, base64.decode(text)).then(function(p1) {
                success(ab2str(p1));
            }, failure);
    };
    constructor.sign = function(ppk, text, success, failure) {
        if (EcRemote.async == false) {
            success(EcRsaOaep.sign(ppk, text));
            return;
        }
        if (window.crypto == null || window.crypto.subtle == null) {
            EcRsaOaepAsyncWorker.sign(ppk, text, success, failure);
            return;
        }
        var keyUsages = new Array();
        keyUsages.push("sign");
        var algorithm = new Object();
        algorithm.name = "RSASSA-PKCS1-v1_5";
        algorithm.hash = "SHA-1";
        if (ppk.signKey == null) 
            window.crypto.subtle.importKey("jwk", ppk.toJwk(), algorithm, false, keyUsages).then(function(key) {
                ppk.signKey = key;
                window.crypto.subtle.sign(algorithm, key, str2ab(text)).then(function(p1) {
                    success(base64.encode(p1));
                }, failure);
            }, failure);
         else 
            window.crypto.subtle.sign(algorithm, ppk.signKey, str2ab(text)).then(function(p1) {
                success(base64.encode(p1));
            }, failure);
    };
    constructor.signSha256 = function(ppk, text, success, failure) {
        if (EcRemote.async == false) {
            success(EcRsaOaep.signSha256(ppk, text));
            return;
        }
        if (window.crypto == null || window.crypto.subtle == null) {
            EcRsaOaepAsyncWorker.sign(ppk, text, success, failure);
            return;
        }
        var keyUsages = new Array();
        keyUsages.push("sign");
        var algorithm = new Object();
        algorithm.name = "RSASSA-PKCS1-v1_5";
        algorithm.hash = "SHA-256";
        if (ppk.signKey == null) 
            window.crypto.subtle.importKey("jwk", ppk.toJwk(), algorithm, false, keyUsages).then(function(key) {
                ppk.signKey = key;
                window.crypto.subtle.sign(algorithm, key, str2ab(text)).then(function(p1) {
                    success(base64.encode(p1));
                }, failure);
            }, failure);
         else 
            window.crypto.subtle.sign(algorithm, ppk.signKey, str2ab(text)).then(function(p1) {
                success(base64.encode(p1));
            }, failure);
    };
    constructor.verify = function(pk, text, signature, success, failure) {
        if (EcRemote.async == false) {
            success(EcRsaOaep.verify(pk, text, signature));
            return;
        }
        if (window.crypto == null || window.crypto.subtle == null) {
            EcRsaOaepAsyncWorker.verify(pk, text, signature, success, failure);
            return;
        }
        var keyUsages = new Array();
        keyUsages.push("verify");
        var algorithm = new Object();
        algorithm.name = "RSASSA-PKCS1-v1_5";
        algorithm.hash = "SHA-1";
        if (pk.signKey == null) 
            window.crypto.subtle.importKey("jwk", pk.toJwk(), algorithm, false, keyUsages).then(function(key) {
                pk.signKey = key;
                window.crypto.subtle.verify(algorithm, key, base64.decode(signature), str2ab(text)).then(function(p1) {
                    success(p1);
                }, failure);
            }, failure);
         else 
            window.crypto.subtle.verify(algorithm, pk.signKey, base64.decode(signature), str2ab(text)).then(function(p1) {
                success(p1);
            }, failure);
    };
}, {}, {});
var EcAesCtrAsync = function() {};
EcAesCtrAsync = stjs.extend(EcAesCtrAsync, null, [], function(constructor, prototype) {
    constructor.encrypt = function(text, secret, iv, success, failure) {
        if (window.crypto == null || window.crypto.subtle == null) {
            EcAesCtrAsyncWorker.encrypt(text, secret, iv, success, failure);
            return;
        }
        var keyUsages = new Array();
        keyUsages.push("encrypt", "decrypt");
        var algorithm = new Object();
        algorithm.name = "AES-CTR";
        algorithm.counter = base64.decode(iv);
        algorithm.length = 128;
        var data;
        data = str2ab(text);
        window.crypto.subtle.importKey("raw", base64.decode(secret), algorithm, false, keyUsages).then(function(key) {
            var p = window.crypto.subtle.encrypt(algorithm, key, data);
            p.then(function(p1) {
                success(base64.encode(p1));
            }, failure);
        }, failure);
    };
    constructor.decrypt = function(text, secret, iv, success, failure) {
        if (EcCrypto.caching) {
            var cacheGet = (EcCrypto.decryptionCache)[secret + iv + text];
            if (cacheGet != null) {
                success(cacheGet);
                return;
            }
        }
        if (window.crypto == null || window.crypto.subtle == null) {
            EcAesCtrAsyncWorker.decrypt(text, secret, iv, success, failure);
            return;
        }
        var keyUsages = new Array();
        keyUsages.push("encrypt", "decrypt");
        var algorithm = new Object();
        algorithm.name = "AES-CTR";
        algorithm.counter = base64.decode(iv);
        algorithm.length = 128;
        var data;
        data = base64.decode(text);
        window.crypto.subtle.importKey("raw", base64.decode(secret), algorithm, false, keyUsages).then(function(key) {
            var p = window.crypto.subtle.decrypt(algorithm, key, data);
            p.then(function(p1) {
                success(ab2str(p1));
            }, failure);
        }, failure);
    };
}, {}, {});
var Endpoint = function() {
    this.username = "";
    this.password = "";
    this.url = "";
    this.token = "";
    this.lastSyncedThreads = {};
    this.lastSyncedBooksMine = {};
    this.lastSyncedBooksShared = {};
};
Endpoint = stjs.extend(Endpoint, null, [], function(constructor, prototype) {
    prototype.username = null;
    prototype.password = null;
    prototype.token = null;
    prototype.url = null;
    prototype.lastSyncedThreads = null;
    prototype.lastSyncedBooksMine = null;
    prototype.lastSyncedBooksShared = null;
    prototype.toConfigObject = function(URLSuffix) {
        var s = {};
        s["user"] = this.username;
        s["password"] = this.password;
        s["endpoint"] = this.url + URLSuffix;
        s["token"] = this.token;
        s["lastSyncedThreads"] = this.lastSyncedThreads;
        s["lastSyncedBooksMine"] = this.lastSyncedBooksMine;
        s["lastSyncedBooksShared"] = this.lastSyncedBooksShared;
        return s;
    };
    prototype.toObject = function() {
        var s = {};
        s["username"] = this.username;
        s["password"] = this.password;
        s["url"] = this.url;
        s["token"] = this.token;
        s["lastSyncedThreads"] = this.lastSyncedThreads;
        s["lastSyncedBooksMine"] = this.lastSyncedBooksMine;
        s["lastSyncedBooksShared"] = this.lastSyncedBooksShared;
        return s;
    };
    prototype.toString = function() {
        return JSON.stringify(this.toObject());
    };
    constructor.fromValues = function(username, password, token, url, lastSyncedThreads, lastSyncedBooksMine, lastSyncedBooksShared) {
        var e = new Endpoint();
        e.username = username;
        e.password = password;
        e.url = url;
        e.token = token;
        e.lastSyncedThreads = lastSyncedThreads;
        e.lastSyncedBooksMine = lastSyncedBooksMine;
        e.lastSyncedBooksShared = lastSyncedBooksShared;
        return e;
    };
    constructor.fromMap = function(values) {
        var e = new Endpoint();
        e.username = values["username"];
        e.password = values["password"];
        e.url = values["url"];
        e.token = values["token"];
        e.lastSyncedThreads = values["lastSyncedThreads"];
        e.lastSyncedBooksMine = values["lastSyncedBooksMine"];
        e.lastSyncedBooksShared = values["lastSyncedBooksShared"];
        return e;
    };
    constructor.fromString = function(s) {
        return Endpoint.fromMap(JSON.parse(s));
    };
}, {lastSyncedThreads: {name: "Map", arguments: [null, null]}, lastSyncedBooksMine: {name: "Map", arguments: [null, null]}, lastSyncedBooksShared: {name: "Map", arguments: [null, null]}}, {});
var ActivityAdapter = function() {};
ActivityAdapter = stjs.extend(ActivityAdapter, null, [], function(constructor, prototype) {
    prototype.getActivityId = function() {};
    prototype.retrieveActivityListing = function(callback) {};
    prototype.hasActivityListing = function() {};
    prototype.openBook = function(containerPath, callback) {};
    prototype.getBook = function() {};
    prototype.getPreviousBook = function() {};
    prototype.setDirectMessageHandler = function(directMessageHandler) {};
    prototype.initializeToc = function(data) {};
    prototype.getToc = function(callback) {};
    prototype.hookDirectMessages = function() {};
    prototype.clearParentActivity = function() {};
    prototype.startParentActivity = function(activity) {};
    prototype.getParentActivity = function() {};
    prototype.getThreads = function() {};
    prototype.isSameBook = function() {};
    prototype.unsubscribeAll = function() {};
    prototype.subscribe = function(thread, callback) {};
}, {}, {});
var UserAdapter = function() {};
UserAdapter = stjs.extend(UserAdapter, null, [], function(constructor, prototype) {
    prototype.getUser = function() {};
    prototype.login = function(callback) {};
    prototype.loginAsUser = function(username, password, callback) {};
    prototype.logout = function(callback) {};
    prototype.loggedIn = function() {};
    prototype.isSameUser = function() {};
}, {}, {});
/**
 *  @author aaron.veden@eduworks.com
 */
var StorageAdapter = function() {};
StorageAdapter = stjs.extend(StorageAdapter, null, [], function(constructor, prototype) {
    constructor.AREA_INCOMING = "Incoming";
    constructor.AREA_OUTGOING = "Outgoing";
    constructor.AREA_EVENTS = "Events";
    constructor.AREA_GENERAL = "General";
    constructor.AREA_PROFILE = "Profile";
    constructor.AREA_COMPENTENCIES = "Competencies";
    constructor.AREA_CURRENT_USER = "CurrentUser";
    constructor.AREA_CURRENT_BOOK = "CurrentBook";
    prototype.getAnnotations = function(user, thread, callback) {};
    prototype.storeCurrentUser = function(user, callback) {};
    prototype.getCurrentUser = function(callback) {};
    prototype.storeCurrentBook = function(book) {};
    prototype.getCurrentBook = function(callback) {};
    prototype.saveEvent = function(user, containerPath, event) {};
    prototype.saveEvents = function(user, containerPath, events) {};
    prototype.getEvents = function(user, containerPath, callback) {};
    prototype.getCompetencies = function(user, callback) {};
    prototype.setCompetencies = function(user, competencies) {};
    prototype.storeOutgoing = function(user, xapi) {};
    prototype.postMessage = function(user, thread, message) {};
    prototype.postMessages = function(user, thread, messages) {};
    prototype.getMessages = function(user, thread, callback) {};
    prototype.saveUserProfile = function(user) {};
    prototype.removeAnnotation = function(user, id, containerPath) {};
    prototype.removeSharedAnnotation = function(user, id) {};
    prototype.getGeneralAnnotations = function(user, containerPath, callback) {};
    prototype.getUserProfile = function(id, callback) {};
    prototype.getOutgoing = function(user, callback) {};
    prototype.clearOutgoing = function(user, toClear) {};
    prototype.saveAnnotation = function(user, containerPath, annotation) {};
    prototype.saveAnnotations = function(user, containerPath, annotations) {};
    prototype.saveGeneralAnnotation = function(user, containerPath, annotation) {};
    prototype.saveGeneralAnnotations = function(user, containerPath, annotations) {};
    prototype.getAsset = function(id, callback) {};
    prototype.setAsset = function(id, data) {};
    prototype.removeMessage = function(user, id, thread) {};
    prototype.saveQueuedReference = function(user, ref) {};
    prototype.getQueuedReference = function(user, callback) {};
    prototype.removeQueuedReference = function(user, id) {};
    prototype.removeNotification = function(user, id) {};
    prototype.getNotifications = function(user, callback) {};
    prototype.addNotification = function(user, notification) {};
    prototype.getToc = function(user, containerPath, callback) {};
    prototype.removeToc = function(user, containerPath, section, id) {};
    prototype.addToc = function(user, containerPath, data) {};
}, {}, {});
var AssetAdapter = function() {};
AssetAdapter = stjs.extend(AssetAdapter, null, [], function(constructor, prototype) {
    prototype.setHookCallback = function(callback) {};
    prototype.queue = function(ref) {};
    prototype.startSync = function() {};
    prototype.stopSync = function() {};
}, {}, {});
var SyncProcess = function() {};
SyncProcess = stjs.extend(SyncProcess, null, [], function(constructor, prototype) {
    prototype.pull = function() {};
    prototype.push = function(outgoing, callback) {};
    prototype.terminate = function() {};
}, {}, {});
var Debugger = function() {};
Debugger = stjs.extend(Debugger, null, [], function(constructor, prototype) {
    constructor.logs = null;
    constructor.debug = function(message) {
         while (Debugger.logs.length > 100)
            Debugger.logs.shift();
        Debugger.logs.push(new Date().toString() + "/" + message);
    };
}, {logs: {name: "Array", arguments: [null]}}, {});
(function() {
    Debugger.logs = [];
})();
var LauncherAdapter = function() {};
LauncherAdapter = stjs.extend(LauncherAdapter, null, [], function(constructor, prototype) {
    prototype.connect = function() {};
    prototype.close = function() {};
    prototype.setMessageCallback = function(callback) {};
}, {}, {});
var NetworkAdapter = function() {};
NetworkAdapter = stjs.extend(NetworkAdapter, null, [], function(constructor, prototype) {
    prototype.activate = function(teacher) {};
    prototype.disable = function(finished) {};
    prototype.push = function(finished) {};
}, {}, {});
var Page = function(firstVisibleCFI, lastVisibleCFI) {
    this.firstVisibleCFI = firstVisibleCFI;
    this.lastVisibleCFI = lastVisibleCFI;
};
Page = stjs.extend(Page, null, [], function(constructor, prototype) {
    prototype.firstVisibleCFI = null;
    prototype.lastVisibleCFI = null;
    prototype.toString = function() {
        return JSON.stringify(this.toObject());
    };
    prototype.toObject = function() {
        var m = {};
        m["firstCFI"] = this.firstVisibleCFI;
        m["lastCFI"] = this.lastVisibleCFI;
        return m;
    };
    constructor.fromMap = function(o) {
        return new Page(o["firstCFI"], o["lastCFI"]);
    };
}, {}, {});
var UserProfile = function(rawProfile) {
    this.lrsUrls = {};
    if (rawProfile != null) {
        var profile = (stjs.isInstanceOf(rawProfile.constructor, String) ? JSON.parse(rawProfile) : rawProfile);
        this.identity = profile["identity"];
        this.name = profile["name"];
        this.homePage = profile["homePage"];
        this.preferredName = profile["preferredName"];
        var o = profile["lrsUrls"];
        if (o != null) 
            for (var key in o) {
                var e = Endpoint.fromMap(o[key]);
                this.lrsUrls[e.url] = e;
            }
    }
    if (UserProfile.TLADemo && ((this.homePage == "") || (this.homePage == null))) {
        this.homePage = "http://adltla.usalearning.net:8081/auth/";
    } else if ((this.homePage == "") || (this.homePage == null)) 
        this.homePage = "acct:keycloak-server";
};
UserProfile = stjs.extend(UserProfile, null, [], function(constructor, prototype) {
    prototype.identity = null;
    prototype.name = null;
    prototype.homePage = null;
    prototype.preferredName = null;
    constructor.TLADemo = false;
    prototype.lrsUrls = null;
    prototype.setName = function(name) {
        this.name = name;
    };
    prototype.setPreferredName = function(name) {
        this.preferredName = name;
    };
    prototype.setHomePage = function(homePage) {
        this.homePage = homePage;
    };
    prototype.getHomePage = function() {
        return this.homePage;
    };
    prototype.getName = function() {
        return this.name;
    };
    prototype.getPreferredName = function() {
        return this.preferredName;
    };
    prototype.setIdentity = function(user) {
        this.identity = user;
    };
    prototype.getLrsUrls = function() {
        return this.lrsUrls;
    };
    prototype.generateQueryAgent = function() {
        var account = {};
        account["homePage"] = this.homePage;
        account["name"] = this.identity;
        return account;
    };
    prototype.generateAgent = function() {
        var wrapper = {};
        wrapper["name"] = this.name;
        wrapper["account"] = this.generateQueryAgent();
        return wrapper;
    };
    prototype.getIdentity = function() {
        return this.identity;
    };
    prototype.addLrsUrl = function(config) {
        this.lrsUrls[config.url] = config;
    };
    prototype.toObject = function() {
        var out = {};
        out["identity"] = this.identity;
        out["name"] = this.name;
        out["homePage"] = this.homePage;
        out["preferredName"] = this.preferredName;
        var urls = {};
        for (var key in this.lrsUrls) {
            var e = this.lrsUrls[key];
            urls[e.url] = e.toObject();
        }
        out["lrsUrls"] = urls;
        return out;
    };
    prototype.toString = function() {
        return JSON.stringify(this.toObject());
    };
}, {lrsUrls: {name: "Map", arguments: [null, "Endpoint"]}}, {});
var TimeSeriesData = function() {};
TimeSeriesData = stjs.extend(TimeSeriesData, null, [], function(constructor, prototype) {
    constructor.NAMESPACE_USERNAME = "user-";
    constructor.NAMESPACE_NOTIFICATION = "notification-";
    constructor.KEY_DOCTYPE = "docType";
    constructor.KEY_ACTIVITY_NAME = "activityName";
    constructor.KEY_ACTIVITY_DESCRIPTION = "activityDescription";
    constructor.KEY_XID = "id";
    constructor.KEY_TARGET = "target";
    constructor.KEY_TYPE = "type";
    constructor.KEY_ACTION = "action";
    constructor.KEY_ACTOR_ID = "actorId";
    constructor.KEY_ACTIVITY_ID = "activityId";
    constructor.KEY_TIMESTAMP = "timestamp";
    constructor.KEY_PARENT_ACTIVITY = "parentActivity";
    prototype.id = null;
    prototype.timestamp = null;
    prototype.parentActivity = null;
    prototype.actorId = null;
    prototype.stmt = null;
    prototype.compareTo = function(arg0) {
        var r = stjs.trunc((this.timestamp.getTime() - arg0.timestamp.getTime()));
        if (r == 0) 
            return this.id.compareTo(arg0.id);
        return r;
    };
    constructor.sort = function(data, asc) {
        if (asc) 
            data.sort(function(a, b) {
                return a.compareTo(b);
            });
         else 
            data.sort(function(a, b) {
                return -a.compareTo(b);
            });
        return data;
    };
    prototype.toObject = function() {
        var result = {};
        result[TimeSeriesData.KEY_XID] = this.id;
        result[TimeSeriesData.KEY_PARENT_ACTIVITY] = this.parentActivity;
        result[TimeSeriesData.KEY_ACTOR_ID] = this.parentActivity;
        result[TimeSeriesData.KEY_TIMESTAMP] = EcDate.toISOString(this.timestamp);
        return result;
    };
    prototype.toString = function() {
        return JSON.stringify(this.toObject());
    };
}, {timestamp: "Date", stmt: {name: "Map", arguments: [null, "Object"]}}, {});
var XApiUtils = function() {};
XApiUtils = stjs.extend(XApiUtils, null, [], function(constructor, prototype) {
    constructor.sortNewest = function(xapis) {
        xapis.sort(function(a, b) {
            var v = new Date(b["timestamp"]).getTime() - new Date(a["timestamp"]).getTime();
            return v > 0 ? 1 : v != 0 ? -1 : (a["id"]).compareTo(b["id"]);
        });
    };
    constructor.sortNewestTimeSeries = function(xapis) {
        xapis.sort(function(a, b) {
            return a.compareTo(b);
        });
    };
    constructor.sortXApiNewest = function(xapis) {
        xapis.sort(function(a, b) {
            var v = new Date(b["timestamp"]).getTime() - new Date(a["timestamp"]).getTime();
            return v > 0 ? 1 : v != 0 ? -1 : (a["id"]).compareTo(b["id"]);
        });
    };
    constructor.addTimestamp = function(xapi) {
        if (xapi["timestamp"] == null) 
            xapi["timestamp"] = EcDate.toISOString(new Date());
        if (xapi["id"] == null) 
            xapi.generateId();
    };
    constructor.getTimestamp = function(xapi) {
        return new Date(xapi["timestamp"]);
    };
    constructor.getActorId = function(xapi) {
        var actorObj = xapi["actor"];
        var account = actorObj["account"];
        if (account != null) {
            return account["name"];
        } else {
            return actorObj["name"];
        }
    };
    constructor.getActorName = function(xapi) {
        var actorObj = xapi["actor"];
        return actorObj["name"];
    };
    constructor.getObjectId = function(xapi) {
        return (xapi["object"])["id"];
    };
    constructor.getVerb = function(xapi) {
        return ((xapi["verb"])["display"])["en-US"];
    };
    constructor.getObjectName = function(xapi) {
        var object = xapi["object"];
        var definition = object["definition"];
        if (definition != null) {
            var name = definition["name"];
            if (name != null) 
                return name["en-US"];
        }
        return null;
    };
    constructor.getObjectDescription = function(xapi) {
        var object = xapi["object"];
        var definition = object["definition"];
        if (definition != null) {
            var name = definition["description"];
            if (name != null) 
                return name["en-US"];
        }
        return null;
    };
    constructor.getParentActivity = function(xapi) {
        return (((xapi["context"])["contextActivities"])["parent"])[0]["id"];
    };
    constructor.parseXApiArray = function(s) {
        var xapis = JSON.parse(s);
        return xapis == null ? [] : xapis;
    };
    constructor.parseXApiMap = function(s) {
        if ((s == null) || (s.length == 0)) 
            return {};
        var map = JSON.parse(s);
        return map == null ? {} : map;
    };
    constructor.pathToFilename = function(path) {
        var filename = path.substring(path.lastIndexOf("/") + 1);
        return filename;
    };
}, {}, {});
var NativeActivityAdapter = function() {};
NativeActivityAdapter = stjs.extend(NativeActivityAdapter, null, [ActivityAdapter], function(constructor, prototype) {
    prototype.unsubscribeAll = function() {};
    prototype.subscribe = function(thread, callback) {};
    prototype.getToc = function(callback) {};
    prototype.openBook = function(containerPath, callback) {};
    prototype.isSameBook = function() {
        return false;
    };
    prototype.getBook = function() {
        return null;
    };
    prototype.getPreviousBook = function() {
        return null;
    };
    prototype.getThreads = function() {
        return null;
    };
    prototype.clearParentActivity = function() {};
    prototype.startParentActivity = function(activity) {};
    prototype.getParentActivity = function() {
        return null;
    };
    prototype.setDirectMessageHandler = function(directMessageHandler) {};
    prototype.hookDirectMessages = function() {};
    prototype.initializeToc = function(data) {};
    prototype.getActivityId = function() {
        return null;
    };
    prototype.retrieveActivityListing = function(callback) {};
    prototype.hasActivityListing = function() {
        return false;
    };
}, {}, {});
var NativeAssetAdapter = function() {};
NativeAssetAdapter = stjs.extend(NativeAssetAdapter, null, [AssetAdapter], function(constructor, prototype) {
    prototype.queue = function(ref) {};
    prototype.startSync = function() {};
    prototype.stopSync = function() {};
    prototype.setHookCallback = function(callback) {};
}, {}, {});
var LocalLauncherAdapter = function(userManager, activityManager, xapiGenerator) {
    if (window.SocketConnectionHandler != null) {
        this.connectionHandler = new window.SocketConnectionHandler();
        this.connectionHandler.setMessageCallback(function(message) {
            var parameter = message["parameter"];
            if ((parameter != null) && parameter.startsWith("pebl://")) {
                if (window.ReadiumInterop != null) {
                    var pack = [];
                    pack.push("openBookWithCfi");
                    var payload = {};
                    var cfi = "";
                    var filename = "";
                    var idref = "";
                    var queryPosition = parameter.indexOf("?");
                    if (queryPosition != -1) {
                        var queryParts = (parameter.substring(queryPosition + 1).split("&"));
                        for (var i = 0; i < queryParts.length; i++) {
                            var param = queryParts[i];
                            if (param.startsWith("cfi=")) {
                                cfi = decodeURIComponent(param.substring("cfi=".length));
                            }
                            if (param.startsWith("idref=")) {
                                idref = decodeURIComponent(param.substring("idref=".length));
                            }
                        }
                        filename = parameter.substring(0, parameter.indexOf("?"));
                    } else 
                        filename = parameter;
                    if (cfi != "") {
                        var sI = cfi.indexOf("[");
                        var eI = cfi.indexOf("]");
                        if ((sI != -1) && (eI != -1)) 
                            idref = cfi.substring(sI + 1, eI);
                    }
                    filename = filename.substring(7);
                    payload["filename"] = filename;
                    if (cfi != "") 
                        payload["cfi"] = cfi;
                    if (idref != "") 
                        payload["idref"] = idref;
                    pack.push(JSON.stringify(payload));
                    window.ReadiumInterop.postHarnessMessage("readium", pack);
                }
            }
        });
    }
    this.userManager = userManager;
};
LocalLauncherAdapter = stjs.extend(LocalLauncherAdapter, null, [LauncherAdapter], function(constructor, prototype) {
    prototype.connectionHandler = null;
    prototype.userManager = null;
    prototype.connect = function() {
        if (window.SocketConnectionHandler != null) {
            var up = this.userManager.getUser();
            if ((up.getIdentity() != "guest") && (up.getPreferredName() != null) && (!this.connectionHandler.connected)) {
                this.connectionHandler.connect(up.getPreferredName(), up.getName(), "PEBLTablet");
            }
        }
    };
    prototype.close = function() {
        if (window.SocketConnectionHandler != null) {
            this.connectionHandler.close();
        }
    };
    prototype.setMessageCallback = function(callback) {
        if (window.SocketConnectionHandler != null) {
            this.connectionHandler.setMessageCallback(callback);
        }
    };
}, {connectionHandler: "window.SocketConnectionHandler", userManager: "UserAdapter"}, {});
var NativeNetworkAdapter = function() {};
NativeNetworkAdapter = stjs.extend(NativeNetworkAdapter, null, [NetworkAdapter], function(constructor, prototype) {
    prototype.push = function(finished) {};
    prototype.disable = function(finished) {};
    prototype.activate = function(teacher) {};
}, {}, {});
var LLUserAdapter = function(storage) {
    this.storage = storage;
    this.isLoggedIn = false;
    this.sameUser = false;
    this.profile = null;
    this.loginUserNameSelect = "loginUserNameSelector";
};
LLUserAdapter = stjs.extend(LLUserAdapter, null, [UserAdapter], function(constructor, prototype) {
    prototype.storage = null;
    prototype.isLoggedIn = false;
    prototype.sameUser = null;
    prototype.profile = null;
    prototype.loginUserNameSelect = null;
    prototype.loginCallback = null;
    constructor.guest = null;
    prototype.getUser = function() {
        if (this.isLoggedIn) 
            return this.profile;
        return LLUserAdapter.guest;
    };
    prototype.login = function(callback) {
        this.loginCallback = callback;
        var self = this;
        this.storage.getCurrentUser(function(currentUser) {
            if (window.Lightbox != null) {
                if ((currentUser == "") || (currentUser == "null") || (currentUser == null) || (currentUser == "guest")) {
                    window.Lightbox.createLoginForm();
                    var loginButton = window.document.getElementById("loginUserNameSubmit");
                    loginButton.onclick = function(event) {
                        var newUser = (window.document.getElementById(self.loginUserNameSelect)).value;
                        var MCISToken = "M2E5ZDMzMjNlMDIyODQwNzRhNjI2ODQzNWNlNGM1MGFlNWYzNjZmODpkOWZhZDUwZmIyY2VmNTE1MjMzZmRiNzc1ODhkMzkzMjhhNTliYzQ5";
                        var TBSToken = "MjM0ZTBhY2Y0OWVlZjNiYTBmY2VjOWM0N2FiNjc4ZDRiMDJmNjY0NzpjNTI2YTUwNDIwZDM5MTEyMDZkNGJhYTZhZjZhMTlkMzk4MGIwODFj";
                        var CDETToken = "M2IyOGE0YzU3YWUxM2Y1NTNiNzUzNWM5OTM3NGRhNzVmNGNhNDAzNjpiODMxNTI1NmUzN2JjZTlhYjUwMmZhNmI4ZmE2YTExODkzYzZmMmUy";
                        var SNCOAToken = "YjdjZDYyNGFkYzFiZjI4ZDE4MGZkZmExMjNjZTM2ZmI3MTNmYjVjMzo5ODMxNTQ3ZTkwZmFhMDRmMmIwNGZiOWJjZWY4MDZhZTZlNzRiNGM2";
                        var MSTPToken = "MGFmYjM5ZWI2NTAzMWRjNzI5NzVkZmIyZWYzMDE1NzUwY2U1ZWNiZDpmYzM5OTllN2ZiMjM4OTQ4Zjc0MWNkZmUzZWU2MDQwNWJiNTFlZmU2";
                        var EWSToken = "Yzk3M2I3N2I2MDQ5ZjAwMmFjYTRmNTcxZjQxMDhiMjc2YzY5ZTUxOTpkMzRhMjBjZDVkYTYwOGZkZDk3ODI3MjQxNDZjZjMwMTNjMGRmY2Qw";
                        var MCSCTToken = "MTRiMTQ0NjRiMGEyYmNlZDY4NzQwN2JmMGZlZGIwZjViNjE0YzBlNzo1ZTRiMTFhNzBmZDkyMjE3ZDE1NDUxYzZlNjdlZjBiYjc0MGZiMzMy";
                        window.Lightbox.getLRSURL(function(lrsURL) {
                            var GlobalEndpoint = lrsURL;
                            window.Lightbox.getLRSToken(function(lrsToken) {
                                var GlobalToken = lrsToken;
                                window.Lightbox.getLRSPassword(function(lrsPassword) {
                                    var GlobalPassword = lrsPassword;
                                    window.Lightbox.getLRSUsername(function(lrsUsername) {
                                        var GlobalUsername = lrsUsername;
                                        self.isLoggedIn = true;
                                        self.storage.getUserProfile(newUser, function(profile) {
                                            self.profile = null;
                                            self.sameUser = false;
                                            if (self.profile == null) {
                                                self.profile = new UserProfile(null);
                                                self.profile.setIdentity(newUser);
                                                self.profile.setName(newUser);
                                                self.profile.setPreferredName(newUser);
                                                var endpoint = new Endpoint();
                                                if (GlobalUsername != null) 
                                                    endpoint.username = GlobalUsername;
                                                 else 
                                                    endpoint.username = newUser;
                                                var token;
                                                if (newUser.substring(0, 4) == "MCIS") 
                                                    token = MCISToken;
                                                 else if (newUser.substring(0, 3) == "TBS") 
                                                    token = TBSToken;
                                                 else if (newUser.substring(0, 4) == "CDET") 
                                                    token = CDETToken;
                                                 else if (newUser.substring(0, 5) == "SNCOA") 
                                                    token = SNCOAToken;
                                                 else if (newUser.substring(0, 4) == "MSTP") 
                                                    token = MSTPToken;
                                                 else if (newUser.substring(0, 3) == "EWS") 
                                                    token = EWSToken;
                                                 else if (newUser.substring(0, 5) == "MCSCT") 
                                                    token = MCSCTToken;
                                                 else 
                                                    token = GlobalToken;
                                                endpoint.token = token;
                                                endpoint.password = GlobalPassword;
                                                endpoint.url = GlobalEndpoint;
                                                self.profile.addLrsUrl(endpoint);
                                                self.storage.saveUserProfile(self.profile);
                                                if (window.FakeCompetency != null) {
                                                    var result = window.FakeCompetency.getCompetencies(newUser);
                                                    var collapsed = {};
                                                    for (var i = 0; i < result.length; i++) {
                                                        var pair = result[i];
                                                        var obj = pair[1];
                                                        var temp = pair[0]["url"];
                                                        collapsed[temp.substring(0, temp.lastIndexOf("/"))] = obj;
                                                    }
                                                    self.storage.setCompetencies(self.profile, collapsed);
                                                }
                                            }
                                            self.storage.storeCurrentUser(self.profile, function() {
                                                window.Lightbox.close();
                                                if (callback != null) 
                                                    callback();
                                            });
                                        });
                                    });
                                });
                            });
                        });
                        return false;
                    };
                } else {
                    self.storage.getUserProfile(currentUser, function(profile) {
                        self.profile = profile;
                        self.isLoggedIn = true;
                        self.sameUser = true;
                        self.storage.storeCurrentUser(profile, callback);
                    });
                }
            }
        });
    };
    prototype.loginAsUser = function(username, password, callback) {
        this.loginCallback = callback;
        var self = this;
        this.storage.getCurrentUser(function(currentUser) {
            if (window.Lightbox != null) {
                if ((currentUser == "") || (currentUser == "null") || (currentUser == null) || (currentUser == "guest")) {
                    var newUser = username;
                    window.Lightbox.getLRSURL(function(lrsURL) {
                        var GlobalEndpoint = lrsURL;
                        window.Lightbox.getLRSToken(function(lrsToken) {
                            var GlobalToken = lrsToken;
                            window.Lightbox.getLRSPassword(function(lrsPassword) {
                                var GlobalPassword = lrsPassword;
                                self.isLoggedIn = true;
                                self.storage.getUserProfile(newUser, function(profile) {
                                    self.profile = profile;
                                    self.sameUser = false;
                                    if (self.profile == null) {
                                        self.profile = new UserProfile(null);
                                        self.profile.setIdentity(newUser);
                                        self.profile.setName(newUser);
                                        self.profile.setPreferredName(newUser);
                                        var endpoint = new Endpoint();
                                        endpoint.username = newUser;
                                        endpoint.token = GlobalToken;
                                        endpoint.password = GlobalPassword;
                                        endpoint.url = GlobalEndpoint;
                                        self.profile.addLrsUrl(endpoint);
                                        self.storage.saveUserProfile(self.profile);
                                        if (window.FakeCompetency != null) {
                                            var result = window.FakeCompetency.getCompetencies(newUser);
                                            var collapsed = {};
                                            for (var i = 0; i < result.length; i++) {
                                                var pair = result[i];
                                                var obj = pair[1];
                                                var temp = pair[0]["url"];
                                                collapsed[temp.substring(0, temp.lastIndexOf("/"))] = obj;
                                            }
                                            self.storage.setCompetencies(self.profile, collapsed);
                                        }
                                    }
                                    self.storage.storeCurrentUser(self.profile, function() {
                                        if (callback != null) 
                                            callback();
                                    });
                                });
                            });
                        });
                    });
                } else {
                    self.storage.getUserProfile(currentUser, function(profile) {
                        self.profile = profile;
                        self.isLoggedIn = true;
                        self.sameUser = true;
                        self.storage.storeCurrentUser(profile, callback);
                    });
                }
            }
        });
    };
    prototype.logout = function(callback) {
        var self = this;
        this.isLoggedIn = false;
        this.storage.storeCurrentUser(LLUserAdapter.guest, function() {
            self.profile = null;
            self.login(self.loginCallback);
        });
    };
    prototype.loggedIn = function() {
        return this.isLoggedIn;
    };
    prototype.isSameUser = function() {
        return this.sameUser;
    };
}, {storage: "StorageAdapter", profile: "UserProfile", loginCallback: "Callback0", guest: "UserProfile"}, {});
(function() {
    LLUserAdapter.guest = new UserProfile(null);
    LLUserAdapter.guest.setName("guest");
    LLUserAdapter.guest.setIdentity("guest");
})();
var MoodleUserAdapter = function(storage) {
    this.storage = storage;
    this.isLoggedIn = false;
    this.sameUser = false;
    this.profile = null;
    this.loginUserNameSelector = "loginUserName";
    this.loginPasswordSelector = "loginPassword";
};
MoodleUserAdapter = stjs.extend(MoodleUserAdapter, null, [UserAdapter], function(constructor, prototype) {
    constructor.MOODLE_HOST = null;
    constructor.MOODLE_WEBSERVICE = null;
    constructor.MOODLE_WEBSERVICE_GET_INFO = null;
    constructor.MOODLE_LOGIN = null;
    constructor.MOODLE_LOGIN_PASSWORD = null;
    constructor.MOODLE_GET_INFO_ENDPOINT = null;
    constructor.MOODLE_LOGIN_ENDPOINT = null;
    prototype.storage = null;
    prototype.isLoggedIn = false;
    prototype.sameUser = null;
    prototype.profile = null;
    prototype.loginUserNameSelector = null;
    prototype.loginPasswordSelector = null;
    prototype.loginCallback = null;
    prototype.loginRequest = null;
    prototype.getInfoRequest = null;
    constructor.guest = null;
    prototype.makeLoginUrl = function(username, password) {
        return MoodleUserAdapter.MOODLE_LOGIN_ENDPOINT + encodeURIComponent(username) + MoodleUserAdapter.MOODLE_LOGIN_PASSWORD + encodeURIComponent(password);
    };
    prototype.makeGetInfoUrl = function(token) {
        return MoodleUserAdapter.MOODLE_GET_INFO_ENDPOINT + token;
    };
    prototype.getUser = function() {
        if (this.isLoggedIn) 
            return this.profile;
        return MoodleUserAdapter.guest;
    };
    prototype.login = function(callback) {
        this.loginRequest = new XMLHttpRequest();
        this.loginCallback = callback;
        var self = this;
        this.storage.getCurrentUser(function(currentUser) {
            if (window.Lightbox != null) {
                if ((currentUser == "") || (currentUser == "null") || (currentUser == null) || (currentUser == "guest")) {
                    window.Lightbox.createLoginFormWithFields();
                    var loginButton = window.document.getElementById("loginUserNameSubmit");
                    loginButton.onclick = function(event) {
                        var user = (window.document.getElementById(self.loginUserNameSelector)).value;
                        var password = (window.document.getElementById(self.loginPasswordSelector)).value;
                        self.loginRequest.open("POST", self.makeLoginUrl(user, password), true);
                        self.loginRequest.onreadystatechange = function() {
                            if (self.loginRequest.readyState == 4) {
                                if (self.loginRequest.status == 200) {
                                    var response = JSON.parse(self.loginRequest.responseText);
                                    if (response["error"] == null) {
                                        self.getInfoRequest = new XMLHttpRequest();
                                        self.getInfoRequest.open("POST", self.makeGetInfoUrl(response["token"]), true);
                                        self.getInfoRequest.onreadystatechange = function() {
                                            if (self.getInfoRequest.readyState == 4) {
                                                var response = JSON.parse(self.getInfoRequest.responseText);
                                                if (response["error"] == null) {
                                                    self.isLoggedIn = true;
                                                    self.storage.getUserProfile(response["username"], function(profile) {
                                                        self.profile = profile;
                                                        if (self.profile == null) {
                                                            self.profile = new UserProfile(null);
                                                            self.profile.setIdentity(response["username"]);
                                                            self.profile.setName(response["fullname"]);
                                                            self.profile.setHomePage(response["siteurl"]);
                                                            self.profile.setPreferredName(response["fullname"]);
                                                            var endpoint = new Endpoint();
                                                            endpoint.username = "pebl.plug";
                                                            endpoint.password = "#PEBLTest67";
                                                            endpoint.url = "https://lrs.peblproject.com/xapi/";
                                                            self.profile.addLrsUrl(endpoint);
                                                            self.storage.saveUserProfile(self.profile);
                                                            if (window.FakeCompetency != null) {
                                                                var result = window.FakeCompetency.getCompetencies(currentUser);
                                                                if (result != null) {
                                                                    var collapsed = {};
                                                                    for (var i = 0; i < result.length; i++) {
                                                                        var pair = result[i];
                                                                        var obj = pair[1];
                                                                        var temp = pair[0]["url"];
                                                                        collapsed[temp.substring(0, temp.lastIndexOf("/"))] = obj;
                                                                    }
                                                                    self.storage.setCompetencies(self.profile, collapsed);
                                                                }
                                                            }
                                                        }
                                                        self.storage.getCurrentUser(function(id) {
                                                            self.sameUser = id == self.profile.getIdentity();
                                                            self.storage.storeCurrentUser(self.profile, function() {
                                                                window.location = window.location;
                                                                if (callback != null) 
                                                                    callback();
                                                                window.Lightbox.close();
                                                            });
                                                        });
                                                    });
                                                }
                                            }
                                        };
                                        self.getInfoRequest.send();
                                    } else {
                                        self.isLoggedIn = false;
                                        var e = window.document.getElementById("loginError");
                                        e.setAttribute("style", "color:red");
                                    }
                                }
                            }
                        };
                        self.loginRequest.send();
                        return true;
                    };
                } else {
                    self.storage.getUserProfile(currentUser, function(profile) {
                        self.profile = profile;
                        self.isLoggedIn = true;
                        self.sameUser = true;
                        self.storage.storeCurrentUser(profile, callback);
                    });
                }
            }
        });
    };
    prototype.loginAsUser = function(username, password, callback) {};
    prototype.logout = function(callback) {
        this.isLoggedIn = false;
        var self = this;
        this.storage.storeCurrentUser(MoodleUserAdapter.guest, function() {
            self.profile = null;
            window.location = window.location;
            self.login(self.loginCallback);
        });
    };
    prototype.loggedIn = function() {
        return this.isLoggedIn;
    };
    prototype.isSameUser = function() {
        return this.sameUser;
    };
}, {storage: "StorageAdapter", profile: "UserProfile", loginCallback: "Callback0", loginRequest: "XMLHttpRequest", getInfoRequest: "XMLHttpRequest", guest: "UserProfile"}, {});
(function() {
    MoodleUserAdapter.guest = new UserProfile(null);
    MoodleUserAdapter.guest.setName("guest");
    MoodleUserAdapter.guest.setIdentity("guest");
    MoodleUserAdapter.MOODLE_HOST = "http://extension.eduworks.com/moodle/";
    MoodleUserAdapter.MOODLE_WEBSERVICE = "webservice/rest/server.php";
    MoodleUserAdapter.MOODLE_WEBSERVICE_GET_INFO = "?wsfunction=core_webservice_get_site_info&moodlewsrestformat=json&wstoken=";
    MoodleUserAdapter.MOODLE_LOGIN = "login/token.php?service=PEBLLogin&username=";
    MoodleUserAdapter.MOODLE_LOGIN_PASSWORD = "&password=";
    MoodleUserAdapter.MOODLE_GET_INFO_ENDPOINT = MoodleUserAdapter.MOODLE_HOST + MoodleUserAdapter.MOODLE_WEBSERVICE + MoodleUserAdapter.MOODLE_WEBSERVICE_GET_INFO;
    MoodleUserAdapter.MOODLE_LOGIN_ENDPOINT = MoodleUserAdapter.MOODLE_HOST + MoodleUserAdapter.MOODLE_LOGIN;
})();
var IndexedDBStorageAdapter = function(callback) {
    this.interop = new IndexedDBInterop(callback);
};
IndexedDBStorageAdapter = stjs.extend(IndexedDBStorageAdapter, null, [StorageAdapter], function(constructor, prototype) {
    prototype.interop = null;
    constructor.processMapToXApi = function(records, filter) {
        var result = [];
        for (var i = 0; i < records.length; i++) {
            var xapi = new ADL.XAPIStatement(records[i]);
            for (var x = 0; x < filter.length; x++) 
                delete xapi[filter[x]];
            result.push(xapi);
        }
        return result;
    };
    prototype.getAnnotations = function(user, thread, callback) {
        this.interop.getAnnotations(user, thread, function(records) {
            callback(IndexedDBStorageAdapter.processMapToXApi(records, ["identity", "containerPath"]));
        });
    };
    prototype.storeCurrentUser = function(user, callback) {
        this.interop.storeCurrentUser(user, callback);
    };
    prototype.getCurrentUser = function(callback) {
        this.interop.getCurrentUser(callback);
    };
    prototype.storeCurrentBook = function(book) {
        this.interop.storeCurrentBook(book);
    };
    prototype.getCurrentBook = function(callback) {
        this.interop.getCurrentBook(callback);
    };
    prototype.saveEvent = function(user, containerPath, event) {
        this.interop.saveEvent(user, containerPath, event);
    };
    prototype.saveEvents = function(user, containerPath, events) {
        this.interop.saveEvents(user, containerPath, events);
    };
    prototype.getEvents = function(user, containerPath, callback) {
        this.interop.getEvents(user, containerPath, function(records) {
            callback(IndexedDBStorageAdapter.processMapToXApi(records, ["identity", "containerPath"]));
        });
    };
    prototype.getCompetencies = function(user, callback) {
        this.interop.getCompetencies(user, callback);
    };
    prototype.setCompetencies = function(user, competencies) {
        this.interop.setCompetencies(user, competencies);
    };
    prototype.storeOutgoing = function(user, xapi) {
        this.interop.storeOutgoing(user, xapi);
    };
    prototype.postMessage = function(user, thread, message) {
        this.interop.postMessage(user, thread, message);
    };
    prototype.postMessages = function(user, thread, messages) {
        this.interop.postMessages(user, thread, messages);
    };
    prototype.getMessages = function(user, thread, callback) {
        this.interop.getMessages(user, thread, function(records) {
            callback(IndexedDBStorageAdapter.processMapToXApi(records, ["identity", "thread"]));
        });
    };
    prototype.saveUserProfile = function(user) {
        this.interop.saveUserProfile(user);
    };
    prototype.removeAnnotation = function(user, id, containerPath) {
        this.interop.removeAnnotation(user, id);
    };
    prototype.removeSharedAnnotation = function(user, id) {
        this.interop.removeSharedAnnotation(user, id);
    };
    prototype.getGeneralAnnotations = function(user, containerPath, callback) {
        this.interop.getGeneralAnnotations(user, containerPath, function(records) {
            callback(IndexedDBStorageAdapter.processMapToXApi(records, ["containerPath"]));
        });
    };
    prototype.getUserProfile = function(id, callback) {
        this.interop.getUserProfile(id, function(record) {
            callback((record == null) ? null : new UserProfile(record));
        });
    };
    prototype.getOutgoing = function(user, callback) {
        this.interop.getOutgoing(user, function(records) {
            callback(IndexedDBStorageAdapter.processMapToXApi(records, ["identity", "containerPath", "thread", "url"]));
        });
    };
    prototype.clearOutgoing = function(user, toClear) {
        this.interop.clearOutgoing(user, toClear);
    };
    prototype.saveAnnotation = function(user, containerPath, annotation) {
        this.interop.saveAnnotation(user, containerPath, annotation);
    };
    prototype.saveAnnotations = function(user, containerPath, annotations) {
        this.interop.saveAnnotations(user, containerPath, annotations);
    };
    prototype.saveGeneralAnnotation = function(user, containerPath, annotation) {
        this.interop.saveGeneralAnnotation(user, containerPath, annotation);
    };
    prototype.saveGeneralAnnotations = function(user, containerPath, annotations) {
        this.interop.saveGeneralAnnotations(user, containerPath, annotations);
    };
    prototype.getAsset = function(id, callback) {
        this.interop.getAsset(id, callback);
    };
    prototype.setAsset = function(id, data) {
        this.interop.saveAsset(id, data);
    };
    prototype.saveQueuedReference = function(user, ref) {
        this.interop.saveQueuedReference(user, ref);
    };
    prototype.getQueuedReference = function(user, callback) {
        this.interop.getQueuedReference(user, callback);
    };
    prototype.removeQueuedReference = function(user, id) {
        this.interop.removeQueuedReference(user, id);
    };
    prototype.removeNotification = function(user, id) {
        this.interop.removeNotification(user, id);
    };
    prototype.getNotifications = function(user, callback) {
        this.interop.getNotifications(user, callback);
    };
    prototype.addNotification = function(user, notification) {
        this.interop.addNotification(user, notification);
    };
    prototype.getToc = function(user, containerPath, callback) {
        this.interop.getToc(user, containerPath, callback);
    };
    prototype.removeToc = function(user, containerPath, section, id) {
        this.interop.removeToc(user, containerPath, section, id);
    };
    prototype.addToc = function(user, containerPath, data) {
        this.interop.addToc(user, containerPath, data);
    };
    prototype.removeMessage = function(user, id, thread) {
        this.interop.removeMessage(id);
    };
}, {interop: "IndexedDBInterop"}, {});
var OpenIDUserAdapter = function(storage) {
    this.errored = function() {};
    this.storage = storage;
    this.isLoggedIn = false;
    this.sameUser = false;
};
OpenIDUserAdapter = stjs.extend(OpenIDUserAdapter, null, [UserAdapter], function(constructor, prototype) {
    prototype.storage = null;
    prototype.isLoggedIn = false;
    prototype.authChannel = null;
    prototype.profile = null;
    prototype.sameUser = null;
    prototype.errored = null;
    constructor.guest = null;
    prototype.getUser = function() {
        if (this.isLoggedIn) 
            return this.profile;
        return OpenIDUserAdapter.guest;
    };
    prototype.isSameUser = function() {
        return this.sameUser;
    };
    prototype.handleProfile = function(userId, loginCallback) {
        var self = this;
        return function(profile) {
            if (OpenIDUserAdapter.guest.getIdentity().equals(userId)) {
                self.isLoggedIn = false;
                if (loginCallback != null) {
                    loginCallback();
                }
                return;
            }
            self.profile = profile;
            if (self.profile == null) {
                self.profile = new UserProfile(null);
                self.profile.setIdentity(userId);
                self.profile.setName(userId.substring(userId.lastIndexOf("/") + 1));
                self.profile.setPreferredName(userId.substring(userId.lastIndexOf("/") + 1));
                self.profile.setHomePage("https://people.extension.org");
                var endpoint = new Endpoint();
                endpoint.token = "ZmI0YmRkZmM5Yzc2NzM2Mjg5MmUzOWI2NjUyZmM3YzgwZDcxMGMzZDowNGNiNDJmNTgzODZkN2ZkMDgzNGJmMDcwMmRjMDFjY2I0YzVkNWRi";
                endpoint.url = "https://lrs.peblproject.com/";
                self.profile.addLrsUrl(endpoint);
                self.storage.saveUserProfile(self.profile);
            }
            self.storage.getCurrentUser(function(storedId) {
                self.sameUser = storedId == self.profile.getIdentity();
                self.storage.storeCurrentUser(self.profile, function() {
                    if (loginCallback != null) 
                        loginCallback();
                });
            });
        };
    };
    prototype.login = function(loginCallback) {
        var self = this;
        this.storage.getCurrentUser(function(storedId) {
            if (storedId != null) {
                self.isLoggedIn = true;
                self.storage.getUserProfile(storedId, self.handleProfile(storedId, loginCallback));
            } else 
                window.Lightbox.openIDLogin();
        });
    };
    prototype.loginAsUser = function(username, password, callback) {
        if (username != "") {
            this.isLoggedIn = true;
            this.storage.getUserProfile(username, this.handleProfile(username, callback));
        }
    };
    prototype.logout = function(callback) {
        var self = this;
        this.isLoggedIn = false;
        this.storage.storeCurrentUser(OpenIDUserAdapter.guest, function() {
            self.profile = null;
            var e = window.document.getElementById("loginIFrame");
            if (e != null) {
                (e).src = "https://people.extension.org/signout";
            }
            if (callback != null) {
                callback();
            }
        });
    };
    prototype.loggedIn = function() {
        return this.isLoggedIn;
    };
}, {storage: "StorageAdapter", authChannel: "Keycloak", profile: "UserProfile", errored: "Callback0", guest: "UserProfile"}, {});
(function() {
    OpenIDUserAdapter.guest = new UserProfile(null);
    OpenIDUserAdapter.guest.setName("guest");
    OpenIDUserAdapter.guest.setIdentity("guest");
})();
var OpenIDConnectUserAdapter = function(storage) {
    this.errored = function() {};
    this.storage = storage;
    this.isLoggedIn = false;
    this.sameUser = false;
};
OpenIDConnectUserAdapter = stjs.extend(OpenIDConnectUserAdapter, null, [UserAdapter], function(constructor, prototype) {
    prototype.storage = null;
    prototype.isLoggedIn = false;
    prototype.authChannel = null;
    prototype.profile = null;
    prototype.sameUser = null;
    prototype.errored = null;
    constructor.guest = null;
    prototype.getUser = function() {
        if (this.isLoggedIn) 
            return this.profile;
        return OpenIDConnectUserAdapter.guest;
    };
    prototype.isSameUser = function() {
        return this.sameUser;
    };
    prototype.handleProfile = function(userId, loginCallback) {
        var self = this;
        return function(profile) {
            self.profile = profile;
            if (self.profile == null) {
                self.profile = new UserProfile(null);
                self.profile.setIdentity(userId);
                self.profile.setName(self.authChannel.idTokenParsed["given_name"] + " " + self.authChannel.idTokenParsed["family_name"]);
                self.profile.setPreferredName(self.authChannel.idTokenParsed["preferred_username"]);
                var endpoint = new Endpoint();
                endpoint.token = "NGEyMTFmNzY5MDkyMmVlZmYyM2VlZGEzNjk2YWFkZTcyZDM5NWE4NjozYjljZjY1ZDNkZjY1ZmY3ZGI1YjRjNjhiYzhlYTBiODY5MWZiZDc5";
                endpoint.url = "http://lrs.peblproject.com/data/xapi/";
                self.profile.addLrsUrl(endpoint);
                self.storage.saveUserProfile(self.profile);
            }
            self.storage.getCurrentUser(function(storedId) {
                self.sameUser = storedId == self.profile.getIdentity();
                self.storage.storeCurrentUser(self.profile, function() {
                    if (loginCallback != null) 
                        loginCallback();
                });
            });
        };
    };
    prototype.login = function(loginCallback) {
        var self = this;
        var config = {};
        config["realm"] = "fluent";
        config["url"] = "https://people.extension.org/sigin";
        config["clientId"] = "pebl";
        var secret = {};
        secret["secret"] = "3ab9aad6-631f-40ec-a60d-3ef131b4b77a";
        config["credentials"] = secret;
        var initConfig = {};
        initConfig["onLoad"] = "login-required";
        initConfig["flow"] = "implicit";
        this.authChannel = new Keycloak(config);
        var didLogin = function(authorized) {
            self.isLoggedIn = authorized;
            var userId = self.authChannel.idTokenParsed["sub"];
            self.storage.getUserProfile(userId, self.handleProfile(userId, loginCallback));
        };
        this.authChannel.init(initConfig).success(didLogin).error(this.errored);
    };
    prototype.loginAsUser = function(username, password, callback) {};
    prototype.logout = function(callback) {
        var self = this;
        var options = {};
        options["redirectUri"] = window.location.href;
        this.isLoggedIn = false;
        this.storage.storeCurrentUser(OpenIDConnectUserAdapter.guest, function() {
            self.profile = null;
            if (self.authChannel != null) 
                self.authChannel.logout(options);
        });
    };
    prototype.loggedIn = function() {
        return this.isLoggedIn;
    };
}, {storage: "StorageAdapter", authChannel: "Keycloak", profile: "UserProfile", errored: "Callback0", guest: "UserProfile"}, {});
(function() {
    OpenIDConnectUserAdapter.guest = new UserProfile(null);
    OpenIDConnectUserAdapter.guest.setName("guest");
    OpenIDConnectUserAdapter.guest.setIdentity("guest");
})();
var ADLDemoUserAdapter = function(storage) {
    this.storage = storage;
    this.isLoggedIn = false;
    this.sameUser = false;
    this.profile = null;
    this.loginUserNameSelect = "loginUserNameSelector";
};
ADLDemoUserAdapter = stjs.extend(ADLDemoUserAdapter, null, [UserAdapter], function(constructor, prototype) {
    prototype.storage = null;
    prototype.isLoggedIn = false;
    prototype.sameUser = null;
    prototype.profile = null;
    prototype.loginUserNameSelect = null;
    prototype.loginCallback = null;
    constructor.guest = null;
    prototype.getUser = function() {
        if (this.isLoggedIn) 
            return this.profile;
        return ADLDemoUserAdapter.guest;
    };
    prototype.login = function(callback) {
        this.loginCallback = callback;
        var self = this;
        this.storage.getCurrentUser(function(currentUser) {
            if (window.Lightbox != null) {
                if ((currentUser == "") || (currentUser == "null") || (currentUser == null) || (currentUser == "guest")) {
                    window.Lightbox.createLoginForm();
                    var loginButton = window.document.getElementById("loginUserNameSubmit");
                    loginButton.onclick = function(event) {
                        var newUser = (window.document.getElementById(self.loginUserNameSelect)).value;
                        self.isLoggedIn = true;
                        self.storage.getUserProfile(newUser, function(profile) {
                            self.profile = profile;
                            self.sameUser = false;
                            if (self.profile == null) {
                                self.profile = new UserProfile(null);
                                self.profile.setIdentity(newUser);
                                self.profile.setName(newUser);
                                self.profile.setPreferredName(newUser);
                                var endpoint = new Endpoint();
                                endpoint.username = newUser;
                                endpoint.password = "#PEBLTest67";
                                endpoint.url = "https://lrs.adlnet.gov/xapi/";
                                self.profile.addLrsUrl(endpoint);
                                self.storage.saveUserProfile(self.profile);
                                if (window.FakeCompetency != null) {
                                    var result = window.FakeCompetency.getCompetencies(newUser);
                                    var collapsed = {};
                                    for (var i = 0; i < result.length; i++) {
                                        var pair = result[i];
                                        var obj = pair[1];
                                        var temp = pair[0]["url"];
                                        collapsed[temp.substring(0, temp.lastIndexOf("/"))] = obj;
                                    }
                                    self.storage.setCompetencies(self.profile, collapsed);
                                }
                            }
                            self.storage.storeCurrentUser(self.profile, function() {
                                setTimeout(function() {
                                    window.location = window.location;
                                }, 5);
                                window.Lightbox.close();
                                if (callback != null) 
                                    callback();
                            });
                        });
                        return false;
                    };
                } else {
                    self.storage.getUserProfile(currentUser, function(profile) {
                        self.profile = profile;
                        self.isLoggedIn = true;
                        self.sameUser = true;
                        self.storage.storeCurrentUser(profile, callback);
                    });
                }
            }
        });
    };
    prototype.loginAsUser = function(username, password, callback) {
        this.loginCallback = callback;
        var self = this;
        this.storage.getCurrentUser(function(currentUser) {
            if (window.Lightbox != null) {
                if ((currentUser == "") || (currentUser == "null") || (currentUser == null) || (currentUser == "guest")) {
                    var newUser = username;
                    self.isLoggedIn = true;
                    self.storage.getUserProfile(newUser, function(profile) {
                        self.profile = profile;
                        self.sameUser = false;
                        if (self.profile == null) {
                            self.profile = new UserProfile(null);
                            self.profile.setIdentity(newUser);
                            self.profile.setName(newUser);
                            self.profile.setPreferredName(newUser);
                            var endpoint = new Endpoint();
                            endpoint.username = newUser;
                            endpoint.password = password;
                            endpoint.url = "https://lrs.adlnet.gov/xapi/";
                            self.profile.addLrsUrl(endpoint);
                            self.storage.saveUserProfile(self.profile);
                            if (window.FakeCompetency != null) {
                                var result = window.FakeCompetency.getCompetencies(newUser);
                                var collapsed = {};
                                for (var i = 0; i < result.length; i++) {
                                    var pair = result[i];
                                    var obj = pair[1];
                                    var temp = pair[0]["url"];
                                    collapsed[temp.substring(0, temp.lastIndexOf("/"))] = obj;
                                }
                                self.storage.setCompetencies(self.profile, collapsed);
                            }
                        }
                        self.storage.storeCurrentUser(self.profile, function() {
                            setTimeout(function() {
                                window.location = window.location;
                            }, 5);
                            if (callback != null) 
                                callback();
                        });
                    });
                } else {
                    self.storage.getUserProfile(currentUser, function(profile) {
                        self.profile = profile;
                        self.isLoggedIn = true;
                        self.sameUser = true;
                        self.storage.storeCurrentUser(profile, callback);
                    });
                }
            }
        });
    };
    prototype.logout = function(callback) {
        var self = this;
        this.isLoggedIn = false;
        this.storage.storeCurrentUser(ADLDemoUserAdapter.guest, function() {
            self.profile = null;
            setTimeout(function() {
                window.location = window.location;
            }, 5);
            self.login(self.loginCallback);
        });
    };
    prototype.loggedIn = function() {
        return this.isLoggedIn;
    };
    prototype.isSameUser = function() {
        return this.sameUser;
    };
}, {storage: "StorageAdapter", profile: "UserProfile", loginCallback: "Callback0", guest: "UserProfile"}, {});
(function() {
    ADLDemoUserAdapter.guest = new UserProfile(null);
    ADLDemoUserAdapter.guest.setName("guest");
    ADLDemoUserAdapter.guest.setIdentity("guest");
})();
var Notification = function(message, payload) {
    TimeSeriesData.call(this);
    this.stmt = {"message": message, "payload": payload};
    this.id = TimeSeriesData.NAMESPACE_NOTIFICATION + payload.id;
    this.timestamp = new Date();
    this.message = message;
    this.payload = payload;
};
Notification = stjs.extend(Notification, TimeSeriesData, [], function(constructor, prototype) {
    constructor.KEY_MESSAGE = "message";
    constructor.KEY_PAYLOAD = "payload";
    prototype.message = null;
    prototype.payload = null;
    prototype.pack = function() {
        var result = {};
        result[Notification.KEY_MESSAGE] = this.message;
        result[Notification.KEY_PAYLOAD] = this.payload;
        return JSON.stringify(result);
    };
    prototype.toObject = function() {
        var result = {};
        result[TimeSeriesData.KEY_XID] = this.id;
        result[Notification.KEY_MESSAGE] = this.message;
        if (this.payload != null) 
            result[Notification.KEY_PAYLOAD] = this.payload.toObject();
        result[TimeSeriesData.KEY_TIMESTAMP] = EcDate.toISOString(this.timestamp);
        return result;
    };
    prototype.toString = function() {
        return JSON.stringify(this.toObject());
    };
}, {payload: "TimeSeriesData", timestamp: "Date", stmt: {name: "Map", arguments: [null, "Object"]}}, {});
var LocalActivityAdapter = function(userManager, storage) {
    this.subscribedThreads = {};
    this.storage = storage;
    this.userManager = userManager;
};
LocalActivityAdapter = stjs.extend(LocalActivityAdapter, null, [ActivityAdapter], function(constructor, prototype) {
    prototype.storage = null;
    prototype.subscribedThreads = null;
    prototype.currentBook = null;
    prototype.previousBook = null;
    prototype.currentActivity = null;
    prototype.sameBook = false;
    prototype.userManager = null;
    prototype.directMessageHandler = null;
    prototype.getThreads = function() {
        return this.subscribedThreads;
    };
    prototype.setDirectMessageHandler = function(directMessageHandler) {
        var laa = this;
        this.directMessageHandler = directMessageHandler;
    };
    prototype.hookDirectMessages = function() {
        var laa = this;
        if (this.userManager.getUser().getIdentity() != "guest") 
            this.subscribedThreads[TimeSeriesData.NAMESPACE_USERNAME + this.userManager.getUser().getIdentity()] = function(incoming) {
                if (laa.directMessageHandler != null) 
                    laa.directMessageHandler(incoming);
            };
    };
    prototype.unsubscribeAll = function() {
        this.subscribedThreads = {};
        this.hookDirectMessages();
    };
    prototype.subscribe = function(thread, callback) {
        this.subscribedThreads[thread] = callback;
    };
    prototype.initializeToc = function(data) {
        var self = this;
        this.storage.getToc(this.userManager.getUser(), this.currentBook, function(toc) {
            if (toc.length == 0 || toc["Section1"] == null || (toc["Section1"])["Section"] == null) {
                for (var section in data) {
                    var pages = data[section];
                    for (var pageKey in pages) {
                        var pageMetadata = pages[pageKey];
                        if (pageKey == "DynamicContent") {
                            var documents = pageMetadata["documents"];
                            for (var dynamicPageKey in documents) {
                                var documentMetadata = documents[dynamicPageKey];
                                documentMetadata["pageKey"] = dynamicPageKey;
                                documentMetadata["card"] = documentMetadata["card"];
                                documentMetadata["docType"] = documentMetadata["docType"];
                                documentMetadata["documentName"] = documentMetadata["documentName"];
                                documentMetadata["url"] = documentMetadata["url"];
                                documentMetadata["section"] = documentMetadata["section"];
                                documentMetadata["externalURL"] = documentMetadata["externalURL"];
                                self.storage.addToc(self.userManager.getUser(), self.currentBook, documentMetadata);
                            }
                        } else {
                            pageMetadata["pageKey"] = pageKey;
                            pageMetadata["section"] = section;
                            self.storage.addToc(self.userManager.getUser(), self.currentBook, pageMetadata);
                        }
                    }
                }
            }
        });
    };
    prototype.getToc = function(callback) {
        this.storage.getToc(this.userManager.getUser(), this.currentBook, function(entries) {
            var toc = {};
            for (var i = 0; i < entries.length; i++) {
                var entry = entries[i];
                var sectionKey = entry["section"];
                if (toc[sectionKey] == null) {
                    toc[sectionKey] = {};
                }
                var section = toc[sectionKey];
                if (sectionKey == "DynamicContent") {
                    if (section["documents"] == null) {
                        section["location"] = entry["location"];
                        section["documents"] = {};
                    }
                    var dynamicSection = section["documents"];
                    dynamicSection[entry["pageKey"]] = entry;
                } else 
                    section[entry["pageKey"]] = entry;
            }
            if (callback != null) 
                callback(toc);
        });
    };
    prototype.openBook = function(containerPath, callback) {
        var laa = this;
        if (this.previousBook == null) {
            this.storage.getCurrentBook(function(book) {
                laa.sameBook = (laa.currentBook == containerPath);
                laa.previousBook = book;
                laa.currentBook = containerPath;
                laa.storage.storeCurrentBook(containerPath);
                laa.hookDirectMessages();
                if (callback != null) {
                    callback(laa.sameBook);
                }
            });
        } else {
            this.sameBook = (this.currentBook == containerPath);
            this.previousBook = this.currentBook;
            this.currentBook = containerPath;
            laa.storage.storeCurrentBook(containerPath);
            this.hookDirectMessages();
            if (callback != null) 
                callback(this.sameBook);
        }
    };
    prototype.startParentActivity = function(activity) {
        this.currentActivity = activity;
    };
    prototype.clearParentActivity = function() {
        this.currentActivity = null;
    };
    prototype.getParentActivity = function() {
        return this.currentActivity;
    };
    prototype.isSameBook = function() {
        return this.sameBook;
    };
    prototype.getActivityId = function() {
        var activity = null;
        if (window.ReadiumInterop != null) {
            var bookmark = window.ReadiumInterop.getFirstVisibleCfi();
            if (bookmark != null) {
                var cfi = (bookmark["idref"]);
                activity = localStorage.getItem("activityId-" + this.currentBook + cfi);
            }
        }
        if ((activity == null) || (activity == "")) {
            activity = localStorage.getItem("activityId-" + this.currentBook);
        }
        return (activity == "") ? null : activity;
    };
    prototype.hasActivityListing = function() {
        var activity = localStorage.getItem("activityListing");
        return (activity != null);
    };
    prototype.retrieveActivityListing = function(callback) {
        var endpointRequest = new XMLHttpRequest();
        endpointRequest.onreadystatechange = function() {
            if (endpointRequest.readyState == 4) {
                if (endpointRequest.status == 200) {
                    var obj = JSON.parse(endpointRequest.responseText);
                    var activityRequest = new XMLHttpRequest();
                    activityRequest.onreadystatechange = function() {
                        if (activityRequest.readyState == 4) {
                            if (activityRequest.status == 200) {
                                var activities = JSON.parse(activityRequest.responseText);
                                for (var i = 0; i < activities.length; i++) {
                                    var url = activities[i]["url"];
                                    if ((url != null) && url.startsWith("pebl://")) {
                                        var cfi = "";
                                        var activity = null;
                                        var idref = "";
                                        var queryPosition = url.indexOf("?");
                                        if (queryPosition != -1) {
                                            var queryParts = (url.substring(queryPosition + 1).split("&"));
                                            for (var x = 0; x < queryParts.length; x++) {
                                                var param = queryParts[x];
                                                if (param.startsWith("cfi=")) {
                                                    cfi = decodeURIComponent(param.substring("cfi=".length));
                                                }
                                                if (param.startsWith("activityId=")) {
                                                    activity = param.substring("activityId=".length);
                                                }
                                            }
                                        }
                                        if (cfi != "") {
                                            var sI = cfi.indexOf("[");
                                            var eI = cfi.indexOf("]");
                                            if ((sI != -1) && (eI != -1)) 
                                                idref = cfi.substring(sI + 1, eI);
                                        }
                                        var filename = url.substring("pebl://".length, url.indexOf("?"));
                                        localStorage.setItem("activityId-" + filename + idref, activity);
                                    }
                                }
                                localStorage.setItem("activityListing", new Date().toString());
                                if (callback != null) 
                                    callback();
                            } else if (callback != null) {
                                callback();
                            }
                        }
                    };
                    activityRequest.open("GET", obj["activity_index"]["endpoint"], true);
                    activityRequest.send();
                } else if (callback != null) {
                    callback();
                }
            }
        };
        endpointRequest.open("GET", "http://adltla.usalearning.net:8085/endpoints", true);
        endpointRequest.send();
    };
    prototype.getBook = function() {
        return this.currentBook;
    };
    prototype.getPreviousBook = function() {
        return this.previousBook;
    };
}, {storage: "StorageAdapter", subscribedThreads: {name: "Map", arguments: [null, {name: "Callback1", arguments: [{name: "Array", arguments: ["TimeSeriesData"]}]}]}, userManager: "UserAdapter", directMessageHandler: {name: "Callback1", arguments: [{name: "Array", arguments: ["TimeSeriesData"]}]}}, {});
/**
 *  Hooks for which events are recorded during a session
 *  
 *  @author aaron.veden@eduworks.com
 */
var XApiGenerator = function(userManager, sa, activityManager, TLAEnabled) {
    this.storage = sa;
    this.userManager = userManager;
    this.activityManager = activityManager;
    this.TLAEnabled = TLAEnabled;
};
XApiGenerator = stjs.extend(XApiGenerator, null, [], function(constructor, prototype) {
    prototype.storage = null;
    prototype.userManager = null;
    prototype.activityManager = null;
    prototype.TLAEnabled = false;
    prototype.checklisted = function(checklistId, checklistUser, checklistPrompts, checklistResponses) {
        var containerPath = "pebl://" + this.activityManager.getBook();
        var checklistData = {};
        checklistData["checklistId"] = checklistId;
        checklistData["checklistUser"] = checklistUser;
        checklistData["checklistPrompts"] = checklistPrompts;
        checklistData["checklistResponses"] = checklistResponses;
        this.makeStatement(new ADL.XAPIStatement.Verb("http://www.peblproject.com/definitions.html#checklisted", "checklisted"), new ADL.XAPIStatement.Activity(containerPath, "", JSON.stringify(checklistData)));
    };
    prototype.compatibilityTested = function(eReaderName, osName, osVersion, browserName, browserVersion, userAgent, appVersion, platform, vendor, loginResult, localStorageResult, indexedDBResult, discussionResult, contentMorphingResult, figureResult, popoutResult, hotwordResult, quizResult, showHideResult) {
        var containerPath = "pebl://" + this.activityManager.getBook();
        var testData = {};
        testData["eReaderName"] = eReaderName;
        testData["osName"] = osName;
        testData["osVersion"] = osVersion;
        testData["browserName"] = browserName;
        testData["browserVersion"] = browserVersion;
        testData["userAgent"] = userAgent;
        testData["appVersion"] = appVersion;
        testData["platform"] = platform;
        testData["vendor"] = vendor;
        testData["loginResult"] = loginResult;
        testData["localStorageResult"] = localStorageResult;
        testData["indexedDBResult"] = indexedDBResult;
        testData["discussionResult"] = discussionResult;
        testData["contentMorphingResult"] = contentMorphingResult;
        testData["figureResult"] = figureResult;
        testData["popoutResult"] = popoutResult;
        testData["hotwordResult"] = hotwordResult;
        testData["quizResult"] = quizResult;
        testData["showHideResult"] = showHideResult;
        this.makeStatement(new ADL.XAPIStatement.Verb("http://www.peblproject.com/definitions.html#compatibilityTested", "compatibilityTested"), new ADL.XAPIStatement.Activity(containerPath, "", JSON.stringify(testData)));
    };
    prototype.pushed = function(book, target, location, card, url, docType, name, externalURL) {
        var containerPath = "peblThread://user-" + target;
        var pushData = {};
        pushData["book"] = book;
        pushData["target"] = target;
        pushData["url"] = url;
        pushData["name"] = name;
        pushData["location"] = location;
        pushData["card"] = card;
        pushData["docType"] = docType;
        pushData["externalURL"] = externalURL;
        this.makeStatement(new ADL.XAPIStatement.Verb("http://www.peblproject.com/definitions.html#pushed", "pushed"), new ADL.XAPIStatement.Activity(containerPath, "", JSON.stringify(pushData)));
    };
    prototype.pulled = function(book, target, location, card, url, docType, name, externalURL) {
        var containerPath = "peblThread://user-" + target;
        var pushData = {};
        pushData["book"] = book;
        pushData["target"] = target;
        pushData["url"] = url;
        pushData["name"] = name;
        pushData["location"] = location;
        pushData["card"] = card;
        pushData["docType"] = docType;
        pushData["externalURL"] = externalURL;
        this.makeStatement(new ADL.XAPIStatement.Verb("http://www.peblproject.com/definitions.html#pulled", "pulled"), new ADL.XAPIStatement.Activity(containerPath, "", JSON.stringify(pushData)));
    };
    prototype.completed = function(cfi, activity, description) {
        var containerPath = "pebl://" + this.activityManager.getBook();
        if ((activity != null) && (activity.trim() == "")) 
            activity = null;
        if (description != null) {
            if (description.trim() == "") 
                description = null;
             else 
                description = description.replaceAll("\\s+", " ");
        }
        this.makeStatement(new ADL.XAPIStatement.Verb("http://adlnet.gov/expapi/verbs/completed", "completed"), new ADL.XAPIStatement.Activity(containerPath, activity, description));
        if (this.TLAEnabled && (this.activityManager.getActivityId() != null)) {
            this.makeStatement(new ADL.XAPIStatement.Verb("http://adlnet.gov/expapi/verbs/completed", "completed"), new ADL.XAPIStatement.Activity(this.activityManager.getActivityId(), activity, description));
        }
    };
    prototype.passed = function(points, activity, description) {
        var result = {};
        var score = {};
        score["scaled"] = points / 100.0;
        score["raw"] = points;
        score["min"] = 0;
        score["max"] = 100;
        result["score"] = score;
        result["success"] = true;
        result["completion"] = true;
        var containerPath = "pebl://" + this.activityManager.getBook();
        this.makeStatementWithResult(new ADL.XAPIStatement.Verb("http://adlnet.gov/expapi/verbs/passed", "passed"), new ADL.XAPIStatement.Activity(containerPath, activity, description), result, {});
        if (this.TLAEnabled && (this.activityManager.getActivityId() != null)) {
            result = {};
            score = {};
            score["scaled"] = points / 100.0;
            score["raw"] = points;
            score["min"] = 0;
            score["max"] = 100;
            result["score"] = score;
            result["success"] = true;
            result["completion"] = true;
            containerPath = "pebl://" + this.activityManager.getBook();
            this.makeStatementWithResult(new ADL.XAPIStatement.Verb("http://adlnet.gov/expapi/verbs/passed", "passed"), new ADL.XAPIStatement.Activity(this.activityManager.getActivityId(), activity, description), result, {});
        }
    };
    prototype.initialized = function(activity, description) {
        var containerPath = "pebl://" + (this.activityManager.getBook() == null ? "" : this.activityManager.getBook());
        this.makeStatement(new ADL.XAPIStatement.Verb("http://adlnet.gov/expapi/verbs/initialized", "initialized"), new ADL.XAPIStatement.Activity(containerPath, activity, description));
        if (this.TLAEnabled && (this.activityManager.getActivityId() != null)) {
            containerPath = "pebl://" + (this.activityManager.getBook() == null ? "" : this.activityManager.getBook());
            this.makeStatement(new ADL.XAPIStatement.Verb("http://adlnet.gov/expapi/verbs/initialized", "initialized"), new ADL.XAPIStatement.Activity(this.activityManager.getActivityId(), activity, description));
        }
    };
    prototype.TLAinitialized = function() {
        if (this.TLAEnabled && (this.activityManager.getActivityId() != null)) {
            this.makeStatement(new ADL.XAPIStatement.Verb("http://adlnet.gov/expapi/verbs/initialized", "initialized"), new ADL.XAPIStatement.Activity(this.activityManager.getActivityId(), null, null));
        }
    };
    prototype.failed = function(points, activity, description) {
        var result = {};
        var score = {};
        score["scaled"] = points / 100.0;
        score["raw"] = points;
        score["min"] = 0;
        score["max"] = 100;
        result["score"] = score;
        result["success"] = false;
        result["completion"] = true;
        var containerPath = "pebl://" + this.activityManager.getBook();
        this.makeStatementWithResult(new ADL.XAPIStatement.Verb("http://adlnet.gov/expapi/verbs/failed", "failed"), new ADL.XAPIStatement.Activity(containerPath, activity, description), result, {});
        if (this.TLAEnabled && (this.activityManager.getActivityId() != null)) {
            result = {};
            score = {};
            score["scaled"] = points / 100.0;
            score["raw"] = points;
            score["min"] = 0;
            score["max"] = 100;
            result["score"] = score;
            result["success"] = false;
            result["completion"] = true;
            containerPath = "pebl://" + this.activityManager.getBook();
            this.makeStatementWithResult(new ADL.XAPIStatement.Verb("http://adlnet.gov/expapi/verbs/failed", "failed"), new ADL.XAPIStatement.Activity(this.activityManager.getActivityId(), activity, description), result, {});
        }
    };
    prototype.morphed = function(level, competency, cfi) {
        var containerPath = "pebl://" + (this.activityManager.getBook() == null ? "" : this.activityManager.getBook());
        this.makeStatement(new ADL.XAPIStatement.Verb("http://www.peblproject.com/definitions.html#morphed", "morphed"), new ADL.XAPIStatement.Activity(containerPath, "Level = " + level + " - " + competency, cfi));
    };
    prototype.interacted = function() {
        var containerPath = "pebl://" + (this.activityManager.getBook() == null ? "" : this.activityManager.getBook());
        this.makeStatement(new ADL.XAPIStatement.Verb("http://adlnet.gov/expapi/verbs/interacted", "interacted"), new ADL.XAPIStatement.Activity(containerPath, null, null));
    };
    prototype.terminated = function() {
        var activity = this.activityManager.getPreviousBook();
        if (activity != null) {
            var containerPath = "pebl://" + activity;
            this.makeStatement(new ADL.XAPIStatement.Verb("http://adlnet.gov/expapi/verbs/terminated", "terminated"), new ADL.XAPIStatement.Activity(containerPath, null, null));
        }
    };
    prototype.answered = function(prompt, answers, answer, correct, done) {
        var containerPath = "pebl://" + this.activityManager.getBook();
        var result = {};
        var score = {};
        var points = correct ? 1 : 0;
        score["scaled"] = points;
        score["raw"] = points;
        score["min"] = 0;
        score["max"] = 1;
        result["score"] = score;
        result["success"] = correct;
        result["completion"] = done;
        result["response"] = answer;
        var expandedActivity = {};
        expandedActivity["type"] = "http://adlnet.gov/expapi/activities/cmi.interaction";
        var cleanedAnswers = [];
        for (var i = 0; i < answers.length; i++) {
            var temp = {};
            temp["id"] = i + "";
            var temp2 = {};
            temp2["en-US"] = answers[i];
            temp["description"] = temp2;
            cleanedAnswers.push(temp);
        }
        expandedActivity["choices"] = cleanedAnswers;
        expandedActivity["interactionType"] = "choice";
        var responses = [];
        responses.push(answer.indexOf(answer) + "");
        expandedActivity["correctResponsesPattern"] = responses;
        this.makeStatementWithResult(new ADL.XAPIStatement.Verb("http://adlnet.gov/expapi/verbs/answered", "answered"), new ADL.XAPIStatement.Activity(containerPath, prompt, null), result, expandedActivity);
    };
    prototype.preferred = function(target, type) {
        var containerPath = "pebl://" + this.activityManager.getBook();
        this.makeStatement(new ADL.XAPIStatement.Verb("http://adlnet.gov/expapi/verbs/preferred", "preferred"), new ADL.XAPIStatement.Activity(containerPath, type, target));
    };
    prototype.nextPage = function(page) {
        var containerPath = "pebl://" + this.activityManager.getBook();
        this.makeStatement(new ADL.XAPIStatement.Verb("http://www.peblproject.com/definitions.html#paged-next", "paged-next"), new ADL.XAPIStatement.Activity(containerPath, null, page.toString()));
    };
    prototype.jumpedPage = function(page) {
        var containerPath = "pebl://" + this.activityManager.getBook();
        this.makeStatement(new ADL.XAPIStatement.Verb("http://www.peblproject.com/definitions.html#paged-jump", "paged-jump"), new ADL.XAPIStatement.Activity(containerPath, null, page.toString()));
    };
    prototype.prevPage = function(page) {
        var containerPath = "pebl://" + this.activityManager.getBook();
        this.makeStatement(new ADL.XAPIStatement.Verb("http://www.peblproject.com/definitions.html#paged-prev", "paged-prev"), new ADL.XAPIStatement.Activity(containerPath, null, page.toString()));
    };
    prototype.startSession = function() {
        var containerPath = "pebl://" + (this.activityManager.getBook() == null ? "" : this.activityManager.getBook());
        this.makeStatement(new ADL.XAPIStatement.Verb("http://www.peblproject.com/definitions.html#entered", "entered"), new ADL.XAPIStatement.Activity(containerPath, null, null));
    };
    prototype.login = function() {
        var containerPath = "pebl://" + (this.activityManager.getBook() == null ? "" : this.activityManager.getBook());
        this.makeStatement(new ADL.XAPIStatement.Verb("http://adlnet.gov/expapi/verbs/logged-in", "logged-in"), new ADL.XAPIStatement.Activity(containerPath, null, null));
    };
    prototype.logout = function() {
        this.makeStatement(new ADL.XAPIStatement.Verb("http://adlnet.gov/expapi/verbs/logged-out", "logged-out"), new ADL.XAPIStatement.Activity("pebl://" + (this.activityManager.getBook() == null ? "" : this.activityManager.getBook()), null, null));
    };
    prototype.endSession = function() {
        var containerPath = "pebl://" + (this.activityManager.getBook() == null ? "" : this.activityManager.getBook());
        this.makeStatement(new ADL.XAPIStatement.Verb("http://adlnet.gov/expapi/verbs/exited", "exited"), new ADL.XAPIStatement.Activity(containerPath, null, null));
    };
    prototype.makeStatement = function(verb, activity) {
        var up = this.userManager.getUser();
        if (up.getName().equals("guest")) 
            return;
        var containerPath = "pebl://" + (this.activityManager.getBook() == null ? "" : this.activityManager.getBook());
        var o = new ADL.XAPIStatement(new ADL.XAPIStatement.Agent(up.generateAgent(), up.getName()), verb, activity);
        XApiUtils.addTimestamp(o);
        var parentActivity = this.activityManager.getParentActivity();
        if ((parentActivity != null) && (parentActivity != "")) 
            containerPath = parentActivity;
        o.addParentActivity(new ADL.XAPIStatement.Activity(containerPath, null, null));
        if (this.activityManager.getBook() != null) 
            this.storage.saveEvent(up, this.activityManager.getBook(), o);
        this.storage.storeOutgoing(up, o);
    };
    prototype.makeStatementWithResult = function(verb, activity, result, expandedActivity) {
        var up = this.userManager.getUser();
        if (up.getName().equals("guest")) 
            return;
        var containerPath = "pebl://" + (this.activityManager.getBook() == null ? "" : this.activityManager.getBook());
        var def = activity["definition"];
        if (expandedActivity != null) 
            for (var key in expandedActivity) 
                def[key] = expandedActivity[key];
        var o = new ADL.XAPIStatement(new ADL.XAPIStatement.Agent(up.generateAgent(), up.getName()), verb, activity);
        o["result"] = result;
        XApiUtils.addTimestamp(o);
        var parentActivity = this.activityManager.getParentActivity();
        if ((parentActivity != null) && (parentActivity != "")) 
            containerPath = parentActivity;
        o.addParentActivity(new ADL.XAPIStatement.Activity(containerPath, null, null));
        if (this.activityManager.getBook() != null) 
            this.storage.saveEvent(up, this.activityManager.getBook(), o);
        this.storage.storeOutgoing(up, o);
    };
}, {storage: "StorageAdapter", userManager: "UserAdapter", activityManager: "ActivityAdapter"}, {});
var Voided = function(o) {
    TimeSeriesData.call(this);
    this.stmt = o;
    this.id = o["id"];
    this.timestamp = XApiUtils.getTimestamp(o);
    this.parentActivity = XApiUtils.getParentActivity(o);
    if ((this.parentActivity != null) && this.parentActivity.startsWith("peblThread://")) 
        this.thread = this.parentActivity.substring("peblThread://".length);
     else 
        this.thread = this.parentActivity;
    this.actorId = XApiUtils.getActorId(o);
    this.target = XApiUtils.getObjectId(o);
};
Voided = stjs.extend(Voided, TimeSeriesData, [], function(constructor, prototype) {
    prototype.target = null;
    prototype.thread = null;
    prototype.toObject = function() {
        var result = TimeSeriesData.prototype.toObject.call(this);
        result[TimeSeriesData.KEY_TARGET] = this.target;
        return result;
    };
    constructor.is = function(record) {
        var verb = XApiUtils.getVerb(record);
        return (verb == "voided");
    };
}, {timestamp: "Date", stmt: {name: "Map", arguments: [null, "Object"]}}, {});
/**
 *  Basic HTML5 session storage or local storage
 *  @author aaron.veden@eduworks.com
 */
var InMemoryStorageAdapter = function(storage) {
    this.persistStorage = storage;
    this.storage = {};
};
InMemoryStorageAdapter = stjs.extend(InMemoryStorageAdapter, null, [StorageAdapter], function(constructor, prototype) {
    prototype.persistStorage = null;
    prototype.storage = null;
    prototype.saveXApisMap = function(key, value) {
        this.storage[key] = JSON.stringify(value);
    };
    prototype.storeMapRecord = function(key, item) {
        var records = XApiUtils.parseXApiMap(this.storage[key]);
        records[item["id"]] = item;
        this.saveXApisMap(key, records);
    };
    prototype.removeAnnotation = function(user, id, containerPath) {
        var key = user.getIdentity() + containerPath;
        var records = XApiUtils.parseXApiMap(this.storage[key]);
        delete records[id];
        this.saveXApisMap(key, records);
    };
    prototype.removeSharedAnnotation = function(user, id) {};
    prototype.postMessage = function(user, thread, message) {
        this.storeMapRecord(user.getIdentity() + thread, message);
    };
    prototype.postMessages = function(user, thread, messages) {
        var key = user.getIdentity() + thread;
        var records = XApiUtils.parseXApiMap(this.storage[key]);
        for (var i = 0; i < messages.length; i++) {
            var item = messages[i];
            records[item["id"]] = item;
        }
        this.saveXApisMap(key, records);
    };
    prototype.fromMapToArray = function(xapis) {
        var result = [];
        for (var key in xapis) 
            result.push(xapis[key]);
        XApiUtils.sortXApiNewest(result);
        return result;
    };
    prototype.getAnnotations = function(user, containerPath, callback) {
        var annotationsMap = XApiUtils.parseXApiMap(this.storage[user.getIdentity() + containerPath]);
        var result = this.fromMapToArray(annotationsMap);
        if (callback != null) 
            callback(result);
    };
    prototype.getGeneralAnnotations = function(user, containerPath, callback) {
        var annotationsMap = XApiUtils.parseXApiMap(this.storage[user.getIdentity() + containerPath + StorageAdapter.AREA_GENERAL]);
        var result = this.fromMapToArray(annotationsMap);
        if (callback != null) 
            callback(result);
    };
    prototype.getCompetencies = function(user, callback) {
        var obj = JSON.parse(this.persistStorage.getItem(user.getIdentity() + StorageAdapter.AREA_COMPENTENCIES));
        if (obj == null) 
            obj = {};
        if (callback != null) 
            callback(obj);
    };
    prototype.setCompetencies = function(user, incomingCompetencies) {
        var kvsa = this;
        if (incomingCompetencies != null) {
            this.getCompetencies(user, function(competencies) {
                for (var key in incomingCompetencies) 
                    competencies[key] = incomingCompetencies[key];
                kvsa.persistStorage.setItem(user.getIdentity() + StorageAdapter.AREA_COMPENTENCIES, JSON.stringify(competencies));
            });
        }
    };
    prototype.getMessages = function(user, thread, callback) {
        var messagesMap = XApiUtils.parseXApiMap(this.storage[user.getIdentity() + thread]);
        var result = this.fromMapToArray(messagesMap);
        if (callback != null) 
            callback(result);
    };
    prototype.getUserProfile = function(id, callback) {
        var profileString = this.persistStorage.getItem(id + StorageAdapter.AREA_PROFILE);
        var profile = null;
        if (profileString != null) 
            profile = new UserProfile(profileString);
        if (callback != null) 
            callback(profile);
    };
    prototype.storeCurrentUser = function(user, callback) {
        this.persistStorage.setItem(StorageAdapter.AREA_CURRENT_USER, user.getIdentity());
        if (callback != null) 
            callback();
    };
    prototype.getCurrentUser = function(callback) {
        if (callback != null) 
            callback(this.persistStorage.getItem(StorageAdapter.AREA_CURRENT_USER));
    };
    prototype.storeCurrentBook = function(book) {
        this.persistStorage.setItem(StorageAdapter.AREA_CURRENT_BOOK, book);
    };
    prototype.getCurrentBook = function(callback) {
        if (callback != null) 
            callback(this.persistStorage.getItem(StorageAdapter.AREA_CURRENT_BOOK));
    };
    prototype.saveUserProfile = function(user) {
        this.persistStorage.setItem(user.getIdentity() + StorageAdapter.AREA_PROFILE, user.toString());
    };
    prototype.storeOutgoing = function(user, xapi) {
        this.storeMapRecord(user.getIdentity() + StorageAdapter.AREA_OUTGOING, xapi);
    };
    prototype.clearOutgoing = function(user, toClear) {
        var key = user.getIdentity() + StorageAdapter.AREA_OUTGOING;
        var outgoingMap = XApiUtils.parseXApiMap(this.storage[key]);
        for (var i = 0; i < toClear.length; i++) 
            delete outgoingMap[toClear[i]["id"]];
        this.saveXApisMap(key, outgoingMap);
    };
    prototype.getOutgoing = function(user, callback) {
        var key = user.getIdentity() + StorageAdapter.AREA_OUTGOING;
        var outgoingMap = XApiUtils.parseXApiMap(this.storage[key]);
        var result = this.fromMapToArray(outgoingMap);
        if (callback != null) 
            callback(result);
    };
    prototype.removeMessage = function(user, id, thread) {
        var key = user.getIdentity() + thread;
        var records = XApiUtils.parseXApiMap(this.storage[key]);
        delete records[id];
        this.saveXApisMap(key, records);
    };
    prototype.saveAnnotation = function(user, containerPath, annotation) {
        this.storeMapRecord(user.getIdentity() + containerPath, annotation);
    };
    prototype.saveAnnotations = function(user, containerPath, annotations) {
        var key = user.getIdentity() + containerPath;
        var records = XApiUtils.parseXApiMap(this.storage[key]);
        for (var i = 0; i < annotations.length; i++) {
            var item = annotations[i];
            records[item["id"]] = item;
        }
        this.saveXApisMap(key, records);
    };
    prototype.saveGeneralAnnotation = function(user, containerPath, annotation) {
        this.storeMapRecord(user.getIdentity() + containerPath + "General", annotation);
    };
    prototype.saveGeneralAnnotations = function(user, containerPath, annotations) {
        var key = user.getIdentity() + containerPath + "General";
        var records = XApiUtils.parseXApiMap(this.storage[key]);
        for (var i = 0; i < annotations.length; i++) {
            var item = annotations[i];
            records[item["id"]] = item;
        }
        this.saveXApisMap(key, records);
    };
    prototype.saveEvent = function(user, containerPath, event) {
        this.storeMapRecord(user.getIdentity() + containerPath + StorageAdapter.AREA_EVENTS, event);
    };
    prototype.saveEvents = function(user, containerPath, events) {
        var key = user.getIdentity() + containerPath + StorageAdapter.AREA_EVENTS;
        var records = XApiUtils.parseXApiMap(this.storage[key]);
        for (var i = 0; i < events.length; i++) {
            var item = events[i];
            records[item["id"]] = item;
        }
        this.saveXApisMap(key, records);
    };
    prototype.getEvents = function(user, containerPath, callback) {
        var key = user.getIdentity() + containerPath + StorageAdapter.AREA_EVENTS;
        var eventMap = XApiUtils.parseXApiMap(this.storage[key]);
        var result = this.fromMapToArray(eventMap);
        if (callback != null) 
            callback(result);
    };
    prototype.getAsset = function(id, callback) {};
    prototype.setAsset = function(id, data) {};
    prototype.removeNotification = function(user, id) {};
    prototype.getNotifications = function(user, callback) {};
    prototype.addNotification = function(user, notification) {};
    prototype.getToc = function(user, containerPath, callback) {};
    prototype.removeToc = function(user, containerPath, section, id) {};
    prototype.addToc = function(user, containerPath, data) {};
    prototype.saveQueuedReference = function(user, ref) {};
    prototype.getQueuedReference = function(user, callback) {};
    prototype.removeQueuedReference = function(user, id) {};
}, {persistStorage: "Storage", storage: {name: "Map", arguments: [null, null]}}, {});
var Navigation = function(o) {
    TimeSeriesData.call(this);
    this.stmt = o;
    this.id = o["id"];
    this.timestamp = XApiUtils.getTimestamp(o);
    this.parentActivity = XApiUtils.getParentActivity(o);
    this.actorId = XApiUtils.getActorId(o);
    this.activityId = XApiUtils.getObjectId(o);
    this.type = XApiUtils.getVerb(o);
};
Navigation = stjs.extend(Navigation, TimeSeriesData, [], function(constructor, prototype) {
    prototype.activityId = null;
    prototype.type = null;
    constructor.is = function(record) {
        var verb = XApiUtils.getVerb(record);
        return (verb == "paged-next") || (verb == "paged-prev") || (verb == "paged-jump") || (verb == "interacted") || (verb == "completed");
    };
    prototype.toObject = function() {
        var result = TimeSeriesData.prototype.toObject.call(this);
        result[TimeSeriesData.KEY_ACTIVITY_ID] = this.activityId;
        result[TimeSeriesData.KEY_TYPE] = this.type;
        return result;
    };
}, {timestamp: "Date", stmt: {name: "Map", arguments: [null, "Object"]}}, {});
var Session = function(o) {
    TimeSeriesData.call(this);
    this.stmt = o;
    this.id = o["id"];
    this.timestamp = XApiUtils.getTimestamp(o);
    this.parentActivity = XApiUtils.getParentActivity(o);
    this.actorId = XApiUtils.getActorId(o);
    this.activityId = XApiUtils.getObjectId(o);
    this.type = XApiUtils.getVerb(o);
    if (this.type == "initialized") {
        this.activityName = XApiUtils.getObjectName(o);
        this.activityDescription = XApiUtils.getObjectDescription(o);
    } else {
        this.activityName = null;
        this.activityDescription = null;
    }
};
Session = stjs.extend(Session, TimeSeriesData, [], function(constructor, prototype) {
    prototype.activityId = null;
    prototype.activityName = null;
    prototype.activityDescription = null;
    prototype.type = null;
    constructor.is = function(record) {
        var verb = XApiUtils.getVerb(record);
        return (verb == "entered") || (verb == "exited") || (verb == "logged-in") || (verb == "logged-out") || (verb == "terminated") || (verb == "initialized");
    };
    prototype.toObject = function() {
        var result = TimeSeriesData.prototype.toObject.call(this);
        result[TimeSeriesData.KEY_ACTIVITY_ID] = this.activityId;
        result[TimeSeriesData.KEY_ACTIVITY_NAME] = this.activityName;
        result[TimeSeriesData.KEY_ACTIVITY_DESCRIPTION] = this.activityDescription;
        result[TimeSeriesData.KEY_TYPE] = this.type;
        return result;
    };
}, {timestamp: "Date", stmt: {name: "Map", arguments: [null, "Object"]}}, {});
var Action = function(o) {
    TimeSeriesData.call(this);
    this.stmt = o;
    this.id = o["id"];
    this.timestamp = XApiUtils.getTimestamp(o);
    this.parentActivity = XApiUtils.getParentActivity(o);
    this.actorId = XApiUtils.getActorId(o);
    this.activityId = XApiUtils.getObjectId(o);
    this.action = XApiUtils.getVerb(o);
    if (this.action == "morphed") {
        var name = XApiUtils.getObjectName(o);
        var level = name.substring(0, name.indexOf("-") - 1);
        var competency = name.substring(name.indexOf("-") + 2);
        this.target = level;
        this.type = competency;
    } else if (this.action == "preferred") {
        this.type = XApiUtils.getObjectName(o);
        if (this.type == "link") 
            this.target = XApiUtils.getObjectDescription(o);
         else 
            this.target = "";
    } else {
        this.target = "";
        this.type = "";
    }
};
Action = stjs.extend(Action, TimeSeriesData, [], function(constructor, prototype) {
    prototype.activityId = null;
    prototype.target = null;
    prototype.type = null;
    prototype.action = null;
    prototype.toObject = function() {
        var result = TimeSeriesData.prototype.toObject.call(this);
        result[TimeSeriesData.KEY_ACTIVITY_ID] = this.activityId;
        result[TimeSeriesData.KEY_TARGET] = this.target;
        result[TimeSeriesData.KEY_TYPE] = this.type;
        result[TimeSeriesData.KEY_ACTION] = this.action;
        return result;
    };
    constructor.is = function(record) {
        var verb = XApiUtils.getVerb(record);
        return (verb == "preferred") || (verb == "morphed") || (verb == "interacted");
    };
}, {timestamp: "Date", stmt: {name: "Map", arguments: [null, "Object"]}}, {});
var Quiz = function(o) {
    TimeSeriesData.call(this);
    this.stmt = o;
    this.id = o["id"];
    this.timestamp = XApiUtils.getTimestamp(o);
    this.parentActivity = XApiUtils.getParentActivity(o);
    this.actorId = XApiUtils.getActorId(o);
    this.activityId = XApiUtils.getObjectId(o);
    var result = o["result"];
    this.completion = result["completion"];
    this.success = result["success"];
    this.quizId = XApiUtils.getObjectName(o);
    this.quizName = XApiUtils.getObjectDescription(o);
    var scores = result["score"];
    this.min = stjs.trunc(scores["min"]);
    this.max = stjs.trunc(scores["max"]);
    this.raw = stjs.trunc(scores["raw"]);
};
Quiz = stjs.extend(Quiz, TimeSeriesData, [], function(constructor, prototype) {
    prototype.raw = 0;
    prototype.min = 0;
    prototype.max = 0;
    prototype.activityId = null;
    prototype.quizId = null;
    prototype.quizName = null;
    prototype.completion = false;
    prototype.success = false;
    constructor.is = function(record) {
        var verb = XApiUtils.getVerb(record);
        return (verb == "failed") || (verb == "passed");
    };
}, {timestamp: "Date", stmt: {name: "Map", arguments: [null, "Object"]}}, {});
var Message = function(o) {
    TimeSeriesData.call(this);
    this.stmt = o;
    var messageData;
    if (o["object"] != null) {
        messageData = JSON.parse(XApiUtils.getObjectDescription(o));
        var temp = XApiUtils.getObjectId(o);
        if (temp.startsWith("peblThread://")) 
            this.thread = temp.substring("peblThread://".length);
         else 
            this.thread = temp;
        this.prompt = XApiUtils.getObjectName(o);
        this.actorId = XApiUtils.getActorId(o);
        this.name = XApiUtils.getActorName(o);
    } else {
        messageData = o;
        this.thread = messageData[Message.KEY_THREAD];
        this.prompt = messageData[Message.KEY_PROMPT];
        this.actorId = messageData[Message.KEY_USER_ID];
        this.name = "You";
    }
    this.direct = this.thread == TimeSeriesData.NAMESPACE_USERNAME + this.actorId;
    this.id = o[Message.KEY_XID];
    this.text = messageData[Message.KEY_TEXT];
    this.timestamp = new Date(o[Message.KEY_TIMESTAMP]);
};
Message = stjs.extend(Message, TimeSeriesData, [], function(constructor, prototype) {
    constructor.KEY_XID = "id";
    constructor.KEY_TIMESTAMP = "timestamp";
    constructor.KEY_THREAD = "thread";
    constructor.KEY_PROMPT = "prompt";
    constructor.KEY_USER_ID = "userId";
    constructor.KEY_TEXT = "text";
    constructor.KEY_FROM = "from";
    constructor.KEY_NAME = "name";
    prototype.thread = null;
    prototype.text = null;
    prototype.prompt = null;
    prototype.name = null;
    prototype.direct = false;
    prototype.pack = function() {
        var result = {};
        result[Message.KEY_TEXT] = this.text;
        return JSON.stringify(result);
    };
    prototype.toObject = function() {
        var result = {};
        result[Message.KEY_XID] = this.id;
        result[Message.KEY_THREAD] = this.thread;
        result[Message.KEY_PROMPT] = this.prompt;
        result[Message.KEY_TEXT] = this.text;
        result[Message.KEY_USER_ID] = this.actorId;
        result[Message.KEY_NAME] = this.name;
        result[Message.KEY_TIMESTAMP] = EcDate.toISOString(this.timestamp);
        return result;
    };
    prototype.toString = function() {
        return JSON.stringify(this.toObject());
    };
    constructor.is = function(record) {
        var verb = XApiUtils.getVerb(record);
        return (verb == "responded");
    };
}, {timestamp: "Date", stmt: {name: "Map", arguments: [null, "Object"]}}, {});
var Reference = function(o) {
    TimeSeriesData.call(this);
    this.stmt = o;
    var messageData;
    if (o["object"] != null) {
        messageData = JSON.parse(XApiUtils.getObjectDescription(o));
        this.actorId = XApiUtils.getActorId(o);
        var temp = XApiUtils.getObjectId(o);
        if ((temp != null) && temp.startsWith("peblThread://")) 
            this.thread = temp.substring("peblThread://".length);
         else 
            this.thread = temp;
    } else {
        messageData = o;
        this.actorId = o[TimeSeriesData.KEY_ACTOR_ID];
        var temp = o[Reference.KEY_THREAD];
        if ((temp != null) && temp.startsWith("peblThread://")) 
            this.thread = temp.substring("peblThread://".length);
         else 
            this.thread = temp;
    }
    this.book = messageData[Reference.KEY_BOOK];
    this.docType = messageData[TimeSeriesData.KEY_DOCTYPE];
    this.location = messageData[Reference.KEY_LOCATION];
    this.card = messageData[Reference.KEY_CARD];
    this.url = messageData[Reference.KEY_URL];
    this.target = messageData[TimeSeriesData.KEY_TARGET];
    this.id = o[TimeSeriesData.KEY_XID];
    this.name = messageData[Reference.KEY_NAME];
    this.externalURL = messageData[Reference.KEY_EXTERNAL_URL];
    this.timestamp = new Date(o[TimeSeriesData.KEY_TIMESTAMP]);
};
Reference = stjs.extend(Reference, TimeSeriesData, [], function(constructor, prototype) {
    constructor.KEY_LOCATION = "location";
    constructor.KEY_CARD = "card";
    constructor.KEY_URL = "url";
    constructor.KEY_NAME = "name";
    constructor.KEY_EXTERNAL_URL = "externalURL";
    constructor.KEY_BOOK = "book";
    constructor.KEY_THREAD = "thread";
    prototype.name = null;
    prototype.location = null;
    prototype.card = null;
    prototype.target = null;
    prototype.url = null;
    prototype.docType = null;
    prototype.externalURL = null;
    prototype.book = null;
    prototype.thread = null;
    prototype.pack = function() {
        var result = {};
        result[Reference.KEY_BOOK] = this.book;
        result[Reference.KEY_LOCATION] = this.location;
        result[Reference.KEY_CARD] = this.card;
        result[TimeSeriesData.KEY_TARGET] = this.target;
        result[Reference.KEY_URL] = this.url;
        result[TimeSeriesData.KEY_DOCTYPE] = this.docType;
        result[Reference.KEY_NAME] = this.name;
        result[Reference.KEY_EXTERNAL_URL] = this.externalURL;
        return JSON.stringify(result);
    };
    prototype.toObject = function() {
        var result = {};
        result[TimeSeriesData.KEY_XID] = this.id;
        result[Reference.KEY_BOOK] = this.book;
        result[Reference.KEY_URL] = this.url;
        result[TimeSeriesData.KEY_ACTOR_ID] = this.actorId;
        result[Reference.KEY_LOCATION] = this.location;
        result[Reference.KEY_CARD] = this.card;
        result[TimeSeriesData.KEY_TARGET] = this.target;
        result[TimeSeriesData.KEY_DOCTYPE] = this.docType;
        result[Reference.KEY_NAME] = this.name;
        result[Reference.KEY_EXTERNAL_URL] = this.externalURL;
        result[TimeSeriesData.KEY_TIMESTAMP] = EcDate.toISOString(this.timestamp);
        return result;
    };
    prototype.toString = function() {
        return JSON.stringify(this.toObject());
    };
    constructor.is = function(record) {
        var verb = XApiUtils.getVerb(record);
        return (verb == "pushed") || (verb == "pulled");
    };
}, {timestamp: "Date", stmt: {name: "Map", arguments: [null, "Object"]}}, {});
/**
 *  Basic HTML5 session storage or local storage
 *  @author aaron.veden@eduworks.com
 */
var KeyValueStorageAdapter = function(storage) {
    this.storage = storage;
};
KeyValueStorageAdapter = stjs.extend(KeyValueStorageAdapter, null, [StorageAdapter], function(constructor, prototype) {
    prototype.storage = null;
    prototype.saveXApisMap = function(key, value) {
        this.storage.setItem(key, JSON.stringify(value));
    };
    prototype.storeMapRecord = function(key, item) {
        var records = XApiUtils.parseXApiMap(this.storage.getItem(key));
        records[item["id"]] = item;
        this.saveXApisMap(key, records);
    };
    prototype.removeAnnotation = function(user, id, containerPath) {
        var key = user.getIdentity() + containerPath;
        var records = XApiUtils.parseXApiMap(this.storage.getItem(key));
        delete records[id];
        this.saveXApisMap(key, records);
    };
    prototype.removeSharedAnnotation = function(user, id) {};
    prototype.postMessage = function(user, thread, message) {
        this.storeMapRecord(user.getIdentity() + thread, message);
    };
    prototype.postMessages = function(user, thread, messages) {
        var key = user.getIdentity() + thread;
        var records = XApiUtils.parseXApiMap(this.storage.getItem(key));
        for (var i = 0; i < messages.length; i++) {
            var item = messages[i];
            records[item["id"]] = item;
        }
        this.saveXApisMap(key, records);
    };
    prototype.fromMapToArray = function(xapis) {
        var result = [];
        for (var key in xapis) 
            result.push(xapis[key]);
        XApiUtils.sortXApiNewest(result);
        return result;
    };
    prototype.getAnnotations = function(user, containerPath, callback) {
        var annotationsMap = XApiUtils.parseXApiMap(this.storage.getItem(user.getIdentity() + containerPath));
        var result = this.fromMapToArray(annotationsMap);
        if (callback != null) 
            callback(result);
    };
    prototype.getGeneralAnnotations = function(user, containerPath, callback) {
        var annotationsMap = XApiUtils.parseXApiMap(this.storage.getItem(user.getIdentity() + containerPath + StorageAdapter.AREA_GENERAL));
        var result = this.fromMapToArray(annotationsMap);
        if (callback != null) 
            callback(result);
    };
    prototype.getCompetencies = function(user, callback) {
        var obj = JSON.parse(this.storage.getItem(user.getIdentity() + StorageAdapter.AREA_COMPENTENCIES));
        if (obj == null) 
            obj = {};
        if (callback != null) 
            callback(obj);
    };
    prototype.setCompetencies = function(user, incomingCompetencies) {
        var kvsa = this;
        if (incomingCompetencies != null) {
            this.getCompetencies(user, function(competencies) {
                for (var key in incomingCompetencies) 
                    competencies[key] = incomingCompetencies[key];
                kvsa.storage.setItem(user.getIdentity() + StorageAdapter.AREA_COMPENTENCIES, JSON.stringify(competencies));
            });
        }
    };
    prototype.getMessages = function(user, thread, callback) {
        var messagesMap = XApiUtils.parseXApiMap(this.storage.getItem(user.getIdentity() + thread));
        var result = this.fromMapToArray(messagesMap);
        if (callback != null) 
            callback(result);
    };
    prototype.getUserProfile = function(id, callback) {
        var profileString = this.storage.getItem(id + StorageAdapter.AREA_PROFILE);
        var profile = null;
        if (profileString != null) 
            profile = new UserProfile(profileString);
        if (callback != null) 
            callback(profile);
    };
    prototype.storeCurrentUser = function(user, callback) {
        this.storage.setItem(StorageAdapter.AREA_CURRENT_USER, user.getIdentity());
        if (callback != null) 
            callback();
    };
    prototype.getCurrentUser = function(callback) {
        if (callback != null) 
            callback(this.storage.getItem(StorageAdapter.AREA_CURRENT_USER));
    };
    prototype.storeCurrentBook = function(book) {
        this.storage.setItem(StorageAdapter.AREA_CURRENT_BOOK, book);
    };
    prototype.getCurrentBook = function(callback) {
        if (callback != null) 
            callback(this.storage.getItem(StorageAdapter.AREA_CURRENT_BOOK));
    };
    prototype.saveUserProfile = function(user) {
        this.storage.setItem(user.getIdentity() + StorageAdapter.AREA_PROFILE, user.toString());
    };
    prototype.storeOutgoing = function(user, xapi) {
        this.storeMapRecord(user.getIdentity() + StorageAdapter.AREA_OUTGOING, xapi);
    };
    prototype.clearOutgoing = function(user, toClear) {
        var key = user.getIdentity() + StorageAdapter.AREA_OUTGOING;
        var outgoingMap = XApiUtils.parseXApiMap(this.storage.getItem(key));
        for (var i = 0; i < toClear.length; i++) 
            delete outgoingMap[toClear[i]["id"]];
        this.saveXApisMap(key, outgoingMap);
    };
    prototype.getOutgoing = function(user, callback) {
        var key = user.getIdentity() + StorageAdapter.AREA_OUTGOING;
        var outgoingMap = XApiUtils.parseXApiMap(this.storage.getItem(key));
        var result = this.fromMapToArray(outgoingMap);
        if (callback != null) 
            callback(result);
    };
    prototype.removeMessage = function(user, id, thread) {
        var key = user.getIdentity() + thread;
        var messagesMap = XApiUtils.parseXApiMap(this.storage.getItem(key));
        delete messagesMap[id];
        this.saveXApisMap(key, messagesMap);
    };
    prototype.saveAnnotation = function(user, containerPath, annotation) {
        this.storeMapRecord(user.getIdentity() + containerPath, annotation);
    };
    prototype.saveAnnotations = function(user, containerPath, annotations) {
        var key = user.getIdentity() + containerPath;
        var records = XApiUtils.parseXApiMap(this.storage.getItem(key));
        for (var i = 0; i < annotations.length; i++) {
            var item = annotations[i];
            records[item["id"]] = item;
        }
        this.saveXApisMap(key, records);
    };
    prototype.saveGeneralAnnotation = function(user, containerPath, annotation) {
        this.storeMapRecord(user.getIdentity() + containerPath + "General", annotation);
    };
    prototype.saveGeneralAnnotations = function(user, containerPath, annotations) {
        var key = user.getIdentity() + containerPath + "General";
        var records = XApiUtils.parseXApiMap(this.storage.getItem(key));
        for (var i = 0; i < annotations.length; i++) {
            var item = annotations[i];
            records[item["id"]] = item;
        }
        this.saveXApisMap(key, records);
    };
    prototype.saveEvent = function(user, containerPath, event) {
        this.storeMapRecord(user.getIdentity() + containerPath + StorageAdapter.AREA_EVENTS, event);
    };
    prototype.saveEvents = function(user, containerPath, events) {
        var key = user.getIdentity() + containerPath + StorageAdapter.AREA_EVENTS;
        var records = XApiUtils.parseXApiMap(this.storage.getItem(key));
        for (var i = 0; i < events.length; i++) {
            var item = events[i];
            records[item["id"]] = item;
        }
        this.saveXApisMap(key, records);
    };
    prototype.getEvents = function(user, containerPath, callback) {
        var key = user.getIdentity() + containerPath + StorageAdapter.AREA_EVENTS;
        var eventMap = XApiUtils.parseXApiMap(this.storage.getItem(key));
        var result = this.fromMapToArray(eventMap);
        if (callback != null) 
            callback(result);
    };
    prototype.getAsset = function(id, callback) {};
    prototype.setAsset = function(id, data) {};
    prototype.removeNotification = function(user, id) {};
    prototype.getNotifications = function(user, callback) {};
    prototype.addNotification = function(user, notification) {};
    prototype.getToc = function(user, containerPath, callback) {};
    prototype.removeToc = function(user, containerPath, section, id) {};
    prototype.addToc = function(user, containerPath, data) {};
    prototype.saveQueuedReference = function(user, ref) {};
    prototype.getQueuedReference = function(user, callback) {};
    prototype.removeQueuedReference = function(user, id) {};
}, {storage: "Storage"}, {});
var Question = function(o) {
    TimeSeriesData.call(this);
    this.stmt = o;
    this.id = o["id"];
    this.timestamp = XApiUtils.getTimestamp(o);
    this.parentActivity = XApiUtils.getParentActivity(o);
    this.actorId = XApiUtils.getActorId(o);
    this.activityId = XApiUtils.getObjectId(o);
    var result = o["result"];
    this.completion = result["completion"];
    this.success = result["success"];
    var scores = result["score"];
    this.min = stjs.trunc(scores["min"]);
    this.max = stjs.trunc(scores["max"]);
    this.raw = stjs.trunc(scores["raw"]);
    this.response = result["response"];
    this.prompt = XApiUtils.getObjectName(o);
    var objDef = o["object"];
    objDef = objDef["definition"];
    this.answers = this.getChoices(objDef);
};
Question = stjs.extend(Question, TimeSeriesData, [], function(constructor, prototype) {
    prototype.raw = 0;
    prototype.min = 0;
    prototype.max = 0;
    prototype.activityId = null;
    prototype.completion = false;
    prototype.success = false;
    prototype.answers = null;
    prototype.prompt = null;
    prototype.response = null;
    prototype.getChoice = function(objDef) {
        return (objDef["description"])["en-US"];
    };
    prototype.getChoices = function(objDef) {
        var choices = objDef["choices"];
        var results = [];
        for (var i = 0; i < choices.length; i++) 
            results.push(this.getChoice(choices[i]));
        return results;
    };
    constructor.is = function(record) {
        var verb = XApiUtils.getVerb(record);
        return verb == "answered";
    };
}, {answers: {name: "Array", arguments: [null]}, timestamp: "Date", stmt: {name: "Map", arguments: [null, "Object"]}}, {});
var SharedAnnotation = function(o) {
    TimeSeriesData.call(this);
    this.stmt = o;
    var annotationData;
    var dateKey;
    if (o["object"] != null) {
        annotationData = JSON.parse(XApiUtils.getObjectDescription(o));
        dateKey = TimeSeriesData.KEY_TIMESTAMP;
        var temp = XApiUtils.getObjectId(o);
        if (temp.lastIndexOf("/") != -1) 
            this.containerPath = temp.substring(temp.lastIndexOf("/") + 1);
         else 
            this.containerPath = temp;
        this.parentActivity = XApiUtils.getParentActivity(o);
        this.verb = XApiUtils.getVerb(o);
        this.actorId = XApiUtils.getActorId(o);
        this.owner = XApiUtils.getActorId(o);
    } else {
        annotationData = o;
        dateKey = SharedAnnotation.KEY_DATE;
        this.containerPath = annotationData[SharedAnnotation.KEY_CONTAINER_PATH];
        var parent = annotationData[TimeSeriesData.KEY_PARENT_ACTIVITY];
        if ((parent != null) && (parent != "")) 
            this.parentActivity = parent;
         else 
            this.parentActivity = this.containerPath;
        this.verb = "shared";
        this.owner = "N/A";
    }
    this.id = o[TimeSeriesData.KEY_XID];
    this.annId = stjs.trunc(annotationData[SharedAnnotation.KEY_ID]);
    this.type = stjs.trunc(annotationData[SharedAnnotation.KEY_TYPE]);
    this.cfi = annotationData[SharedAnnotation.KEY_CFI];
    this.idRef = annotationData[SharedAnnotation.KEY_IDREF];
    this.title = annotationData[SharedAnnotation.KEY_TITLE];
    this.style = stjs.trunc(annotationData[SharedAnnotation.KEY_STYLE]);
    this.text = annotationData[SharedAnnotation.KEY_TEXT];
    this.timestamp = new Date(o[dateKey]);
};
SharedAnnotation = stjs.extend(SharedAnnotation, TimeSeriesData, [], function(constructor, prototype) {
    constructor.TYPE_BOOKMARK = 1;
    constructor.TYPE_HIGHLIGHT = 2;
    constructor.TYPE_NOTE = 3;
    constructor.KEY_ID = "AnnID";
    constructor.KEY_TYPE = "Type";
    constructor.KEY_CFI = "CFI";
    constructor.KEY_CONTAINER_PATH = "ContainerPath";
    constructor.KEY_IDREF = "IDRef";
    constructor.KEY_TITLE = "Title";
    constructor.KEY_STYLE = "Style";
    constructor.KEY_TEXT = "Text";
    constructor.KEY_DATE = "Date";
    constructor.KEY_OWNER = "Owner";
    prototype.verb = null;
    prototype.annId = 0;
    prototype.type = 0;
    prototype.cfi = null;
    prototype.containerPath = null;
    prototype.idRef = null;
    prototype.title = null;
    prototype.style = 0;
    prototype.text = null;
    prototype.owner = null;
    prototype.pack = function() {
        var result = {};
        result[SharedAnnotation.KEY_ID] = this.annId;
        result[SharedAnnotation.KEY_CFI] = this.cfi;
        result[SharedAnnotation.KEY_TYPE] = this.type;
        result[SharedAnnotation.KEY_IDREF] = this.idRef;
        result[SharedAnnotation.KEY_TITLE] = this.title;
        result[SharedAnnotation.KEY_STYLE] = this.style;
        result[SharedAnnotation.KEY_TEXT] = this.text;
        result[SharedAnnotation.KEY_OWNER] = this.owner;
        return JSON.stringify(result);
    };
    prototype.toObject = function() {
        var result = {};
        result[TimeSeriesData.KEY_XID] = this.id;
        result[SharedAnnotation.KEY_ID] = this.annId;
        result[SharedAnnotation.KEY_CFI] = this.cfi;
        result[SharedAnnotation.KEY_TYPE] = this.type;
        result[SharedAnnotation.KEY_CONTAINER_PATH] = this.containerPath;
        result[TimeSeriesData.KEY_PARENT_ACTIVITY] = this.parentActivity;
        result[SharedAnnotation.KEY_IDREF] = this.idRef;
        result[SharedAnnotation.KEY_TITLE] = this.title;
        result[SharedAnnotation.KEY_STYLE] = this.style;
        result[SharedAnnotation.KEY_TEXT] = this.text;
        result[SharedAnnotation.KEY_DATE] = EcDate.toISOString(this.timestamp);
        result[SharedAnnotation.KEY_OWNER] = this.owner;
        return result;
    };
    constructor.is = function(record) {
        var verb = XApiUtils.getVerb(record);
        return (verb == "shared");
    };
}, {timestamp: "Date", stmt: {name: "Map", arguments: [null, "Object"]}}, {});
var Annotation = function(o) {
    TimeSeriesData.call(this);
    this.stmt = o;
    var annotationData;
    var dateKey;
    if (o["object"] != null) {
        annotationData = JSON.parse(XApiUtils.getObjectDescription(o));
        dateKey = TimeSeriesData.KEY_TIMESTAMP;
        var temp = XApiUtils.getObjectId(o);
        if (temp.lastIndexOf("/") != -1) 
            this.containerPath = temp.substring(temp.lastIndexOf("/") + 1);
         else 
            this.containerPath = temp;
        this.parentActivity = XApiUtils.getParentActivity(o);
        this.verb = XApiUtils.getVerb(o);
        this.actorId = XApiUtils.getActorId(o);
        this.owner = XApiUtils.getActorId(o);
    } else {
        annotationData = o;
        dateKey = Annotation.KEY_DATE;
        this.containerPath = annotationData[Annotation.KEY_CONTAINER_PATH];
        var parent = annotationData[TimeSeriesData.KEY_PARENT_ACTIVITY];
        if ((parent != null) && (parent != "")) 
            this.parentActivity = parent;
         else 
            this.parentActivity = this.containerPath;
        this.verb = "commented";
        this.owner = "N/A";
    }
    this.id = o[TimeSeriesData.KEY_XID];
    this.annId = stjs.trunc(annotationData[Annotation.KEY_ID]);
    this.type = stjs.trunc(annotationData[Annotation.KEY_TYPE]);
    this.cfi = annotationData[Annotation.KEY_CFI];
    this.idRef = annotationData[Annotation.KEY_IDREF];
    this.title = annotationData[Annotation.KEY_TITLE];
    this.style = stjs.trunc(annotationData[Annotation.KEY_STYLE]);
    this.text = annotationData[Annotation.KEY_TEXT];
    this.timestamp = new Date(o[dateKey]);
};
Annotation = stjs.extend(Annotation, TimeSeriesData, [], function(constructor, prototype) {
    constructor.TYPE_BOOKMARK = 1;
    constructor.TYPE_HIGHLIGHT = 2;
    constructor.TYPE_NOTE = 3;
    constructor.KEY_ID = "AnnID";
    constructor.KEY_TYPE = "Type";
    constructor.KEY_CFI = "CFI";
    constructor.KEY_CONTAINER_PATH = "ContainerPath";
    constructor.KEY_IDREF = "IDRef";
    constructor.KEY_TITLE = "Title";
    constructor.KEY_STYLE = "Style";
    constructor.KEY_TEXT = "Text";
    constructor.KEY_DATE = "Date";
    constructor.KEY_OWNER = "Owner";
    prototype.verb = null;
    prototype.annId = 0;
    prototype.type = 0;
    prototype.cfi = null;
    prototype.containerPath = null;
    prototype.idRef = null;
    prototype.title = null;
    prototype.style = 0;
    prototype.text = null;
    prototype.owner = null;
    prototype.pack = function() {
        var result = {};
        result[Annotation.KEY_ID] = this.annId;
        result[Annotation.KEY_CFI] = this.cfi;
        result[Annotation.KEY_TYPE] = this.type;
        result[Annotation.KEY_IDREF] = this.idRef;
        result[Annotation.KEY_TITLE] = this.title;
        result[Annotation.KEY_STYLE] = this.style;
        result[Annotation.KEY_TEXT] = this.text;
        result[Annotation.KEY_OWNER] = this.owner;
        return JSON.stringify(result);
    };
    prototype.toObject = function() {
        var result = {};
        result[TimeSeriesData.KEY_XID] = this.id;
        result[Annotation.KEY_ID] = this.annId;
        result[Annotation.KEY_CFI] = this.cfi;
        result[Annotation.KEY_TYPE] = this.type;
        result[Annotation.KEY_CONTAINER_PATH] = this.containerPath;
        result[TimeSeriesData.KEY_PARENT_ACTIVITY] = this.parentActivity;
        result[Annotation.KEY_IDREF] = this.idRef;
        result[Annotation.KEY_TITLE] = this.title;
        result[Annotation.KEY_STYLE] = this.style;
        result[Annotation.KEY_TEXT] = this.text;
        result[Annotation.KEY_DATE] = EcDate.toISOString(this.timestamp);
        result[Annotation.KEY_OWNER] = this.owner;
        return result;
    };
    constructor.is = function(record) {
        var verb = XApiUtils.getVerb(record);
        return (verb == "commented");
    };
}, {timestamp: "Date", stmt: {name: "Map", arguments: [null, "Object"]}}, {});
var LocalAssetAdapter = function(userManager, storageManager, activityManager) {
    this.userManager = userManager;
    this.storageManager = storageManager;
    this.activityManager = activityManager;
    var self = this;
    this.syncAssets = function() {
        self.storageManager.getQueuedReference(self.userManager.getUser(), function(r) {
            if (r != null) 
                self.pull(r, function() {
                    self.storageManager.removeQueuedReference(self.userManager.getUser(), r.id);
                });
             else if (self.running) 
                self.pending = setTimeout(self.syncAssets, 1000);
        });
    };
    this.startSync();
};
LocalAssetAdapter = stjs.extend(LocalAssetAdapter, null, [AssetAdapter], function(constructor, prototype) {
    prototype.userManager = null;
    prototype.storageManager = null;
    prototype.activityManager = null;
    prototype.running = false;
    prototype.pending = null;
    prototype.notificationHook = null;
    prototype.syncAssets = null;
    prototype.startSync = function() {
        this.running = true;
        if (this.pending != null) 
            clearTimeout(this.pending);
        this.syncAssets();
    };
    prototype.stopSync = function() {
        this.running = false;
        if (this.pending != null) 
            clearTimeout(this.pending);
    };
    prototype.setHookCallback = function(callback) {
        this.notificationHook = callback;
    };
    prototype.queue = function(ref) {
        this.storageManager.saveQueuedReference(this.userManager.getUser(), ref);
    };
    prototype.pull = function(ref, finished) {
        var xmr = new XMLHttpRequest();
        var self = this;
        xmr.onreadystatechange = function() {
            if (xmr.readyState == 4) {
                if (xmr.status >= 200) {
                    self.storageManager.addNotification(self.userManager.getUser(), new Notification("Success", ref));
                    var tocEntry = {};
                    tocEntry["url"] = ref.url;
                    tocEntry["documentName"] = ref.name;
                    tocEntry["section"] = ref.location;
                    tocEntry["pageKey"] = ref.id;
                    tocEntry["docType"] = ref.docType;
                    tocEntry["card"] = ref.card;
                    tocEntry["externalURL"] = ref.externalURL;
                    self.storageManager.addToc(self.userManager.getUser(), ref.book, tocEntry);
                    if (self.notificationHook != null) 
                        self.notificationHook(ref);
                } else 
                    self.storageManager.addNotification(self.userManager.getUser(), new Notification("Failed", ref));
                if (finished != null) 
                    finished();
                if (self.running) 
                    self.pending = setTimeout(self.syncAssets, 500);
            }
        };
        xmr.open("GET", "https://peblproject.com/registry/api/downloadContent?guid=" + ref.url, true);
        xmr.send();
    };
}, {userManager: "UserAdapter", storageManager: "StorageAdapter", activityManager: "ActivityAdapter", pending: "TimeoutHandler", notificationHook: {name: "Callback1", arguments: ["TimeSeriesData"]}, syncAssets: "Callback0"}, {});
var SyncAction = function(endpoint, repeat, userManager, storage, activityManager, assetManager, teacher) {
    this.endpoint = endpoint;
    this.repeat = repeat;
    this.userManager = userManager;
    this.storage = storage;
    this.activityManager = activityManager;
    this.assetManager = assetManager;
    this.teacher = teacher;
    var sa = this;
    this.bookMinePollingCallback = function() {
        var containerPath = sa.activityManager.getBook();
        if (containerPath != null) {
            var lastSynced = sa.endpoint.lastSyncedBooksMine[containerPath];
            if (lastSynced == null) 
                lastSynced = "2017-06-05T21:07:49-07:00";
            sa.pullBookMine(lastSynced, containerPath, sa.teacher);
        } else if (sa.repeat) 
            sa.bookMinePoll = setTimeout(sa.bookMinePollingCallback, 5000);
    };
    this.bookSharedPollingCallback = function() {
        var containerPath = sa.activityManager.getBook();
        if (containerPath != null) {
            var lastSynced = sa.endpoint.lastSyncedBooksShared[containerPath];
            if (lastSynced == null) 
                lastSynced = "2017-06-05T21:07:49-07:00";
            sa.pullBookShared(lastSynced, containerPath);
        } else if (sa.repeat) 
            sa.bookSharedPoll = setTimeout(sa.bookSharedPollingCallback, 5000);
    };
    this.chatPollingCallback = function() {
        var threads = sa.activityManager.getThreads();
        sa.pulledThread = {};
        for (var thread in threads) 
            sa.pulledThread[thread] = false;
        var i = 0;
        for (var thread in threads) {
            i++;
            var lastSynced = sa.endpoint.lastSyncedThreads[thread];
            if (lastSynced == null) 
                lastSynced = "2017-06-05T21:07:49-07:00";
            sa.pullMessages(lastSynced, thread, threads[thread]);
        }
        if ((i == 0) && sa.repeat) 
            sa.chatPoll = setTimeout(sa.chatPollingCallback, 2000);
    };
    this.pull();
};
SyncAction = stjs.extend(SyncAction, null, [SyncProcess], function(constructor, prototype) {
    prototype.bookMinePoll = null;
    prototype.bookSharedPoll = null;
    prototype.chatPoll = null;
    prototype.bookMinePollingCallback = null;
    prototype.bookSharedPollingCallback = null;
    prototype.chatPollingCallback = null;
    prototype.pulledThread = null;
    prototype.endpoint = null;
    prototype.terminated = false;
    prototype.repeat = false;
    prototype.userManager = null;
    prototype.storage = null;
    prototype.activityManager = null;
    prototype.assetManager = null;
    prototype.teacher = false;
    prototype.clearTimeouts = function() {
        if (this.bookMinePoll != null) 
            clearTimeout(this.bookMinePoll);
        this.bookMinePoll = null;
        if (this.bookSharedPoll != null) 
            clearTimeout(this.bookSharedPoll);
        this.bookSharedPoll = null;
        if (this.chatPoll != null) 
            clearTimeout(this.chatPoll);
        this.chatPoll = null;
    };
    prototype.pull = function() {
        this.terminated = false;
        this.clearTimeouts();
        this.bookMinePollingCallback();
        this.bookSharedPollingCallback();
        this.chatPollingCallback();
    };
    prototype.terminate = function() {
        this.terminated = true;
        this.clearTimeouts();
    };
    prototype.pullHelper = function(searchParams, callback) {
        var sa = this;
        ADL.XAPIWrapper.changeConfig(this.endpoint.toConfigObject("data/xapi/"));
        ADL.XAPIWrapper.getStatements(searchParams, "", function(xhr) {
            if (xhr.readyState == 4) {
                var results = [];
                if (xhr.status == 200) {
                    if (!sa.terminated) {
                        var response = JSON.parse(xhr.responseText);
                        results = (response["statements"]);
                    }
                }
                callback(results);
            }
        });
    };
    prototype.pullMessages = function(lastSynced, thread, callback) {
        var sa = this;
        var params = ADL.XAPIWrapper.searchParams();
        params["activity"] = "peblThread://" + thread;
        params["ascending"] = "true";
        params["since"] = lastSynced;
        params["limit"] = 1500;
        this.pullHelper(params, function(items) {
            var lastSyncedDate = new Date(lastSynced);
            var deleteIds = [];
            var messages = {};
            for (var i = 0; i < items.length; i++) {
                var xapi = items[i];
                var id = xapi["id"];
                if (Message.is(xapi)) 
                    messages[id] = new Message(xapi);
                 else if (Reference.is(xapi)) {
                    var r = new Reference(xapi);
                    sa.assetManager.queue(r);
                    messages[id] = r;
                } else if (Voided.is(xapi)) {
                    var v = new Voided(xapi);
                    deleteIds.push(v.target);
                }
                var temp = new Date(xapi["stored"]);
                if (lastSyncedDate.getTime() < temp.getTime()) 
                    lastSyncedDate = temp;
            }
            sa.storage.postMessages(sa.userManager.getUser(), thread, items);
            for (var x = 0; x < deleteIds.length; x++) {
                var id = deleteIds[x];
                var up = sa.userManager.getUser();
                delete messages[id];
                sa.storage.removeMessage(up, id, thread);
            }
            var cleanMessages = [];
            for (var key in messages) 
                cleanMessages.push(messages[key]);
            XApiUtils.sortNewestTimeSeries(cleanMessages);
            if (lastSyncedDate.getTime() > new Date(lastSynced).getTime()) {
                lastSyncedDate.setMilliseconds(stjs.trunc(lastSyncedDate.getMilliseconds()) + 1);
                sa.endpoint.lastSyncedThreads[thread] = EcDate.toISOString(lastSyncedDate);
                sa.storage.saveUserProfile(sa.userManager.getUser());
            }
            sa.pulledThread[thread] = true;
            if (sa.repeat) {
                var finished = true;
                for (var key in sa.pulledThread) 
                    if (!sa.pulledThread[key]) {
                        finished = false;
                        break;
                    }
                if (finished) 
                    sa.chatPoll = setTimeout(sa.chatPollingCallback, 2000);
            }
            if (callback != null) 
                callback(cleanMessages);
        });
    };
    prototype.pullBookMine = function(lastSynced, containerPath, teacher) {
        var sa = this;
        var params = ADL.XAPIWrapper.searchParams();
        params["activity"] = "pebl://" + containerPath;
        params["since"] = lastSynced;
        params["limit"] = 1500;
        params["ascending"] = "true";
        if (!teacher) 
            params["agent"] = JSON.stringify(sa.userManager.getUser().generateAgent());
        this.pullHelper(params, function(items) {
            var lastSyncedDate = new Date(lastSynced);
            var annotations = [];
            var generalAnnotations = [];
            var events = [];
            var deleteIds = [];
            for (var i = 0; i < items.length; i++) {
                var xapi = items[i];
                if (Annotation.is(xapi)) 
                    annotations.push(xapi);
                 else if (SharedAnnotation.is(xapi)) 
                    generalAnnotations.push(xapi);
                 else if (Voided.is(xapi)) {
                    var v = new Voided(xapi);
                    deleteIds.push(v.target);
                } else 
                    events.push(xapi);
                var temp = new Date(xapi["stored"]);
                if (lastSyncedDate.getTime() < temp.getTime()) 
                    lastSyncedDate = temp;
            }
            sa.storage.saveAnnotations(sa.userManager.getUser(), containerPath, annotations);
            sa.storage.saveGeneralAnnotations(sa.userManager.getUser(), containerPath, generalAnnotations);
            sa.storage.saveEvents(sa.userManager.getUser(), containerPath, events);
            for (var x = 0; x < deleteIds.length; x++) {
                var id = deleteIds[x];
                var up = sa.userManager.getUser();
                sa.storage.removeSharedAnnotation(up, id);
                sa.storage.removeAnnotation(up, id, containerPath);
            }
            if (lastSyncedDate.getTime() > new Date(lastSynced).getTime()) {
                lastSyncedDate.setMilliseconds(stjs.trunc(lastSyncedDate.getMilliseconds()) + 1);
                sa.endpoint.lastSyncedBooksMine[containerPath] = EcDate.toISOString(lastSyncedDate);
                sa.storage.saveUserProfile(sa.userManager.getUser());
            }
            if (sa.repeat) 
                sa.bookMinePoll = setTimeout(sa.bookMinePollingCallback, 5000);
        });
    };
    prototype.pullBookShared = function(lastSynced, containerPath) {
        var sa = this;
        var params = ADL.XAPIWrapper.searchParams();
        params["limit"] = 1500;
        params["since"] = lastSynced;
        params["ascending"] = "true";
        params["verb"] = "http://adlnet.gov/expapi/verbs/shared";
        this.pullHelper(params, function(items) {
            var lastSyncedDate = new Date(lastSynced);
            var deleteIds = [];
            var gaMap = {};
            for (var i = 0; i < items.length; i++) {
                var xapi = items[i];
                if (SharedAnnotation.is(xapi)) {
                    var tempCp = XApiUtils.getObjectId(xapi);
                    var cp;
                    if (tempCp.lastIndexOf("/") != -1) 
                        cp = tempCp.substring(tempCp.lastIndexOf("/") + 1);
                     else 
                        cp = tempCp;
                    if (gaMap[cp] == null) 
                        gaMap[cp] = [];
                    gaMap[cp].push(xapi);
                } else if (Voided.is(xapi)) {
                    var v = new Voided(xapi);
                    deleteIds.push(v.target);
                }
                var temp = new Date(xapi["stored"]);
                if (lastSyncedDate.getTime() < temp.getTime()) 
                    lastSyncedDate = temp;
            }
            for (var cp in gaMap) 
                sa.storage.saveGeneralAnnotations(sa.userManager.getUser(), cp, gaMap[cp]);
            for (var x = 0; x < deleteIds.length; x++) {
                var id = deleteIds[x];
                var up = sa.userManager.getUser();
                sa.storage.removeSharedAnnotation(up, id);
            }
            if (lastSyncedDate.getTime() > new Date(lastSynced).getTime()) {
                lastSyncedDate.setMilliseconds(stjs.trunc(lastSyncedDate.getMilliseconds()) + 1);
                sa.endpoint.lastSyncedBooksShared[containerPath] = EcDate.toISOString(lastSyncedDate);
                sa.storage.saveUserProfile(sa.userManager.getUser());
            }
            if (sa.repeat) 
                sa.bookSharedPoll = setTimeout(sa.bookSharedPollingCallback, 5000);
        });
    };
    prototype.push = function(outgoing, callback) {
        var sa = this;
        if (outgoing == null) 
            outgoing = [];
        ADL.XAPIWrapper.changeConfig(this.endpoint.toConfigObject("data/xapi/"));
        ADL.XAPIWrapper.sendStatements(outgoing, function(xhr) {
            if (xhr.readyState == 4) {
                var success = xhr.status == 200;
                if (!success) 
                    Debugger.debug(sa.endpoint.url + ", " + xhr.status);
                if (callback != null) 
                    callback(sa.endpoint, success);
            }
        });
    };
}, {bookMinePoll: "TimeoutHandler", bookSharedPoll: "TimeoutHandler", chatPoll: "TimeoutHandler", bookMinePollingCallback: "Callback0", bookSharedPollingCallback: "Callback0", chatPollingCallback: "Callback0", pulledThread: {name: "Map", arguments: [null, null]}, endpoint: "Endpoint", userManager: "UserAdapter", storage: "StorageAdapter", activityManager: "ActivityAdapter", assetManager: "AssetAdapter"}, {});
var LLSyncAction = function(endpoint, repeat, userManager, storage, activityManager, assetManager, teacher) {
    this.endpoint = endpoint;
    this.repeat = repeat;
    this.userManager = userManager;
    this.storage = storage;
    this.activityManager = activityManager;
    this.assetManager = assetManager;
    this.teacher = teacher;
    var sa = this;
    this.bookPollingCallback = function() {
        var containerPath = sa.activityManager.getBook();
        if (containerPath != null) {
            var lastSynced = sa.endpoint.lastSyncedBooksMine[containerPath];
            if (lastSynced == null) 
                lastSynced = "2017-06-05T21:07:49-07:00";
            sa.pullBook(lastSynced, containerPath, sa.teacher);
        } else if (sa.repeat) 
            sa.bookMinePoll = setTimeout(sa.bookPollingCallback, 5000);
    };
    this.chatPollingCallback = function() {
        var threadCallbacks = sa.activityManager.getThreads();
        var threadPairs = [];
        for (var thread in threadCallbacks) {
            var timeStr = sa.endpoint.lastSyncedThreads[thread];
            var timestamp = timeStr == null ? "2017-06-05T21:07:49-07:00" : timeStr;
            sa.endpoint.lastSyncedThreads[thread] = timestamp;
            var record = {};
            record["statement.stored"] = {"$gt": timestamp};
            record["statement.object.id"] = "peblThread://" + thread;
            threadPairs.push(record);
        }
        var params = {"$or": threadPairs};
        if ((threadPairs.length == 0) && sa.repeat) 
            sa.chatPoll = setTimeout(sa.chatPollingCallback, 2000);
         else 
            sa.pullMessages(params, threadCallbacks);
    };
    this.llAPI = new LearningLockerAPI();
    this.pull();
};
LLSyncAction = stjs.extend(LLSyncAction, null, [SyncProcess], function(constructor, prototype) {
    prototype.bookMinePoll = null;
    prototype.chatPoll = null;
    prototype.bookPollingCallback = null;
    prototype.chatPollingCallback = null;
    prototype.endpoint = null;
    prototype.terminated = false;
    prototype.repeat = false;
    prototype.userManager = null;
    prototype.storage = null;
    prototype.activityManager = null;
    prototype.assetManager = null;
    prototype.llAPI = null;
    prototype.teacher = false;
    prototype.clearTimeouts = function() {
        if (this.bookMinePoll != null) 
            clearTimeout(this.bookMinePoll);
        this.bookMinePoll = null;
        if (this.chatPoll != null) 
            clearTimeout(this.chatPoll);
        this.chatPoll = null;
    };
    prototype.pull = function() {
        this.terminated = false;
        this.clearTimeouts();
        this.bookPollingCallback();
        this.chatPollingCallback();
    };
    prototype.terminate = function() {
        this.terminated = true;
        this.clearTimeouts();
    };
    prototype.pullHelper = function(searchParams, callback) {
        this.llAPI.pull(this.endpoint, searchParams, callback);
    };
    prototype.pullMessages = function(matchParams, callbacks) {
        var sa = this;
        var pipeline = [];
        var query = {};
        var projection = {"statement": 1, "_id": 0, "voided": 1};
        query["$match"] = matchParams;
        pipeline.push({"$sort": {"stored": -1, "_id": 1}});
        pipeline.push(query);
        pipeline.push({"$limit": 1500});
        pipeline.push({"$project": projection});
        this.pullHelper(pipeline, function(items) {
            var buckets = {};
            var deleteIds = [];
            for (var i = 0; i < items.length; i++) {
                var xapi = items[i];
                var id = xapi["id"];
                var thread = null;
                var tsd = null;
                if (Message.is(xapi)) {
                    var m = new Message(xapi);
                    thread = m.thread;
                    tsd = m;
                } else if (Reference.is(xapi)) {
                    var r = new Reference(xapi);
                    sa.assetManager.queue(r);
                    tsd = r;
                    thread = r.thread;
                } else if (Voided.is(xapi)) {
                    var v = new Voided(xapi);
                    deleteIds.push(v);
                    thread = v.thread;
                }
                if (thread != null) {
                    if (tsd != null) {
                        var stmts = buckets[thread];
                        if (stmts == null) {
                            stmts = {};
                            buckets[thread] = stmts;
                        }
                        stmts[tsd.id] = tsd;
                    }
                    var temp = new Date(xapi["stored"]);
                    var lastSyncedDate = new Date(sa.endpoint.lastSyncedThreads[thread]);
                    if (lastSyncedDate.getTime() < temp.getTime()) 
                        sa.endpoint.lastSyncedThreads[thread] = EcDate.toISOString(temp);
                }
            }
            for (var i = 0; i < deleteIds.length; i++) {
                var v = deleteIds[i];
                var thread = v.thread;
                var bucket = buckets[thread];
                if (bucket != null) {
                    delete bucket[v.target];
                }
                sa.storage.removeMessage(sa.userManager.getUser(), v.target, thread);
            }
            var up = sa.userManager.getUser();
            for (var thread in buckets) {
                var bucket = buckets[thread];
                var cleanMessages = [];
                var cleanXAPIMessages = [];
                for (var messageId in bucket) {
                    cleanMessages.push(bucket[messageId]);
                    cleanXAPIMessages.push(bucket[messageId].stmt);
                }
                TimeSeriesData.sort(cleanMessages, false);
                sa.storage.postMessages(up, thread, cleanXAPIMessages);
                var callback = callbacks[thread];
                if (callback != null) 
                    callback(cleanMessages);
            }
            sa.storage.saveUserProfile(sa.userManager.getUser());
            if (sa.repeat) 
                sa.chatPoll = setTimeout(sa.chatPollingCallback, 2000);
        });
    };
    prototype.pullBook = function(lastSynced, containerPath, teacher) {
        var sa = this;
        var pipeline = [];
        var query = {};
        var projection = {"statement": 1, "_id": 0, "voided": 1};
        var teacherPack = {"statement.object.id": "pebl://" + containerPath, "statement.stored": {"$gt": lastSynced}};
        var pairs = [teacherPack, {"statement.object.id": "pebl://" + containerPath, "statement.stored": {"$gt": lastSynced}, "statement.verb.id": "http://adlnet.gov/expapi/verbs/shared"}];
        if (!teacher) {
            teacherPack["agents"] = sa.userManager.getUser().getHomePage() + "|" + sa.userManager.getUser().getIdentity();
        }
        query["$match"] = {"$or": pairs};
        pipeline.push({"$sort": {"stored": -1, "_id": 1}});
        pipeline.push(query);
        pipeline.push({"$limit": 1500});
        pipeline.push({"$project": projection});
        this.pullHelper(pipeline, function(items) {
            Debugger.debug("s");
            var lastSyncedDate = new Date(lastSynced);
            var annotations = {};
            var generalAnnotations = {};
            var events = {};
            var deleteIds = [];
            for (var i = 0; i < items.length; i++) {
                var xapi = items[i];
                if (Annotation.is(xapi)) {
                    annotations[xapi["id"]] = xapi;
                } else if (SharedAnnotation.is(xapi)) 
                    generalAnnotations[xapi["id"]] = xapi;
                 else if (Voided.is(xapi)) {
                    var v = new Voided(xapi);
                    deleteIds.push(v);
                } else 
                    events[xapi["id"]] = xapi;
                var temp = new Date(xapi["stored"]);
                if (lastSyncedDate.getTime() < temp.getTime()) 
                    lastSyncedDate = temp;
            }
            for (var x = 0; x < deleteIds.length; x++) {
                var v = deleteIds[x];
                var id = v.id;
                var up = sa.userManager.getUser();
                sa.storage.removeSharedAnnotation(up, id);
                sa.storage.removeAnnotation(up, id, containerPath);
                delete annotations[v.target];
                delete generalAnnotations[v.target];
            }
            var cleanAnnotations = [];
            var cleanGeneralAnnotations = [];
            var cleanEvents = [];
            for (var key in annotations) 
                cleanAnnotations.push(annotations[key]);
            for (var key in generalAnnotations) 
                cleanGeneralAnnotations.push(generalAnnotations[key]);
            for (var key in events) 
                cleanEvents.push(events[key]);
            sa.storage.saveAnnotations(sa.userManager.getUser(), containerPath, cleanAnnotations);
            sa.storage.saveGeneralAnnotations(sa.userManager.getUser(), containerPath, cleanGeneralAnnotations);
            sa.storage.saveEvents(sa.userManager.getUser(), containerPath, cleanEvents);
            if (lastSyncedDate.getTime() > new Date(lastSynced).getTime()) {
                sa.endpoint.lastSyncedBooksMine[containerPath] = EcDate.toISOString(lastSyncedDate);
                sa.storage.saveUserProfile(sa.userManager.getUser());
            }
            if (sa.repeat) 
                sa.bookMinePoll = setTimeout(sa.bookPollingCallback, 5000);
        });
    };
    prototype.push = function(outgoing, callback) {
        var sa = this;
        if (outgoing == null) 
            outgoing = [];
        ADL.XAPIWrapper.changeConfig(this.endpoint.toConfigObject("data/xapi/"));
        ADL.XAPIWrapper.sendStatements(outgoing, function(xhr) {
            if (xhr.readyState == 4) {
                var success = xhr.status == 200;
                if (!success) 
                    Debugger.debug(sa.endpoint.url + ", " + xhr.status);
                if (callback != null) 
                    callback(sa.endpoint, success);
            }
        });
    };
}, {bookMinePoll: "TimeoutHandler", chatPoll: "TimeoutHandler", bookPollingCallback: "Callback0", chatPollingCallback: "Callback0", endpoint: "Endpoint", userManager: "UserAdapter", storage: "StorageAdapter", activityManager: "ActivityAdapter", assetManager: "AssetAdapter", llAPI: "LearningLockerAPI"}, {});
var LocalNetworkAdapter = function(userManager, storage, activityManager, assetManager, TLAEnabled) {
    this.TLAEnabled = TLAEnabled;
    this.userManager = userManager;
    this.storage = storage;
    this.activityManager = activityManager;
    this.assetManager = assetManager;
    this.repeat = false;
    this.endpointHandlers = [];
    var lna = this;
    ADL.xhrRequestOnError = function(xhr, method, uri, callback, o5) {
        Debugger.debug(xhr.status + ", " + xhr.statusText + ", " + xhr.responseText + ", " + xhr.getAllResponseHeaders());
        if ((xhr.status == 409) && (xhr.statusText == "Conflict")) {
            var payload = xhr.responseText;
            if ((payload.indexOf("ID") != -1) && (payload.indexOf("already") != -1)) {
                var id = payload.substring(payload.indexOf("ID") + "ID ".length, payload.indexOf("already"));
                var toDelete = [];
                var xapi = new ADL.XAPIStatement();
                xapi["id"] = id.trim();
                toDelete.push(xapi);
                lna.storage.clearOutgoing(lna.userManager.getUser(), toDelete);
            }
        }
        if (lna.errorHandle != null) {
            clearTimeout(lna.errorHandle);
        }
        lna.errorHandle = setTimeout(function() {
            if (callback != null) 
                callback(xhr);
        }, 3000);
    };
};
LocalNetworkAdapter = stjs.extend(LocalNetworkAdapter, null, [NetworkAdapter], function(constructor, prototype) {
    prototype.competencyPolling = null;
    prototype.pushPolling = null;
    prototype.recoveryPolling = null;
    prototype.competencyRequest = null;
    prototype.userManager = null;
    prototype.storage = null;
    prototype.activityManager = null;
    prototype.assetManager = null;
    prototype.endpointHandlers = null;
    prototype.repeat = false;
    prototype.TLAEnabled = false;
    prototype.teacher = false;
    prototype.errorHandle = null;
    prototype.pullCompetencies = function() {
        var lna = this;
        this.competencyRequest = new XMLHttpRequest();
        this.competencyRequest.onreadystatechange = function() {
            if (lna.competencyRequest.readyState == 4) {
                if (lna.competencyRequest.status == 200) {
                    var result = JSON.parse(lna.competencyRequest.responseText);
                    var collapsed = {};
                    for (var i = 0; i < result.length; i++) {
                        var pair = result[i];
                        var obj = pair[1];
                        var temp = pair[0]["url"];
                        collapsed[temp.substring(0, temp.lastIndexOf("/"))] = obj;
                    }
                    lna.storage.setCompetencies(lna.userManager.getUser(), collapsed);
                }
                if (lna.repeat) 
                    lna.competencyPolling = setTimeout(function() {
                        lna.pullCompetencies();
                    }, 120000);
            }
        };
        this.competencyRequest.open("GET", "https://cass.tla.cassproject.org/api/custom/learner/competency?userId=" + this.userManager.getUser().getIdentity() + "&framework=https%3A%2F%2Fcass.tla.cassproject.org%2Fapi%2Fcustom%2Fdata%2Fschema.cassproject.org.0.2.Framework%2F012e77e0-3a47-4b24-bb12-370a76ac2adc", true);
        this.competencyRequest.send();
    };
    prototype.push = function(finished) {
        var lna = this;
        this.storage.getOutgoing(this.userManager.getUser(), function(outgoing) {
            if (outgoing.length > 0) {
                if (lna.endpointHandlers.length == 1) 
                    lna.endpointHandlers[0].push(outgoing, function(endpoint, success) {
                        if (success) {
                            lna.storage.clearOutgoing(lna.userManager.getUser(), outgoing);
                        }
                        if (lna.repeat) 
                            lna.pushPolling = setTimeout(function() {
                                lna.push(null);
                            }, 5000);
                        if (finished != null) 
                            finished();
                    });
            } else {
                if (lna.repeat) {
                    lna.pushPolling = setTimeout(function() {
                        lna.push(null);
                    }, 5000);
                }
                if (finished != null) 
                    finished();
            }
        });
    };
    prototype.activate = function(teacher) {
        this.teacher = teacher;
        for (var i = 0; i < this.endpointHandlers.length; i++) 
            this.endpointHandlers[i].terminate();
        this.endpointHandlers = [];
        if (this.TLAEnabled) {
            if (this.competencyRequest != null) 
                this.competencyRequest.abort();
            if (this.competencyPolling != null) {
                clearTimeout(this.competencyPolling);
                this.competencyPolling = null;
            }
        }
        if (this.pushPolling != null) {
            clearTimeout(this.pushPolling);
            this.pushPolling = null;
        }
        this.repeat = true;
        this.assetManager.startSync();
        var endpoints = this.userManager.getUser().getLrsUrls();
        for (var key in endpoints) 
            this.endpointHandlers.push(new LLSyncAction(endpoints[key], true, this.userManager, this.storage, this.activityManager, this.assetManager, teacher));
        if (false) 
            this.pullCompetencies();
        this.push(null);
    };
    prototype.disable = function(finished) {
        var lna = this;
        this.repeat = false;
        if (this.TLAEnabled) {
            if (this.competencyRequest != null) 
                this.competencyRequest.abort();
            if (this.competencyPolling != null) {
                clearTimeout(this.competencyPolling);
                this.competencyPolling = null;
            }
        }
        if (this.pushPolling != null) {
            clearTimeout(this.pushPolling);
            this.pushPolling = null;
        }
        this.push(function() {
            for (var i = 0; i < lna.endpointHandlers.length; i++) 
                lna.endpointHandlers[i].terminate();
            lna.endpointHandlers = [];
            lna.activityManager.unsubscribeAll();
            if (finished != null) 
                finished();
        });
    };
}, {competencyPolling: "TimeoutHandler", pushPolling: "TimeoutHandler", recoveryPolling: "TimeoutHandler", competencyRequest: "XMLHttpRequest", userManager: "UserAdapter", storage: "StorageAdapter", activityManager: "ActivityAdapter", assetManager: "AssetAdapter", endpointHandlers: {name: "Array", arguments: ["SyncProcess"]}, errorHandle: "TimeoutHandler"}, {});
/**
 *  @author aaron.veden@eduworks.com
 */
var PEBL = function() {};
PEBL = stjs.extend(PEBL, null, [], function(constructor, prototype) {
    prototype.storage = null;
    prototype.userManager = null;
    prototype.activityManager = null;
    prototype.networkManager = null;
    prototype.launcherManager = null;
    prototype.xapiGenerator = null;
    prototype.assetManager = null;
    prototype.teacher = false;
    prototype.loaded = false;
    constructor.onReadyCallbacks = [];
    prototype.directMessageHandler = null;
    constructor.TLAEnabled = false;
    constructor.instance = null;
    constructor.start = function(teacher, callback, inRegistry) {
        if (PEBL.instance == null) {
            var pebl = new PEBL();
            pebl.loaded = false;
            pebl.teacher = teacher;
            UserProfile.TLADemo = PEBL.TLAEnabled;
            if (window.PEBLNative != null) {
                Debugger.debug("found native");
                pebl.storage = window.PEBLNative.storage;
                pebl.userManager = window.PEBLNative.userManager;
                pebl.activityManager = window.PEBLNative.activityManager;
                if (PEBL.TLAEnabled) 
                    pebl.launcherManager = window.PEBLNative.launcherManager;
                pebl.networkManager = window.PEBLNative.networkManager;
                pebl.assetManager = window.PEBLNative.assetManager;
                pebl.xapiGenerator = new XApiGenerator(pebl.userManager, pebl.storage, pebl.activityManager, PEBL.TLAEnabled);
                window.Lightbox.initDefaultLRSSettings();
                callback(pebl);
                for (var i = 0; i < PEBL.onReadyCallbacks.length; i++) 
                    PEBL.onReadyCallbacks[i](PEBL.instance);
            } else {
                Debugger.debug("created pebl libraries");
                if (inRegistry != null && inRegistry) {
                    IndexedDBStorageAdapterExists = false;
                    Debugger.debug("in registry");
                }
                if (IndexedDBStorageAdapterExists == true) 
                    pebl.storage = new IndexedDBStorageAdapter(function() {
                        PEBL.finishBootSequence(pebl, callback);
                    });
                 else {
                    if (localStorage != null) 
                        pebl.storage = new KeyValueStorageAdapter(localStorage);
                     else if (sessionStorage != null) 
                        pebl.storage = new KeyValueStorageAdapter(sessionStorage);
                     else 
                        pebl.storage = new InMemoryStorageAdapter(localStorage);
                    PEBL.finishBootSequence(pebl, callback);
                }
            }
        } else if (callback != null) {
            callback(PEBL.instance);
            for (var i = 0; i < PEBL.onReadyCallbacks.length; i++) 
                PEBL.onReadyCallbacks[i](PEBL.instance);
        }
    };
    constructor.finishBootSequence = function(pebl, callback) {
        if (pebl.storage != null) {
            if (PEBL.TLAEnabled) 
                pebl.userManager = new OpenIDConnectUserAdapter(pebl.storage);
             else 
                pebl.userManager = new OpenIDUserAdapter(pebl.storage);
            pebl.activityManager = new LocalActivityAdapter(pebl.userManager, pebl.storage);
            pebl.xapiGenerator = new XApiGenerator(pebl.userManager, pebl.storage, pebl.activityManager, PEBL.TLAEnabled);
            if (PEBL.TLAEnabled) 
                pebl.launcherManager = new LocalLauncherAdapter(pebl.userManager, pebl.activityManager, pebl.xapiGenerator);
            pebl.assetManager = new LocalAssetAdapter(pebl.userManager, pebl.storage, pebl.activityManager);
            pebl.networkManager = new LocalNetworkAdapter(pebl.userManager, pebl.storage, pebl.activityManager, pebl.assetManager, PEBL.TLAEnabled);
            pebl.loaded = true;
            PEBL.instance = pebl;
            callback(pebl);
            for (var i = 0; i < PEBL.onReadyCallbacks.length; i++) 
                PEBL.onReadyCallbacks[i](pebl);
        }
    };
    prototype.retrieveActivityListing = function(callback) {
        if (PEBL.TLAEnabled) {
            this.activityManager.retrieveActivityListing(callback);
        } else 
            callback();
    };
    prototype.login = function(loggedIn) {
        var self = this;
        var loginRoutine = function() {
            if ((self.userManager != null) && (!self.userManager.loggedIn())) {
                self.userManager.login(function() {
                    if (!self.userManager.isSameUser()) 
                        self.xapiGenerator.login();
                    if (self.userManager.loggedIn()) {
                        self.networkManager.activate(self.teacher);
                        if (PEBL.TLAEnabled) 
                            self.launcherManager.connect();
                        self.activityManager.hookDirectMessages();
                    }
                    if (loggedIn != null) 
                        loggedIn();
                });
            } else if (loggedIn != null) 
                loggedIn();
        };
        if (PEBL.TLAEnabled) {
            if (!this.activityManager.hasActivityListing()) 
                this.retrieveActivityListing(loginRoutine);
             else 
                loginRoutine();
        } else {
            loginRoutine();
        }
    };
    prototype.loginStoredUser = function(callback) {
        var self = this;
        this.storage.getCurrentUser(function(id) {
            if ((id == null) && (callback != null)) {
                callback();
            } else 
                self.loginAsUser(id, null, callback);
        });
    };
    prototype.loginAsUser = function(username, password, loggedIn) {
        var self = this;
        if ((this.userManager != null) && (!this.userManager.loggedIn())) {
            this.userManager.loginAsUser(username, password, function() {
                if (!self.userManager.isSameUser()) 
                    self.xapiGenerator.login();
                if (self.userManager.loggedIn()) {
                    self.networkManager.activate(self.teacher);
                    if (PEBL.TLAEnabled) 
                        self.launcherManager.connect();
                    self.activityManager.hookDirectMessages();
                }
                if (loggedIn != null) 
                    loggedIn();
            });
        }
    };
    prototype.logout = function(callback) {
        if (this.userManager != null) {
            this.xapiGenerator.logout();
            var self = this;
            this.networkManager.disable(function() {
                if (PEBL.TLAEnabled) 
                    self.launcherManager.close();
                self.userManager.logout(callback);
            });
        }
    };
    prototype.eventPulled = function(book, target, location, card, url, docType, name, externalURL) {
        this.xapiGenerator.pulled(book, target, location, card, url, docType, name, externalURL);
    };
    prototype.eventChecklisted = function(checklistId, checklistUser, checklistPrompts, checklistResponses) {
        this.xapiGenerator.checklisted(checklistId, checklistUser, checklistPrompts, checklistResponses);
    };
    prototype.eventCompatibilityTested = function(eReaderName, osName, osVersion, browserName, browserVersion, userAgent, appVersion, platform, vendor, loginResult, localStorageResult, indexedDBResult, discussionResult, contentMorphingResult, figureResult, popoutResult, hotwordResult, quizResult, showHideResult) {
        this.xapiGenerator.compatibilityTested(eReaderName, osName, osVersion, browserName, browserVersion, userAgent, appVersion, platform, vendor, loginResult, localStorageResult, indexedDBResult, discussionResult, contentMorphingResult, figureResult, popoutResult, hotwordResult, quizResult, showHideResult);
    };
    prototype.eventCompleted = function(activity, description) {
        this.xapiGenerator.completed(this.activityManager.getParentActivity(), activity, description);
    };
    prototype.eventInitialized = function() {
        this.xapiGenerator.TLAinitialized();
    };
    prototype.eventNextPage = function(firstVisibleCFI, lastVisibleCFI) {
        this.xapiGenerator.nextPage(new Page(firstVisibleCFI, lastVisibleCFI));
    };
    prototype.eventPrevPage = function(firstVisibleCFI, lastVisibleCFI) {
        this.xapiGenerator.prevPage(new Page(firstVisibleCFI, lastVisibleCFI));
    };
    prototype.eventPassed = function(score, activity, description) {
        this.xapiGenerator.passed(score, activity, description);
    };
    prototype.eventFailed = function(score, activity, description) {
        this.xapiGenerator.failed(score, activity, description);
    };
    prototype.eventAnswered = function(prompt, answers, answer, correct, done) {
        this.xapiGenerator.answered(prompt, answers, answer, correct, done);
    };
    prototype.eventPreferred = function(target, type) {
        this.xapiGenerator.preferred(target, type);
    };
    prototype.eventContentMorphed = function(level, competency, cfi) {
        this.xapiGenerator.morphed(level, competency, cfi);
    };
    prototype.eventStartSession = function() {
        this.xapiGenerator.startSession();
    };
    prototype.eventEndSession = function() {
        this.xapiGenerator.endSession();
        if (this.userManager.loggedIn()) 
            this.networkManager.push(null);
    };
    prototype.getUserName = function() {
        return this.userManager.getUser().getName();
    };
    prototype.shareAnnotation = function(rawAnnotation) {
        var user = this.userManager.getUser();
        if (user.getName().equals("guest")) 
            return;
        var annotation = new Annotation(rawAnnotation);
        var parentActivity = this.activityManager.getParentActivity();
        var stmt = new ADL.XAPIStatement(new ADL.XAPIStatement.Agent(user.generateAgent(), user.getName()), new ADL.XAPIStatement.Verb("http://adlnet.gov/expapi/verbs/shared", "shared"), new ADL.XAPIStatement.Activity("pebl://" + annotation.containerPath, null, annotation.pack()));
        stmt.generateId();
        stmt["timestamp"] = EcDate.toISOString(annotation.timestamp);
        var containerPath = "pebl://" + annotation.containerPath;
        if ((parentActivity != null) && (parentActivity != "")) 
            containerPath = parentActivity;
        stmt.addParentActivity(new ADL.XAPIStatement.Activity(containerPath, null, null));
        this.storage.storeOutgoing(user, stmt);
    };
    prototype.openBook = function(containerPath, callback) {
        if (containerPath.lastIndexOf("/") != -1) 
            containerPath = containerPath.substring(containerPath.lastIndexOf("/") + 1);
        var p = this;
        this.activityManager.openBook(containerPath, function(sameBook) {
            if (!sameBook) {
                p.xapiGenerator.terminated();
                p.activityManager.clearParentActivity();
                p.xapiGenerator.interacted();
                p.xapiGenerator.initialized(null, null);
            } else {
                if (window.ReadiumInterop != null) 
                    p.xapiGenerator.jumpedPage(Page.fromMap(window.ReadiumInterop.getFirstAndLastVisibleCFI()));
            }
            if (callback != null) 
                callback();
        });
        this.unsubscribeAll();
    };
    prototype.startActivity = function(activity, name, description) {
        if (activity == null) 
            activity = "";
        if (this.activityManager.getParentActivity() != activity) {
            if ((this.activityManager.getParentActivity() != null) && (this.activityManager.getParentActivity() != "")) 
                this.xapiGenerator.terminated();
            this.activityManager.startParentActivity(activity);
            if (activity != "") 
                this.xapiGenerator.initialized(name, description);
            this.unsubscribeAll();
        }
    };
    prototype.initializeToc = function(initialToc) {
        this.activityManager.initializeToc(initialToc);
    };
    prototype.removeToc = function(id, section) {
        this.storage.removeToc(this.userManager.getUser(), this.activityManager.getBook(), section, id);
    };
    prototype.getToc = function(callback) {
        this.activityManager.getToc(callback);
    };
    prototype.postMessage = function(rawMessage) {
        var up = this.userManager.getUser();
        if (up.getName().equals("guest")) 
            return;
        rawMessage[Message.KEY_USER_ID] = this.userManager.getUser().getIdentity();
        var message = new Message(rawMessage);
        var xapi = new ADL.XAPIStatement(this.userManager.getUser().generateAgent(), new ADL.XAPIStatement.Verb("http://adlnet.gov/expapi/verbs/responded", "responded"), new ADL.XAPIStatement.Activity("peblThread://" + message.thread, message.prompt, message.pack()));
        xapi.generateId();
        xapi["timestamp"] = message.timestamp;
        var containerPath = "pebl://" + this.activityManager.getBook();
        var parentActivity = this.activityManager.getParentActivity();
        if ((parentActivity != null) && (parentActivity != "")) 
            containerPath = parentActivity;
        xapi.addParentActivity(new ADL.XAPIStatement.Activity(containerPath, null, null));
        this.storage.postMessage(this.userManager.getUser(), message.thread, xapi);
        this.storage.storeOutgoing(this.userManager.getUser(), xapi);
    };
    prototype.removeNotification = function(id) {
        this.storage.removeNotification(this.userManager.getUser(), id);
    };
    prototype.setNotificationHook = function(callback) {
        this.activityManager.setDirectMessageHandler(callback);
    };
    prototype.getNotifications = function(callback) {
        this.storage.getNotifications(this.userManager.getUser(), callback);
    };
    prototype.removeMessage = function(id, thread) {
        var up = this.userManager.getUser();
        if (up.getName().equals("guest")) 
            return;
        var user = this.userManager.getUser();
        var parentActivity = this.activityManager.getParentActivity();
        var stmt = new ADL.XAPIStatement(new ADL.XAPIStatement.Agent(user.generateAgent(), user.getName()), new ADL.XAPIStatement.Verb("http://adlnet.gov/expapi/verbs/voided", "voided"), new ADL.XAPIStatement.StatementRef(id));
        XApiUtils.addTimestamp(stmt);
        var containerPath = "peblThread://" + thread;
        if ((parentActivity != null) && (parentActivity != "")) 
            containerPath = parentActivity;
        stmt.addParentActivity(new ADL.XAPIStatement.Activity(containerPath, null, null));
        this.storage.storeOutgoing(user, stmt);
        this.storage.removeMessage(this.userManager.getUser(), id, thread);
    };
    prototype.unsubscribeAll = function() {
        this.activityManager.unsubscribeAll();
    };
    prototype.subscribeToDiscussion = function(thread, callback) {
        this.activityManager.subscribe(thread, function(packets) {
            var result = [];
            for (var i = 0; i < packets.length; i++) 
                result.push(packets[i].toObject());
            if (callback != null) 
                callback(result);
        });
        this.getMessages(thread, function(incoming) {
            if (callback != null) 
                callback(incoming);
        });
    };
    prototype.getMessages = function(thread, callback) {
        this.storage.getMessages(this.userManager.getUser(), thread, function(raw) {
            var result = [];
            for (var i = 0; i < raw.length; i++) 
                result.push(new Message(raw[i]).toObject());
            if (callback != null) 
                callback(result);
        });
    };
    prototype.getGeneralAnnotations = function(containerPath, callback) {
        this.storage.getGeneralAnnotations(this.userManager.getUser(), containerPath, function(raw) {
            var result = [];
            for (var i = 0; i < raw.length; i++) {
                result.push(new SharedAnnotation(raw[i]).toObject());
            }
            if (callback != null) 
                callback(result);
        });
    };
    prototype.getEvents = function(containerPath, callback) {
        this.storage.getGeneralAnnotations(this.userManager.getUser(), containerPath, function(raw) {
            var result = [];
            for (var i = 0; i < raw.length; i++) {
                var xapi = raw[i];
                if (Action.is(xapi)) 
                    result.push(new Action(xapi).toObject());
                 else if (Navigation.is(xapi)) 
                    result.push(new Navigation(xapi).toObject());
                 else if (Session.is(xapi)) 
                    result.push(new Session(xapi).toObject());
            }
            if (callback != null) 
                callback(result);
        });
    };
    prototype.getCompetencies = function(callback) {
        this.storage.getCompetencies(this.userManager.getUser(), function(competencies) {
            if (callback != null) 
                callback(competencies);
        });
    };
    prototype.getAnnotations = function(containerPath, callback) {
        this.storage.getAnnotations(this.userManager.getUser(), containerPath, function(raw) {
            var result = [];
            for (var i = 0; i < raw.length; i++) 
                result.push(new Annotation(raw[i]).toObject());
            if (callback != null) 
                callback(result);
        });
    };
    prototype.postHarnessMessage = function(target, id, data) {
        if (window.ReadiumInterop != null) {
            var pack = [id, data];
            window.ReadiumInterop.postHarnessMessage(target, pack);
        }
    };
    prototype.getAsset = function(id, callback) {
        this.storage.getAsset(id, callback);
    };
    prototype.addAnnotation = function(annotationJSON) {
        var up = this.userManager.getUser();
        if (up.getName().equals("guest")) 
            return null;
        annotationJSON[Annotation.KEY_PARENT_ACTIVITY] = this.activityManager.getParentActivity();
        var annotation = new Annotation(annotationJSON);
        var xapi = new ADL.XAPIStatement(this.userManager.getUser().generateAgent(), new ADL.XAPIStatement.Verb("http://adlnet.gov/expapi/verbs/commented", "commented"), new ADL.XAPIStatement.Activity("pebl://" + annotation.containerPath, "", annotation.pack()));
        xapi.generateId();
        xapi["timestamp"] = EcDate.toISOString(annotation.timestamp);
        var containerPath = "pebl://" + annotation.containerPath;
        var parentActivity = this.activityManager.getParentActivity();
        if ((parentActivity != null) && (parentActivity != "")) 
            containerPath = parentActivity;
        xapi.addParentActivity(new ADL.XAPIStatement.Activity(containerPath, null, null));
        this.storage.storeOutgoing(this.userManager.getUser(), xapi);
        this.storage.saveAnnotation(this.userManager.getUser(), annotation.containerPath, xapi);
        return xapi["id"];
    };
    prototype.removeSharedAnnotation = function(rawAnnotation) {
        var up = this.userManager.getUser();
        if (up.getName().equals("guest")) 
            return;
        var annotation = new SharedAnnotation(rawAnnotation);
        var user = this.userManager.getUser();
        var parentActivity = this.activityManager.getParentActivity();
        var stmt = new ADL.XAPIStatement(new ADL.XAPIStatement.Agent(user.generateAgent(), user.getName()), new ADL.XAPIStatement.Verb("http://adlnet.gov/expapi/verbs/voided", "voided"), new ADL.XAPIStatement.StatementRef(annotation.id));
        XApiUtils.addTimestamp(stmt);
        var containerPath = "pebl://" + annotation.containerPath;
        if ((parentActivity != null) && (parentActivity != "")) 
            containerPath = parentActivity;
        stmt.addParentActivity(new ADL.XAPIStatement.Activity(containerPath, null, null));
        this.storage.storeOutgoing(user, stmt);
        this.storage.removeSharedAnnotation(user, annotation.id);
    };
    prototype.removeAnnotation = function(rawAnnotation) {
        var up = this.userManager.getUser();
        if (up.getName().equals("guest")) 
            return;
        var annotation = new Annotation(rawAnnotation);
        var user = this.userManager.getUser();
        var parentActivity = this.activityManager.getParentActivity();
        var stmt = new ADL.XAPIStatement(new ADL.XAPIStatement.Agent(user.generateAgent(), user.getName()), new ADL.XAPIStatement.Verb("http://adlnet.gov/expapi/verbs/voided", "voided"), new ADL.XAPIStatement.StatementRef(annotation.id));
        XApiUtils.addTimestamp(stmt);
        var containerPath = "pebl://" + annotation.containerPath;
        if ((parentActivity != null) && (parentActivity != "")) 
            containerPath = parentActivity;
        stmt.addParentActivity(new ADL.XAPIStatement.Activity(containerPath, null, null));
        this.storage.storeOutgoing(user, stmt);
        this.storage.removeAnnotation(user, annotation.id, annotation.containerPath);
    };
    constructor.registerReadyCallback = function(readyCallback) {
        if (PEBL.instance != null) 
            readyCallback(PEBL.instance);
         else 
            PEBL.onReadyCallbacks.push(readyCallback);
    };
    prototype.debugLog = function() {
        return Debugger.logs;
    };
}, {storage: "StorageAdapter", userManager: "UserAdapter", activityManager: "ActivityAdapter", networkManager: "NetworkAdapter", launcherManager: "LauncherAdapter", xapiGenerator: "XApiGenerator", assetManager: "AssetAdapter", onReadyCallbacks: {name: "Array", arguments: [{name: "Callback1", arguments: ["PEBL"]}]}, directMessageHandler: {name: "Callback1", arguments: [{name: "Array", arguments: [{name: "Map", arguments: [null, "Object"]}]}]}, instance: "PEBL"}, {});

if (!window.PEBLPreventAutoLogin) {
    PEBL.registerReadyCallback(function() {
	var e = document.getElementById("top-menu");
	if (e != null) {
	    
	    var li = $('<li id="loginTopMenu" class="menu-item menu-item-type-post_type menu-item-object-page"></li>');
	    $(e).append(li[0]);
	    pebl.loginStoredUser(function () {
		Lightbox.createLoginButton("loginTopMenu");
	    });
	    
	} else {
	    if (!window.PEBLbuttonLogin)
		pebl.login(function() {
		    dosomething();
		});
	}
    });
}

window.Lightbox = {
    close : function() {
	var lightBox = document.getElementById('lightBox');
	var dimOverlay = document.getElementById('dimOverlay');
	lightBox.parentNode.removeChild(lightBox);
	dimOverlay.parentNode.removeChild(dimOverlay);
    },

    addElement : function (element) {
	var lightBoxContent = document.getElementById('lightBoxContent');
	if (lightBoxContent != null)
	    lightBoxContent.appendChild(element);
    },

    clear : function () {
	var lightBoxContent = document.getElementById('lightBoxContent');
	if (lightBoxContent != null)
	    lightBoxContent.innerHTML = "";
    },

    displayLRSSettings : function() {
    	document.getElementById('lightBoxContent').style.display = 'none';
    	document.getElementById('lightBoxContentSecondary').style.display = 'block';
    	var settingsObject = window.Lightbox.getLRSSettings();
    	$('#lrsURLInput').val(settingsObject.lrsURL);
    	$('#lrsPasswordInput').val(settingsObject.lrsPassword);
    	$('#lrsTokenInput').val(settingsObject.lrsToken);
	$('#lrsUsernameInput').val(settingsObject.lrsUsername);
    },

    closeLRSSettings : function() {
    	document.getElementById('lightBoxContentSecondary').style.display = 'none';
    	document.getElementById('lightBoxContent').style.display = 'block';
    },

    saveLRSSettings : function() {
    	var lrsURL = $('#lrsURLInput').val();
    	var lrsPassword = $('#lrsPasswordInput').val();
    	var lrsToken = $('#lrsTokenInput').val();
	var lrsUsername = $('#lrsUsernameInput').val();

    	var settingsObject = {
    	    "lrsURL": lrsURL,
    	    "lrsPassword": lrsPassword,
    	    "lrsToken": lrsToken,
            "lrsUsername": lrsUsername
    	};
    	localStorage.setItem("LRSAuth", JSON.stringify(settingsObject));
    },

    initDefaultLRSSettings : function(reset) {
    	var lrsURL = "https://lrs.peblproject.com/";
    	var lrsPassword = null;
    	var lrsToken = "ZmI0YmRkZmM5Yzc2NzM2Mjg5MmUzOWI2NjUyZmM3YzgwZDcxMGMzZDowNGNiNDJmNTgzODZkN2ZkMDgzNGJmMDcwMmRjMDFjY2I0YzVkNWRi";
	var lrsUsername = null;
    	var currentSettings = window.Lightbox.getLRSSettings();

    	var settingsObject = {
    	    "lrsURL": lrsURL,
    	    "lrsPassword": lrsPassword,
    	    "lrsToken": lrsToken,
            "lrsUsername": lrsUsername
    	};
    	if (reset || currentSettings == null)
    	    localStorage.setItem("LRSAuth", JSON.stringify(settingsObject));
    },

    getLRSSettings : function() {
    	var settingsObject = localStorage.getItem("LRSAuth");
    	return JSON.parse(settingsObject);
    },

    getLRSURL : function(callback) {
    	var settingsObject = window.Lightbox.getLRSSettings();
    	callback(settingsObject.lrsURL);
    },

    getLRSPassword : function(callback) {
    	var settingsObject = window.Lightbox.getLRSSettings();
    	var lrsPassword;
    	if (settingsObject.lrsPassword != null && settingsObject.lrsPassword.length > 0)
    	    lrsPassword = settingsObject.lrsPassword;
    	else
    	    lrsPassword = null;
    	callback(lrsPassword);
    },

    getLRSToken : function(callback) {
    	var settingsObject = window.Lightbox.getLRSSettings();
    	var lrsToken;
    	if (settingsObject.lrsToken != null && settingsObject.lrsToken.length > 0)
    	    lrsToken = settingsObject.lrsToken;
    	else
    	    lrsToken = null;
    	callback(lrsToken);
    },

    getLRSUsername : function(callback) {
	var settingsObject = window.Lightbox.getLRSSettings();
	var lrsUsername;
	if (settingsObject.lrsUsername != null && settingsObject.lrsUsername.length > 0)
            lrsUsername = settingsObject.lrsUsername;
	else
            lrsUsername = null;
	callback(lrsUsername);
    },

    createLoginForm : function () {
	window.Lightbox.create("login", false);

	var lightBoxContent = document.getElementById('lightBoxContent');
	var lightBoxContentSecondary = document.getElementById('lightBoxContentSecondary');
	
	var selects = $('<br/>Select your username:<br/><br/><select id="loginUserNameSelector"><option>Learner</option><option>Learner1</option><option>Learner2</option><option>Learner3</option><option>Learner5</option><option>Learner7</option></select>');
	lightBoxContent.appendChild(selects[0]);
	lightBoxContent.appendChild(selects[1]);
	lightBoxContent.appendChild(selects[2]);
	lightBoxContent.appendChild(selects[3]);
	lightBoxContent.appendChild(selects[4]);

	var login = $('<br/><br/><input type="button" value="Login" id="loginUserNameSubmit" />');
	lightBoxContent.appendChild(login[0]);
	lightBoxContent.appendChild(login[1]);
	lightBoxContent.appendChild(login[2]);

	var lrsSettingsButton = $('<button id="lrsSettingsButton" onclick="window.Lightbox.displayLRSSettings();">LRS Settings</button>');
	lightBoxContent.appendChild(lrsSettingsButton[0]);

	var lrsSettingsHeader = $('<h4>Enter either a username and password, or a token.</h4>');
	var lrsURLInput = $('<p>LRS URL: <textarea id="lrsURLInput" rows="1" cols="50"></textarea></p>');
	var lrsUsernameInput = $('<p>LRS Username: <input type="text" id="lrsUsernameInput" size="30" /></p>');
	var lrsPasswordInput = $('<p>LRS Password: <input type="password" id="lrsPasswordInput" size="30" /></p><p>OR</p>');
	var lrsTokenInput = $('<p>LRS Token: <textarea type="text" rows="5" cols="50" id="lrsTokenInput"></textarea></p>');
	var lrsCancelButton = $('<button id="lrsCancelButton" onclick="window.Lightbox.closeLRSSettings();">Cancel</button>');
	var lrsSaveButton = $('<button id="lrsSaveButton" onclick="window.Lightbox.saveLRSSettings();window.Lightbox.closeLRSSettings();">Save</button>');
	var lrsDefaultButton = $('<button id="lrsDefaultButton" onclick="window.Lightbox.initDefaultLRSSettings(true);window.Lightbox.displayLRSSettings();">Load Defaults</button>');

	lightBoxContentSecondary.appendChild(lrsSettingsHeader[0]);
	lightBoxContentSecondary.appendChild(lrsURLInput[0]);
	lightBoxContentSecondary.appendChild(lrsUsernameInput[0]);
	lightBoxContentSecondary.appendChild(lrsPasswordInput[0]);
	lightBoxContentSecondary.appendChild(lrsPasswordInput[1]);
	lightBoxContentSecondary.appendChild(lrsTokenInput[0]);
	lightBoxContentSecondary.appendChild(lrsCancelButton[0]);
	lightBoxContentSecondary.appendChild(lrsSaveButton[0]);
	lightBoxContentSecondary.appendChild(lrsDefaultButton[0]);
    },

    openIDLogin : function () {

	var loginButton = $('<input type="submit" value="Login" />');
	
	var loginFrame = $('#loginIFrame');
	if (loginFrame.length == 0) {
	    loginFrame = $('<iframe id="loginIFrame" src="about:blank" style="width:100%;margin-bottom:20px;margin-top:30px;height:550px"></iframe>');

	    lf = loginFrame;

	    loginFrame.off();
	    loginFrame.on("load", function (x) {
		var src = window.top.location.protocol + "//" + window.top.location.host;
		var iFrameLocation = loginFrame[0].contentWindow.location;

		if ((iFrameLocation.protocol + "//" + iFrameLocation.host) == src) {		    
		    var query = iFrameLocation.toString();

		    $(document.body).append(loginFrame);
		    
		    window.Lightbox.close($(document.getElementById('lightBoxContent')));		    
		    var username = null;
		    
		    if (query.indexOf("?") != -1) {
			var keyValues = query.substring(query.indexOf("?")+1).split("&");			   
			
			for (var i = 0; i < keyValues.length; i++) {
			    var kv = keyValues[i].split("=");
			    if ((kv[0] == "openid.identity") || (kv[0] == "openid_identity")) {
				username = decodeURIComponent(kv[1]);
			    }
			}	   
		    }
		    pebl.loginAsUser(username, "", function (x) {

		    });
		}
	    });
	    
	    $(document.body).append(loginFrame);
	} else {
	    loginFrame[0].src = "";
	}

	var lightBoxContent = $(document.getElementById('lightBoxContent'));
	if (lightBoxContent.length == 0) {
	    window.Lightbox.create("login", false);
	    lightBoxContent = $(document.getElementById('lightBoxContent'));
	}
	
	var loginStart = $("#loginRefresh");
	if (loginStart.length == 0)
	    loginStart = $('<input id="loginRefresh" type="button" style="margin-top:20px" value="Return To Login Screen" />');
	loginStart.off();
	loginStart.on("click", function () {
	    Lightbox.openIDLogin();
	});

	lightBoxContent.append(loginStart);	
	lightBoxContent.append(loginFrame);
	var loginForm = $('#loginFormSubmit');
	if (loginForm.length == 0) {
	    loginForm = $('<form id="loginFormSubmit" action="https://people.extension.org/opie" method="GET">' +
 			  '<input type="hidden" name="openid.identity" value="http://specs.openid.net/auth/2.0/identifier_select"/>' +
			  '<input type="hidden" name="openid.claimed_id" value="http://specs.openid.net/auth/2.0/identifier_select"/>' +  
			  '<input type="hidden" name="openid.mode" value="checkid_setup"/>' +
			  '<input type="hidden" name="openid.ns" value="http://specs.openid.net/auth/2.0" />' +
			  '<input type="hidden" name="openid.return_to" id="returnValue" value="" />' +
			  '</form>');
	    
	    $(loginFrame[0].contentDocument.body).append(loginForm);
	    loginFrame[0].contentDocument.getElementById("returnValue").value = window.top.location.protocol + "//" + window.top.location.host;
	}
	
	loginFrame[0].contentDocument.getElementById("loginFormSubmit").submit();	   
    },
    
    createLoginButton : function (element) {
	var loginButton = $('<input type="submit" value="Login" />');
	
	var loginFrame = $('#loginIFrame');
	var loginFunction;
	var logoutFunction;
	if (loginFrame.length == 0) {
	    loginFrame = $('<iframe id="loginIFrame" src="about:blank" style="width:100%;margin-bottom:20px;margin-top:30px;height:550px"></iframe>');

	    lf = loginFrame;	   
	    
	    $(document.body).append(loginFrame);
	} else {
	    loginFrame[0].src = "";
	}

	loginFrame.off();
	loginFrame.on("load", function (x) {
	    var src = window.top.location.protocol + "//" + window.top.location.host;
	    var iFrameLocation = loginFrame[0].contentWindow.location;

	    if ((iFrameLocation.protocol + "//" + iFrameLocation.host) == src) {		    
		var query = iFrameLocation.toString();

		$(document.body).append(loginFrame);
		
		window.Lightbox.close($(document.getElementById('lightBoxContent')));		    

		var username = null;
		
		if (query.indexOf("?") != -1) {
		    var keyValues = query.substring(query.indexOf("?")+1).split("&");			   		   
		    
		    for (var i = 0; i < keyValues.length; i++) {
			var kv = keyValues[i].split("=");
			if ((kv[0] == "openid.identity") || (kv[0] == "openid_identity")) {
			    username = decodeURIComponent(kv[1]);
			}
		    }	   
		}
		pebl.loginAsUser(username, "", logoutFunction);
	    }
	});

	logoutFunction = function () {
	    loginButton.off();
	    loginButton.val("Logout");
	    loginButton.on("click", function () {
		loginButton.val("Login");
		loginButton.off();
		loginButton.on("click", loginFunction);
		pebl.logout();
	    });
	}
	
	loginFunction = function (){
	    var lightBoxContent = $(document.getElementById('lightBoxContent'));
	    if (lightBoxContent.length == 0) {
		window.Lightbox.create("login", true);
		lightBoxContent = $(document.getElementById('lightBoxContent'));
	    }
	    var loginStart = $('#loginRefresh');
	    if (loginStart.length == 0)
		loginStart = $('<input id="loginRefresh" type="button" style="margin-top:20px" value="Return To Login Screen" />');
	    loginStart.off();
	    loginStart.on("click", function () {
		Lightbox.openIDLogin();
	    });

	    lightBoxContent.append(loginStart);
	    lightBoxContent.append(loginFrame);
	    var loginForm = $('#loginFormSubmit');
	    if (loginForm.length == 0) {
		loginForm = $('<form id="loginFormSubmit" action="https://people.extension.org/opie" method="GET">' +
 			      '<input type="hidden" name="openid.identity" value="http://specs.openid.net/auth/2.0/identifier_select"/>' +
			      '<input type="hidden" name="openid.claimed_id" value="http://specs.openid.net/auth/2.0/identifier_select"/>' +  
			      '<input type="hidden" name="openid.mode" value="checkid_setup"/>' +
			      '<input type="hidden" name="openid.ns" value="http://specs.openid.net/auth/2.0" />' +
			      '<input type="hidden" name="openid.return_to" id="returnValue" value="" />' +
			      '</form>');
		
		$(loginFrame[0].contentDocument.body).append(loginForm);
		loginFrame[0].contentDocument.getElementById("returnValue").value = window.top.location.protocol + "//" + window.top.location.host;
	    }

	    loginFrame[0].contentDocument.getElementById("loginFormSubmit").submit();
	};

	loginButton.off();
	if (window.pebl && !pebl.userManager.loggedIn()) {	
	    loginButton.on("click", loginFunction);
	    
	    $('#' + element).append(loginButton);
	} else {
	    logoutFunction()
	    
	    $('#' + element).append(loginButton);
	}
    },

    createLoginFormWithFields : function () {
	window.Lightbox.create("login", false);

	var lightBoxContent = $(document.getElementById('lightBoxContent'));
	
	var username = $('<br/><span>Moodle Login Form</span><br/><input type="text" id="loginUserName" placeholder="Username" />');
	lightBoxContent.append(username);
	var password = $('<br/><input type="password" id="loginPassword" placeholder="Password" />');
	lightBoxContent.append(password);
	var error = $('<br/><span id="loginError" style="color:red;display:none;">Invalid username or password.</span>');
	lightBoxContent.append(error);
	
	var login = $('<br/><br/><input type="button" value="Login" id="loginUserNameSubmit" /><br/>');
	lightBoxContent.append(login);
    },
    
    create : function (lightBoxType, allowClickOut) {
	var lightBox,
            lightBoxContent,
            lightBoxContentSecondary,
            dimOverlay;

	lightBox = document.createElement('div');
	lightBox.id = 'lightBox';
	if (lightBoxType === 'discussion') {
            lightBox.classList.add('lightBox');
	} else if (lightBoxType ==='image') {
            lightBox.classList.add('lightBoxImage');
	} else if (lightBoxType ==='login') {
	    lightBox.classList.add('lightBox');
	    lightBox.classList.add('lightBoxLoginForm');
	}
	
	lightBoxContent = document.createElement('div');
	lightBoxContent.classList.add('lightBoxContent');
	lightBoxContentSecondary = document.createElement('div');
	lightBoxContentSecondary.id = 'lightBoxContentSecondary';
	lightBoxContentSecondary.style.display = 'none';
	if (lightBoxType === 'image') {
            lightBoxContent.classList.add('lightBoxContentImage');
	}
	lightBoxContent.id = 'lightBoxContent';
	lightBox.appendChild(lightBoxContent);
	lightBox.appendChild(lightBoxContentSecondary);

	dimOverlay = document.createElement('div');
	dimOverlay.id = 'dimOverlay';
	dimOverlay.classList.add('dimOverlay');

	document.body.appendChild(dimOverlay);
	document.body.appendChild(lightBox);

	$('.dimOverlay').on('click', function() {
            if ($('#lightBox').is(':visible')) {
		if (allowClickOut)
		    window.Lightbox.close();
            }
	});
    }
}

function dosomething() {
    window.pebl.openBook(window.ReadiumInterop.getEmbeddedBookName(), function() {
	window.pebl.initializeToc(window.staticTOC);
    });
}

function useOpenIDLoginButton(elementName) {
    window.PEBLbuttonLogin = true;
    
    Lightbox.createLoginButton(elementName);
}


    
    return PEBL;
});
